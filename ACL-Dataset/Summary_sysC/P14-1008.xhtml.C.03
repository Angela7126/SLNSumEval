<html>
<head>
<meta name="TextLength" content="SENT_NUM:15, WORD_NUM:521">
</head>
<body bgcolor="white">
<a href="#0" id="0">In this paper, we equip DCS with logical inference , which, in one point of view, is “ the best way of testing an NLP system ’ s semantic capacity ” [].</a>
<a href="#1" id="1">The idea is to borrow a minimal set of operators from relational algebra [] , which is already able to formulate the calculation in DCS and define abstract denotation , which is an abstraction of the computation of denotations guided by DCS trees.</a>
<a href="#2" id="2">In this section we describe the idea of representing natural language semantics by DCS trees, and achieving inference by computing logical relations among the corresponding abstract denotations.</a>
<a href="#3" id="3">Figure 2 shows an example with a quantifier “ every ” , which is marked as “⊂” on the edge ( 𝐥𝐨𝐯𝐞 ) ⁢ OBJ-ARG ⁢ ( 𝐝𝐨𝐠 ) and interpreted as a division operator q ⊂𝙾𝙱𝙹 (§ 2.2.</a>
<a href="#4" id="4">Abstract denotations are formulas constructed from a minimal set of relational algebra [] operators, which is already able to formulate the database queries defined by DCS trees.</a>
<a href="#5" id="5">For example, the semantics of “ students read books ” is given by the abstract denotation.</a>
<a href="#6" id="6">As the semantics of DCS trees is formulated by abstract denotations, the meanings of declarative sentences are represented by statements on abstract denotations.</a>
<a href="#7" id="7">For example, the statement of “ students read books ” is 𝐫𝐞𝐚𝐝∩ ( 𝐬𝐭𝐮𝐝𝐞𝐧𝐭𝚂𝚄𝙱𝙹 × 𝐛𝐨𝐨𝐤𝙾𝙱𝙹 ) ≠∅ , and the statement of “ Mary loves every dog ” is q ⊂𝙾𝙱𝙹⁢ ( Π𝙾𝙱𝙹⁢ ( F 2 ) , 𝐝𝐨𝐠 ) ≠∅ , which is logically equivalent to 𝐝𝐨𝐠⊂Π𝙾𝙱𝙹⁢ ( F 2.</a>
<a href="#8" id="8">Since meanings of sentences are represented by statements on abstract denotations, logical inference among sentences is reduced to deriving new relations among abstract denotations.</a>
<a href="#9" id="9">We built an inference engine to perform logical inference on abstract denotations as above.</a>
<a href="#10" id="10">If a node Σ in a DCS tree 𝒯 belongs to a mention cluster m , we take the abstract denotation [[ 𝒯Σ ]] and make a selection s m ⁢ ([[ 𝒯Σ ]]) , which is regarded as the abstract denotation of that mention.</a>
<a href="#11" id="11">The germ 𝙾𝙱𝙹⁢ ( 𝐛𝐥𝐚𝐦𝐞 ) and germ 𝙰𝚁𝙶⁢ ( 𝐝𝐞𝐚𝐭𝐡 ) in DCS tree of T are joined by the underscored path.</a>
<a href="#12" id="12">The abstract denotation of a germ is defined in a top-down manner for the root node Ρ of a DCS tree 𝒯 , we define its denotation [[ Ρ ]] 𝒯 as the denotation of the entire tree [[ 𝒯 ]] ; for a non-root node Τ and its parent node Σ , let the edge ( Σ , Τ ) be labeled by semantic roles ( r , r ′ ) , then define.</a>
<a href="#13" id="13">For example, the abstract denotation of germ 𝙰𝚁𝙶⁢ ( 𝐛𝐨𝐨𝐤 ) in Figure 1 is defined as Π𝙰𝚁𝙶⁢ ( 𝐛𝐨𝐨𝐤∩Π𝙾𝙱𝙹⁢ ( 𝐫𝐞𝐚𝐝∩ ( 𝐬𝐭𝐮𝐝𝐞𝐧𝐭𝚂𝚄𝙱𝙹 × 𝐛𝐨𝐨𝐤𝙾𝙱𝙹 ) ) ) , meaning “ books read by students ”.</a>
<a href="#14" id="14">Similarly, denotation of germ 𝙾𝙱𝙹⁢ ( 𝐛𝐥𝐚𝐦𝐞 ) in T of Figure 5 indicates the object of “ blame ” as in the sentence “ Tropical storm Debby is blamed for death ” , which is a tropical storm , is Debby , etc.</a>
</body>
</html>