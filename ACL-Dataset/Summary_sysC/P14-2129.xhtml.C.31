<html>
<head>
<meta name="TextLength" content="SENT_NUM:11, WORD_NUM:233">
</head>
<body bgcolor="white">
<a href="#0" id="0">Finite-state chunking and tagging methods are very fast for annotating non-hierarchical syntactic information, and are often applied in applications that do not require full syntactic analyses.</a>
<a href="#1" id="1">Scenarios such as incremental machine translation may benefit from some degree of hierarchical syntactic analysis without requiring fully connected parses.</a>
<a href="#2" id="2">We introduce hedge parsing as an approach to recovering constituents of length up to some maximum span L.</a>
<a href="#3" id="3">Table 1 presents hedge parsing accuracy on the development set for the full parsing baseline, where the output of regular PCFG parsing is transformed to hedges and evaluated, versus parsing with a hedgebank grammar, with no segmentation of the strings.</a>
<a href="#4" id="4">We find an order of magnitude speedup of parsing, but at the cost of 3 percent F-measure absolute.</a>
<a href="#5" id="5">Note that most of that loss is in recall, indicating that hedges predicted in that condition are nearly as reliable as in full parsing.</a>
<a href="#6" id="6">Table 2 shows the results on the development set when segmenting prior to hedge parsing.</a>
<a href="#7" id="7">The first row shows the result with no segmentation, the same as the last row in Table 1 for ease of reference.</a>
<a href="#8" id="8">The next row shows behavior with perfect segmentation.</a>
<a href="#9" id="9">The final two rows show performance with automatic segmentation, using a model that includes either unlabeled or labeled segmentation tags, as described in the last section.</a>
<a href="#10" id="10">Segmentation accuracy is better for the model with labels, although overall that accuracy is rather low.</a>
</body>
</html>