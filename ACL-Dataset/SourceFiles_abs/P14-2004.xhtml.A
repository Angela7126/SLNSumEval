<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN" "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <title>
   A Composite Kernel Approach for Dialog Topic Tracking withStructured Domain Knowledge from Wikipedia.
  </title>
 </head>
 <body>
  <div class="ltx_page_main">
   <div class="ltx_page_content">
    <div class="ltx_document ltx_authors_1line">
     <div class="ltx_section" id="S1">
      <h2 class="ltx_title ltx_title_section">
       <span class="ltx_tag ltx_tag_section">
        1
       </span>
       Introduction
      </h2>
      <div class="ltx_para" id="S1.p1">
       <p class="ltx_p">
        Human communications in real world situations interlace multiple topics which are related to each other in conversational contexts.
This fact suggests that a dialog system should be also capable of conducting multi-topic conversations with users to provide them a more natural interaction with the system.
However, the majority of previous work on dialog interfaces has focused on dealing with only a single target task.
Although some multi-task dialog systems have been proposed
        [10, 6, 4]
        ,
they have aimed at just choosing the most probable one for each input from the sub-systems, each of which is independently operated from others.
       </p>
      </div>
      <div class="ltx_para" id="S1.p2">
       <p class="ltx_p">
        To analyze and maintain dialog topics from a more systematic perspective in a given dialog flow, some researchers
        [12, 8, 1]
        have considered this dialog topic identification as a separate sub-problem of dialog management and attempted to solve it with text categorization approaches for the recognized utterances in a given turn.
The major obstacle to the success of these approaches results from the differences between written texts and spoken utterances.
In most text categorization tasks, the proper category for each textual unit can be assigned based only on its own content.
However, the dialog topic at each turn can be determined not only by the user’s intentions captured from the given utterances, but also by the system’s decisions for dialog management purposes.
Thus, the text categorization approaches can only be effective for the user-initiative cases when users tend to mention the topic-related expressions explicitly in their utterances.
       </p>
      </div>
      <div class="ltx_para" id="S1.p3">
       <p class="ltx_p">
        The other direction of dialog topic tracking approaches made use of external knowledge sources including domain models
        [13]
        , heuristics
        [15]
        , and agendas
        [2, 9]
        .
These knowledge-based methods have an advantage of dealing with system-initiative dialogs, because dialog flows can be controlled by the system based on given resources.
However, this aspect can limit the flexibility to handle the user’s responses which are contradictory to the system’s suggestions.
Moreover, these approaches face cost problems for building a sufficient amount of resources to cover broad states of complex dialogs, because these resources should be manually prepared by human experts for each specific domain.
       </p>
      </div>
      <div class="ltx_para" id="S1.p4">
       <p class="ltx_p">
        In this paper, we propose a composite kernel to explore various types of information obtained from Wikipedia for mixed-initiative dialog topic tracking without significant costs for building resources.
Composite kernels have been successfully applied to improve the performances in other NLP problems
        [17, 16]
        by integrating multiple individual kernels, which aim to overcome the errors occurring at one level by information from other levels.
Our composite kernel consists of a history sequence and a domain context tree kernels, both of which are composed based on similar textual units in Wikipedia articles to a given dialog context.
       </p>
      </div>
     </div>
     <div class="ltx_section" id="S2">
      <h2 class="ltx_title ltx_title_section">
       <span class="ltx_tag ltx_tag_section">
        2
       </span>
       Dialog Topic Tracking
      </h2>
      <div class="ltx_para" id="S2.p1">
       <p class="ltx_p">
        Dialog topic tracking can be considered as a classification problem to detect topic transitions.
The most probable pair of topics at just before and after each turn is predicted by the following classifier:
        f⁢(xt)=(yt-1,yt)
        ,
where
        xt
        contains the input features obtained at a turn
        t
        ,
        yt∈C
        , and
        C
        is a closed set of topic categories.
If a topic transition occurs at
        t
        ,
        yt
        should be different from
        yt-1
        .
Otherwise, both
        yt
        and
        yt-1
        have the same value.
       </p>
      </div>
      <div class="ltx_para" id="S2.p2">
       <p class="ltx_p">
        Figure
        1
        shows an example of dialog topic tracking in a given dialog fragment on Singapore tour guide domain between a tourist and a guide.
This conversation is divided into three segments, since
        f
        detects three topic transitions at
        t1
        ,
        t4
        and
        t6
        .
Then, a topic sequence of ‘Attraction’, ‘Transportation’, and ‘Food’ is obtained from the results.
       </p>
      </div>
     </div>
     <div class="ltx_section" id="S3">
      <h2 class="ltx_title ltx_title_section">
       <span class="ltx_tag ltx_tag_section">
        3
       </span>
       Wikipedia-based Composite Kernel for Dialog Topic Tracking
      </h2>
      <div class="ltx_para" id="S3.p1">
       <p class="ltx_p">
        The classifier
        f
        can be built on the training examples annotated with topic labels using supervised machine learning techniques.
Although some fundamental features extracted from the utterances mentioned at a given turn or in a certain number of previous turns can be used for training the model,
this information obtained solely from an ongoing dialog is not sufficient to identify not only user-initiative, but also system-initiative topic transitions.
       </p>
      </div>
      <div class="ltx_para" id="S3.p2">
       <p class="ltx_p">
        To overcome this limitation, we propose to leverage on Wikipedia as an external knowledge source that can be obtained without significant effort toward building resources for topic tracking.
Recently, some researchers
        [14, 3]
        have shown the feasibility of using Wikipedia knowledge to build dialog systems.
While each of these studies mainly focuses only on a single type of information including category relatedness or hyperlink connectedness,
this work aims at incorporating various knowledge obtained from Wikipedia into the model using a composite kernel method.
       </p>
      </div>
      <div class="ltx_para" id="S3.p3">
       <p class="ltx_p">
        Our composite kernel consists of two different kernels: a history sequence kernel and a domain context tree kernel.
Both represent the current dialog context at a given turn with a set of relevant Wikipedia paragraphs which are selected based on the cosine similarity between the term vectors of the recently mentioned utterances and each paragraph in the Wikipedia collection as follows:
       </p>
       sim⁢(x,pi)=ϕ⁢(x)⋅ϕ⁢(pi)|ϕ⁢(x)|⁢|ϕ⁢(pi)|,
       <p class="ltx_p">
        where
        x
        is the input,
        pi
        is the
        i
        -th paragraph in the Wikipedia collection,
        ϕ⁢(pi)
        is the term vector extracted from
        pi
        .
The term vector for the input
        x
        ,
        ϕ⁢(x)
        , is computed by accumulating the weights in the previous turns as follows:
       </p>
       ϕ⁢(x)=(α1,α2,⋯,α|W|)∈R|W|,
       <p class="ltx_p">
        where
        αi=∑j=0h(λj⋅t⁢f⁢i⁢d⁢f⁢(wi,u(t-j)))
        ,
        ut
        is the utterance mentioned in a turn
        t
        ,
        t⁢f⁢i⁢d⁢f⁢(wi,ut)
        is the product of term frequency of a word
        wi
        in
        ut
        and inverse document frequency of
        wi
        ,
        λ
        is a decay factor for giving more importance to more recent turns,
        |W|
        is the size of word dictionary, and
        h
        is the number of previous turns considered as dialog history features.
       </p>
      </div>
      <div class="ltx_para" id="S3.p4">
       <p class="ltx_p">
        After computing this relatedness between the current dialog context and every paragraph in the Wikipedia collection,
two kernel structures are constructed using the information obtained from the highly-ranked paragraphs in the Wikipedia.
       </p>
      </div>
      <div class="ltx_subsection" id="S3.SS1">
       <h3 class="ltx_title ltx_title_subsection">
        <span class="ltx_tag ltx_tag_subsection">
         3.1
        </span>
        History Sequence Kernel
       </h3>
       <div class="ltx_para" id="S3.SS1.p1">
        <p class="ltx_p">
         The first structure to be constructed for our composite kernel is a sequence of the most similar paragraph IDs of each turn from the beginning of the session to the current turn.
Formally, the sequence
         S
         at a given turn
         t
         is defined as:
        </p>
        S=(s0,⋯,st),
        <p class="ltx_p">
         where
         sj=argmaxi⁡(sim⁢(xj,pi))
         .
        </p>
       </div>
       <div class="ltx_para" id="S3.SS1.p2">
        <p class="ltx_p">
         Since our hypothesis is that the more similar the dialog histories of the two inputs are, the more similar aspects of topic transtions occur for them,
we propose a sub-sequence kernel
         [11]
         to map the data into a new feature space defined based on the similarity of each pair of history sequences as follows:
        </p>
        Ks⁢(S1,S2)=∑u∈𝒜n∑𝐢:u=S1⁢[𝐢]∑𝐣:u=S2⁢[𝐣]λl⁢(𝐢)+l⁢(𝐣),
        <p class="ltx_p">
         where
         𝒜
         is a finite set of paragraph IDs,
         S
         is a finite sequence of paragraph IDs,
         u
         is a subsequence of
         S
         ,
         S⁢[𝐣]
         is the subsequence with the
         i
         -th characters
         ∀i∈𝐣
         ,
         l⁢(𝐢)
         is the length of the subsequence, and
         λ∈(0,1)
         is a decay factor.
        </p>
       </div>
      </div>
      <div class="ltx_subsection" id="S3.SS2">
       <h3 class="ltx_title ltx_title_subsection">
        <span class="ltx_tag ltx_tag_subsection">
         3.2
        </span>
        Domain Context Tree Kernel
       </h3>
       <div class="ltx_para" id="S3.SS2.p1">
        <p class="ltx_p">
         The other kernel incorporates more various types of domain knowledge obtained from Wikipedia into the feature space.
In this method, each instance is encoded in a tree structure constructed following the rules in Figure
         2
         .
The root node of a tree has few children, each of which is a subtree rooted at each paragraph node in:
        </p>
        𝒫t={pi⁢|sim⁢(xt,pi)&gt;⁢θ},
        <p class="ltx_p">
         where
         θ
         is a threshold value to select the relevant paragraphs.
Each subtree consists of a set of features from a given paragraph in the Wikipedia collection in a hierarchical structure.
Figure
         3
         shows an example of a constructed tree.
        </p>
       </div>
       <div class="ltx_para" id="S3.SS2.p2">
        <p class="ltx_p">
         Since this constructed tree structure represents semantic, discourse, and structural information extracted from the similar Wikipedia paragraphs to each given instance,
we can explore these more enriched features to build the topic tracking model using a subset tree kernel
         [5]
         which computes the similarity between each pair of trees in the feature space as follows:
        </p>
        Kt⁢(T1,T2)=∑n1∈NT1∑n2∈NT2△⁢(n1,n2),
        <p class="ltx_p">
         where
         NT
         is the set of
         T
         ’s nodes,
         △⁢(n1,n2)=∑iIi⁢(ni)⋅Ii⁢(n2)
         , and
         Ii⁢(n)
         is a function that is 1 iff the
         i
         -th tree fragment occurs with root at node
         n
         and 0 otherwise.
        </p>
       </div>
      </div>
      <div class="ltx_subsection" id="S3.SS3">
       <h3 class="ltx_title ltx_title_subsection">
        <span class="ltx_tag ltx_tag_subsection">
         3.3
        </span>
        Kernel Composition
       </h3>
       <div class="ltx_para" id="S3.SS3.p1">
        <p class="ltx_p">
         In this work, a composite kernel is defined by combining the individual kernels including history sequence and domain context tree kernels, as well as the linear kernel between the vectors representing fundamental features extracted from the utterances themselves and the results of linguistic preprocessors.
The composition is performed by linear combination as follows:
        </p>
        <table class="ltx_equationgroup ltx_eqn_align" id="S5.EGx1">
         <tr class="ltx_equation ltx_align_baseline" id="S3.Ex7">
          <td class="ltx_eqn_center_padleft">
          </td>
          <td class="ltx_td ltx_align_right">
           K⁢(x1,x2)=
          </td>
          <td class="ltx_td ltx_align_left">
           α⋅Kl⁢(V1,V2)+β⋅Ks⁢(S1,S2)
          </td>
          <td class="ltx_eqn_center_padright">
          </td>
         </tr>
         <tr class="ltx_equation ltx_align_baseline" id="S3.Ex8">
          <td class="ltx_eqn_center_padleft">
          </td>
          <td class="ltx_td ltx_align_right">
          </td>
          <td class="ltx_td ltx_align_left">
           +γ⋅Kt⁢(T1,T2),
          </td>
          <td class="ltx_eqn_center_padright">
          </td>
         </tr>
        </table>
        <p class="ltx_p">
         where
         Vi
         ,
         Si
         , and
         Ti
         are the feature vector, history sequence, and domain context tree of
         xi
         , respectively,
         Kl
         is the linear kernel computed by inner product of the vectors,
         α
         ,
         β
         , and
         γ
         are coefficients for linear combination of three kernels, and
         α+β+γ=1
         .
        </p>
       </div>
      </div>
     </div>
     <div class="ltx_section" id="S4">
      <h2 class="ltx_title ltx_title_section">
       <span class="ltx_tag ltx_tag_section">
        4
       </span>
       Evaluation
      </h2>
      <div class="ltx_para" id="S4.p1">
       <p class="ltx_p">
        To demonstrate the effectiveness of our proposed kernel method for dialog topic tracking, we performed experiments on the Singapore tour guide dialogs which consists of 35 dialog sessions collected from real human-human mixed initiative conversations related to Singapore between guides and tourists.
All the recorded dialogs with the total length of 21 hours were manually transcribed, then these transcribed dialogs with 19,651 utterances were manually annotated with the following nine topic categories: Opening, Closing, Itinerary, Accommodation, Attraction, Food, Transportation, Shopping, and Other.
       </p>
      </div>
      <div class="ltx_para" id="S4.p2">
       <p class="ltx_p">
        Since we aim at developing the system which acts as a guide communicating with tourist users,
an instance for both training and prediction of topic transition was created for each turn of tourists.
The annotation of an instance is a pair of previous and current topics, and the actual number of labels occurred in the dataset is 65.
       </p>
      </div>
      <div class="ltx_para" id="S4.p3">
       <p class="ltx_p">
        For each instance, the term vector was generated from the utterances in current user turn, previous system turn, and history turns within the window sizes
        h=10
        .
Then, the history sequence and tree context structures for our composite kernel were constructed based on 3,155 articles related to Singapore collected from Wikipedia database dump as of February 2013.
For the linear kernel baseline, we used the following features: n-gram words, previous system actions, and current user acts which were manually annotated.
Finally, 8,318 instances were used for training the model.
       </p>
      </div>
      <div class="ltx_para" id="S4.p4">
       <p class="ltx_p">
        We trained the SVM models using SVM
        <sup class="ltx_sup">
         light
        </sup>
        [7]
        with the following five different combinations of kernels:
        Kl
        only,
        Kl
        with
        𝒫
        as features,
        Kl+Ks
        ,
        Kl+Kt
        , and
        Kl+Ks+Kt
        .
The threshold value
        θ
        for selecting
        𝒫
        was 0.5, and the combinations of kernels were performed with the same
        α
        ,
        β
        , or
        γ
        coefficient values for all sub-kernels.
All the evaluations were done in five-fold cross validation to the manual annotations with two different metrics: one is accuracy of the predicted topic label for every turn, and the other is precision/recall/F-measure for each event of topic transition occurred either in the answer or the predicted result.
       </p>
      </div>
      <div class="ltx_para" id="S4.p5">
       <p class="ltx_p">
        Table
        1
        compares the performances of the five combinations of kernels.
When just the paragraph IDs were included as additional features, it failed to improve the performances from the baseline without any external features.
However, our proposed kernels using history sequences and domain context trees achieved significant performances improvements for both evaluation metrics.
While the history sequence kernel enhanced the coverage of the model to detect topic transitions, the domain context tree kernel contributed to produce more precise outputs.
Finally, the model combining all the kernels outperformed the baseline by 7.53% in turn-level accuracy and 10.81% in transition-level F-measure.
       </p>
      </div>
      <div class="ltx_para" id="S4.p6">
       <p class="ltx_p">
        The error distributions in Figure
        4
        indicate that these performance improvements were achieved by resolving the errors not only on user-initiative topic transitions, but also on system-initiative cases, which implies the effectiveness of the structured knowledge from Wikipedia to track the topics in mixed-initiative dialogs.
       </p>
      </div>
     </div>
     <div class="ltx_section" id="S5">
      <h2 class="ltx_title ltx_title_section">
       <span class="ltx_tag ltx_tag_section">
        5
       </span>
       Conclusions
      </h2>
      <div class="ltx_para" id="S5.p1">
       <p class="ltx_p">
        This paper presented a composite kernel approach for dialog topic tracking.
This approach aimed to represent various types of domain knowledge obtained from Wikipedia as two structures: history sequences and domain context trees;
then incorporate them into the model with kernel methods.
Experimental results show that the proposed approaches helped to improve the topic tracking performances in mixed-initiative human-human dialogs with respect to the baseline model.
       </p>
      </div>
     </div>
    </div>
   </div>
  </div>
 </body>
</html>
