<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN" "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <title>
   A Novel Content Enriching Model for Microblog Using News Corpus.
  </title>
 </head>
 <body>
  <div class="ltx_page_main">
   <div class="ltx_page_content">
    <div class="ltx_document ltx_authors_1line">
     <span class="ltx_note ltx_role_footnotetext">
      <sup class="ltx_note_mark">
       †
      </sup>
      <span class="ltx_note_outer">
       <span class="ltx_note_content">
        <sup class="ltx_note_mark">
         †
        </sup>
        <span class="ltx_note_type">
         footnotetext:
        </span>
        <math alttext="{}^{*}" class="ltx_Math" display="inline" id="m7" xmlns="http://www.w3.org/1998/Math/MathML">
         <msup>
          <mi>
          </mi>
          <mo>
           *
          </mo>
         </msup>
        </math>
        Corresponding author
       </span>
      </span>
     </span>
     <div class="ltx_section" id="S1">
      <h2 class="ltx_title ltx_title_section">
       <span class="ltx_tag ltx_tag_section">
        1
       </span>
       Introduction
      </h2>
      <div class="ltx_para" id="S1.p1">
       <p class="ltx_p">
        During the past decade, the short text representation has been intensively studied. Previous researches
        [Phan et al.2008, Guo and Diab2012]
        show that while traditional methods are not so powerful due to the data sparseness problem, some semantic analysis based approaches are proposed and proved effective, and various topic models are among the most frequently used techniques in this area. Meanwhile, external knowledge has been found helpful
        [Hu et al.2009]
        in tackling the data scarcity problem by enriching short texts with informative context. Well-organized knowledge bases such as Wikipedia and WordNet are common tools used in relevant methods.
       </p>
      </div>
      <div class="ltx_para" id="S1.p2">
       <p class="ltx_p">
        Nowadays, most of the work on short text focuses on microblog. As a new form of short text, microblog has some unique features like informal spelling and emerging words, and many microblogs are strongly related to up-to-date topics as well. Every day, a great quantity of microblogs more than we can read is pushed to us, and finding what we are interested in becomes rather difficult, so the ability of choosing what kind of microblogs to read is urgently demanded by common user. Such ability can be implemented by effective short text classification.
       </p>
      </div>
      <div class="ltx_para" id="S1.p3">
       <p class="ltx_p">
        Treating microblogs as standard texts and directly classifying them cannot achieve the goal of effective classification because of sparseness problem. On the other hand, news on the Internet is of information abundance and many microblogs are news-related. They share up-to-date topics and sometimes quote each other. Thus, external knowledge, such as news, provides rich supplementary information for analysing and mining microblogs.
       </p>
      </div>
      <div class="ltx_para" id="S1.p4">
       <p class="ltx_p">
        Motivated by the idea of using topic model and external knowledge mentioned above, we present an LDA-based enriching method using the news corpus, and apply it to the task of microblog classification. The basic assumption in our model is that news articles and microblogs tend to share the same topics. We first infer the topic distribution of each microblog based on the topic-word distribution of news corpus obtained by the LDA estimation. With the above two distributions, we then add a number of words from news as additional information to microblogs by evaluating the relatedness of between each word and microblog, since words not appearing in the microblog may still be highly relevant.
       </p>
      </div>
      <div class="ltx_para" id="S1.p5">
       <p class="ltx_p">
        To sum up, our contributions are:
       </p>
       <ol class="ltx_enumerate" id="I1">
        <li class="ltx_item" id="I1.i1" style="list-style-type:none;">
         <span class="ltx_tag ltx_tag_enumerate">
          (1)
         </span>
         <div class="ltx_para" id="I1.i1.p1">
          <p class="ltx_p">
           We formulate the topic inference problem for short texts as a convex optimization problem.
          </p>
         </div>
        </li>
        <li class="ltx_item" id="I1.i2" style="list-style-type:none;">
         <span class="ltx_tag ltx_tag_enumerate">
          (1)
         </span>
         <div class="ltx_para" id="I1.i2.p1">
          <p class="ltx_p">
           We enrich the content of microblogs by inferring the association between microblogs and external words in a probabilistic perspective.
          </p>
         </div>
        </li>
        <li class="ltx_item" id="I1.i3" style="list-style-type:none;">
         <span class="ltx_tag ltx_tag_enumerate">
          (1)
         </span>
         <div class="ltx_para" id="I1.i3.p1">
          <p class="ltx_p">
           We evaluate our method on the real datasets and experiment results outperform the baseline methods.
          </p>
         </div>
        </li>
       </ol>
      </div>
     </div>
     <div class="ltx_section" id="S2">
      <h2 class="ltx_title ltx_title_section">
       <span class="ltx_tag ltx_tag_section">
        2
       </span>
       Related Work
      </h2>
      <div class="ltx_para" id="S2.p1">
       <p class="ltx_p">
        Based on the idea of exploiting external knowledge, many methods are proposed to improve the representation of short texts for classification and clustering. Among them, some directly utilize the structure information of organized knowledge base or search engine.
        Banerjee et al.2007
        use the title and the description of news article as two separate query strings to select related concepts as additional feature.
        Hu et al.2009
        present a framework to improve the performance of short text clustering by mining informative context with the integration of Wikipedia and WordNet.
       </p>
      </div>
      <div class="ltx_para" id="S2.p2">
       <p class="ltx_p">
        However, to better leverage external resource, some other methods introduce topic models.
        Phan et al.2008
        present a framework including an approach for short text topic inference and adds abstract words as extra feature.
        Guo and Diab2012
        modify classic topic models and proposes a matrix-factorization based model for sentence similarity calculation tasks.
       </p>
      </div>
      <div class="ltx_para" id="S2.p3">
       <p class="ltx_p">
        Those methods without topic model usually rely greatly on the performance of search system or the completeness of knowledge base, and lack in-depth analysis for external resources. Compared with our method, the topic model based methods mentioned above remain in finding latent space representation of short text and ignore that relevant words from external knowledge are informative as well.
       </p>
      </div>
     </div>
     <div class="ltx_section" id="S3">
      <h2 class="ltx_title ltx_title_section">
       <span class="ltx_tag ltx_tag_section">
        3
       </span>
       Our Model
      </h2>
      <div class="ltx_para" id="S3.p1">
       <p class="ltx_p">
        We formulate the problem as follows. Let
        E⁢K={d1e,…,dMee}
        denote external knowledge consisting of
        Me
        documents.
        Ve={w1e,…,wNee}
        represents its vocabulary. Let
        M⁢B={d1m,…,dMmm}
        denote microblog set and its vocabulary is
        Vm={w1m,…,wNmm}
        . Our task is to enrich each microblog with additional information so as to improve microblog’s representation.
       </p>
      </div>
      <div class="ltx_para" id="S3.p2">
       <p class="ltx_p">
        The model we proposed mainly consists of three steps:
       </p>
       <ol class="ltx_enumerate" id="I2">
        <li class="ltx_item" id="I2.i1" style="list-style-type:none;">
         <span class="ltx_tag ltx_tag_enumerate">
          (a)
         </span>
         <div class="ltx_para" id="I2.i1.p1">
          <p class="ltx_p">
           Topic inference for external knowledge by running LDA estimation.
          </p>
         </div>
        </li>
        <li class="ltx_item" id="I2.i2" style="list-style-type:none;">
         <span class="ltx_tag ltx_tag_enumerate">
          (b)
         </span>
         <div class="ltx_para" id="I2.i2.p1">
          <p class="ltx_p">
           Topic inference for microblogs by employing the word distributions of topics obtained from step (a).
          </p>
         </div>
        </li>
        <li class="ltx_item" id="I2.i3" style="list-style-type:none;">
         <span class="ltx_tag ltx_tag_enumerate">
          (c)
         </span>
         <div class="ltx_para" id="I2.i3.p1">
          <p class="ltx_p">
           Select relevant words from external knowledge to enrich the content of microblogs.
          </p>
         </div>
        </li>
       </ol>
      </div>
      <div class="ltx_subsection" id="S3.SS1">
       <h3 class="ltx_title ltx_title_subsection">
        <span class="ltx_tag ltx_tag_subsection">
         3.1
        </span>
        Topic Inference for External Knowledge
       </h3>
       <div class="ltx_para" id="S3.SS1.p1">
        <p class="ltx_p">
         We do topic analysis for
         E⁢K
         using LDA estimation
         [Blei et al.2003]
         in this section and we choose LDA as the topic analysis model because of its broadly proved effectivity and ease of understanding.
        </p>
       </div>
       <div class="ltx_para" id="S3.SS1.p2">
        <p class="ltx_p">
         In LDA, each document has a distribution over all topics
         P(zk|dj)
         , and each topic has a distribution over all words
         P(wi|zk)
         , where
         zk
         ,
         dj
         and
         wi
         represent the topic, document and word respectively. The optimization problem is formulated as maximizing the log likelihood on the corpus:
        </p>
       </div>
       <div class="ltx_para" id="S3.SS1.p3">
        max∑i∑jXi⁢jlog∑kP(zk|dj)P(wi|zk)

(1)
       </div>
       <div class="ltx_para" id="S3.SS1.p4">
        <p class="ltx_p">
         In this formulation,
         Xi⁢j
         represents the term frequency of word
         wi
         in document
         dj
         .
         P(zk|dj)
         and
         P(wi|zk)
         are parameters to be inferred, corresponding to the topic distribution of each document and the word distribution of each topic respectively. Estimating parameters for LDA by directly and exactly maximizing the likelihood of the corpus in (1) is intractable, so we use Gibbs Sampling for estimation.
        </p>
       </div>
       <div class="ltx_para" id="S3.SS1.p5">
        <p class="ltx_p">
         After performing LDA model (
         K
         topics) estimation on
         E⁢K
         , we obtain the topic distributions of document
         dje
         (
         j=1,…,Me
         ), denoted as
         P(zke|dje)
         (
         k=1,…,K
         ), and the word distribution of topic
         zke
         (
         k=1,…,K
         ), denoted as
         P(wie|zke)
         (
         i=1,…,Ne
         ). Step (b) greatly relies on the word distributions of topics we have obtained here.
        </p>
       </div>
      </div>
      <div class="ltx_subsection" id="S3.SS2">
       <h3 class="ltx_title ltx_title_subsection">
        <span class="ltx_tag ltx_tag_subsection">
         3.2
        </span>
        Topic Inference for Microblog
       </h3>
       <div class="ltx_para" id="S3.SS2.p1">
        <p class="ltx_p">
         In this section, we infer the topic distribution of each microblog. Because of the assumption that microblogs share the same topics with external corpus, the “topic distribution” here refers to a distribution over all topics on
         E⁢K
         .
        </p>
       </div>
       <div class="ltx_para" id="S3.SS2.p2">
        <p class="ltx_p">
         Differing from step (a), the method used for topic inference for microblogs is not directly running LDA estimation on microblog collection but following the topics from external knowledge to ensure topic consistence. We employ the word distributions of topics obtained from step (a), i.e.
         P(wie|zke)
         , and formulate the optimization problem in a similar form to Formula (1) as follows:
        </p>
       </div>
       <div class="ltx_para" id="S3.SS2.p3">
        maxP(zke|djm)∑i∑jX¯i⁢jlog∑kP(zke|djm)P(wie|zke),

(2)
       </div>
       <div class="ltx_para" id="S3.SS2.p4">
        <p class="ltx_p">
         where
         X¯i⁢j
         represents the term frequency of word
         wie
         in microblog
         djm
         , and
         P(zke|djm)
         denote the distribution of microblog
         djm
         over all topics on
         E⁢K
         . Obviously most
         X¯i⁢j
         are zero and we ignore those words that do not appear in
         Ve
         .
        </p>
       </div>
       <div class="ltx_para" id="S3.SS2.p5">
        <p class="ltx_p">
         Compared with the original LDA optimization problem (1), the topic inference problem for microblog (2) follows the idea of document generation process, but replaces topics to be estimated with known topics from other corpus. As a result, parameters to be inferred are only the topic distribution of every microblog.
        </p>
       </div>
       <div class="ltx_para" id="S3.SS2.p6">
        <p class="ltx_p">
         It is noteworthy that since the word distribution of every topic
         P(wie|zke)
         is known, Formula (
         2
         ) can be further solved by separating it into
         Mm
         subproblems:
        </p>
       </div>
       <div class="ltx_para" id="S3.SS2.p7">
        maxP(zke|djm)∑iX¯i⁢jlog∑kP(zke|djm)P(wie|zke)forj=1,…,Mm

(3)
       </div>
       <div class="ltx_para" id="S3.SS2.p8">
        <p class="ltx_p">
         These
         Mm
         subproblems correspond to the
         Mm
         microblogs and can be easily proved convexity. After solving them, we obtain the topic distributions of microblog
         djm
         (
         j=1,…,Mm
         ), denoted as
         P(zke|djm)
         (
         k=1,…,K
         ).
        </p>
       </div>
      </div>
      <div class="ltx_subsection" id="S3.SS3">
       <h3 class="ltx_title ltx_title_subsection">
        <span class="ltx_tag ltx_tag_subsection">
         3.3
        </span>
        Select Relevant Words for Microblog
       </h3>
       <div class="ltx_para" id="S3.SS3.p1">
        <p class="ltx_p">
         To enrich the content of every microblog, we select relevant words from external knowledge in this section.
        </p>
       </div>
       <div class="ltx_para" id="S3.SS3.p2">
        <p class="ltx_p">
         Based on the results of step (a)&amp;(b), we calculate the word distributions of microblogs as follows:
        </p>
       </div>
       <div class="ltx_para" id="S3.SS3.p3">
        P(wie|djm)=∑kP(zke|djm)P(wie|zke),

(4)
       </div>
       <div class="ltx_para" id="S3.SS3.p4">
        <p class="ltx_p">
         where
         P(wie|djm)
         represents the probability that word
         wie
         will appear in microblog
         djm
         . In other words, though some words may not actually appears in a microblog, there is still a probability that it is highly relevant to the microblog. Intuitively, this probability indicates the strength of association between a word and a microblog. The word distribution of every microblog is based on topic analysis and its accuracy relies heavily on the accuracy of topic inference in step (b). In fact, the more words a microblog includes, the more accurate its topic inference will be, and this can be regarded as an explanation of the low efficiency of data sparseness problem.
        </p>
       </div>
       <div class="ltx_para" id="S3.SS3.p5">
        <p class="ltx_p">
         For microblog
         djm
         , we sort all words by
         P(wie|djm)
         in descending order. Having known the top
         L
         relevant words according to the result of sorting, we redefine the “term frequency” of every word after adding these
         L
         words to microblog
         djm
         as additional content. Supposing these
         L
         words are
         wj⁢1e,wj⁢2e,…,wj⁢Le
         , the revised term frequency of word
         w∈{wj⁢1e,…,wj⁢Le}
         is defined as follows:
        </p>
        R⁢T⁢F⁢(w,djm)=P(w|djm)∑p=1LP(wj⁢pe|djm)*L,

(5)
        <p class="ltx_p">
         where
         R⁢T⁢F⁢(⋅)
         is the revised term frequency.
        </p>
       </div>
       <div class="ltx_para" id="S3.SS3.p6">
        <p class="ltx_p">
         As the Equation (
         5
         ) shows, the revised term frequency of every word is proportional to probability
         P(wi|djm)
         rather than a constant.
        </p>
       </div>
       <div class="ltx_para" id="S3.SS3.p7">
        <p class="ltx_p">
         So far, we can add these
         L
         words and their revised term frequency
         as additional information to microblog
         djm
         . The revised term frequency plays the same role as TF in common text representation vector, so we calculate the TFIDF of the added words as:
        </p>
       </div>
       <div class="ltx_para" id="S3.SS3.p8">
        T⁢F⁢I⁢D⁢F⁢(w,djm)=R⁢T⁢F⁢(w,djm)⋅I⁢D⁢F⁢(w)

(6)
       </div>
       <div class="ltx_para" id="S3.SS3.p9">
        <p class="ltx_p">
         Note that
         I⁢D⁢F⁢(w)
         is changed as arrival of new words for each microblog.
The TFIDF vector of a microblog with additional words is called
         enhanced vector
         .
        </p>
       </div>
      </div>
     </div>
     <div class="ltx_section" id="S4">
      <h2 class="ltx_title ltx_title_section">
       <span class="ltx_tag ltx_tag_section">
        4
       </span>
       Experiment
      </h2>
      <div class="ltx_subsection" id="S4.SS1">
       <h3 class="ltx_title ltx_title_subsection">
        <span class="ltx_tag ltx_tag_subsection">
         4.1
        </span>
        Experimental Setup
       </h3>
       <div class="ltx_para" id="S4.SS1.p1">
        <p class="ltx_p">
         To evaluate our method, we build our own datasets. We crawl 95028 Chinese news reports from Sina News website
         , segment them, and remove stop words and rare words. After preprocessing, these news documents are used as external knowledge. As for microblog, we crawl a number of microblogs from Sina Weibo
         , and ask unbiased assessors to manually classify them into 9 categories following the column setting of Sina News. After the manual classification, we remove short microblogs (less than
         10
         words), usernames, links and some special characters, then we segment them and remove rare words as well. Finally, we get 1671 classified microblogs as our microblog dataset. The size of each category is shown in Table
         1
         .
        </p>
       </div>
       <div class="ltx_para" id="S4.SS1.p2">
        <p class="ltx_p">
         There are some important details of our implementation. In step (a) of Section
         3.1
         we estimate LDA model using GibbsLDA++
         , a C/C++ implementation of LDA using Gibbs Sampling. In step (b) of Section
         3.2
         , OPTI toolbox
         on Matlab is used to help solve the convex problems. In the classification tasks shown below, we use LibSVM
         as classifier and perform ten-fold cross validation to evaluate the classification accuracy.
        </p>
       </div>
      </div>
      <div class="ltx_subsection" id="S4.SS2">
       <h3 class="ltx_title ltx_title_subsection">
        <span class="ltx_tag ltx_tag_subsection">
         4.2
        </span>
        Classification Results
       </h3>
       <div class="ltx_para" id="S4.SS2.p1">
        <p class="ltx_p">
         In this section, we report the average precision of each method as shown in Table
         2
         . The
         enhanced vector
         is the representation generated by our method. Two baselines are
         TFIDF vector
         [Jones1972]
         and
         boolean vector
         (word occurrence) of the original microblog. In the table, our method increases the classification accuracy from 75.52% to 84.53% when considering additional information, which means our method indeed improves the representation of microblogs.
        </p>
       </div>
      </div>
      <div class="ltx_subsection" id="S4.SS3">
       <h3 class="ltx_title ltx_title_subsection">
        <span class="ltx_tag ltx_tag_subsection">
         4.3
        </span>
        Parameter Tuning
       </h3>
       <div class="ltx_subsubsection" id="S4.SS3.SSS1">
        <h4 class="ltx_title ltx_title_subsubsection">
         <span class="ltx_tag ltx_tag_subsubsection">
          4.3.1
         </span>
         Effect of Added Words
        </h4>
        <div class="ltx_para" id="S4.SS3.SSS1.p1">
         <p class="ltx_p">
          The experiment corresponding to Figure
          1
          is to discover how the classification accuracy changes when we fix the number of topics (
          K=100
          ) and change the number of added words (
          L
          ) in our method. Result shows that more added words do not mean higher accuracy. By studying some cases, we find out that if we add too many words, the proportion of “noisy words” will increase. We reach the best result when number of added words is 300.
         </p>
        </div>
       </div>
       <div class="ltx_subsubsection" id="S4.SS3.SSS2">
        <h4 class="ltx_title ltx_title_subsubsection">
         <span class="ltx_tag ltx_tag_subsubsection">
          4.3.2
         </span>
         Effect of Topic Number
        </h4>
        <div class="ltx_para" id="S4.SS3.SSS2.p1">
         <p class="ltx_p">
          The experiment corresponding to Figure
          2
          is to discover how the classification accuracy changes when we fix the number of added words (
          L=300
          ) and change the number of topics (
          K
          ) in our method. As we can see, the accuracy does not grow monotonously as the number of topics increases. Blindly enlarging the topic number will not improve the accuracy. The best result is reached when topic number is 100, and similar experiments adding different number of words show the same condition of reaching the best result.
         </p>
        </div>
       </div>
       <div class="ltx_subsubsection" id="S4.SS3.SSS3">
        <h4 class="ltx_title ltx_title_subsubsection">
         <span class="ltx_tag ltx_tag_subsubsection">
          4.3.3
         </span>
         Effect of Revised Term Frequency
        </h4>
        <div class="ltx_para" id="S4.SS3.SSS3.p1">
         <p class="ltx_p">
          The experiment corrsponding to Figure
          3
          is to discover whether our redefining “term frequency” as revised term frequency in step (c) of Section
          3.3
          will affect the classification accuracy and how. The results should be analysed in two aspects. On one hand, without redefinition, the accuracy remains in a stable high level and tends to decrease as we add more words. One reason for the decreasing is that “noisy words” have a increasing negative impact on the accuracy as the proportion of “noisy words” grows with the number of added words. On the other hand, the best result is reached when we use the revise term frequency. This suggests that our redefinition for term frequency shows better improvement for microblog representation under certain conditions, but is not optimal under all situations.
         </p>
        </div>
       </div>
      </div>
      <div class="ltx_subsection" id="S4.SS4">
       <h3 class="ltx_title ltx_title_subsection">
        <span class="ltx_tag ltx_tag_subsection">
         4.4
        </span>
        Case Study
       </h3>
       <div class="ltx_para" id="S4.SS4.p1">
        <p class="ltx_p">
         In Table
         3
         , we select several cases consisting of microblogs and their top relevant words .
        </p>
       </div>
       <div class="ltx_para" id="S4.SS4.p2">
        <p class="ltx_p">
         In the first case, we successfully find the country name according to its leader’s name and limited information in the sentence. Other related countries and events are also selected by our model as they often appear together in news. In the other case, relevant words are among the most frequently used words in news and have close semantic relations with the microblogs in certain aspects.
        </p>
       </div>
       <div class="ltx_para" id="S4.SS4.p3">
        <p class="ltx_p">
         As we can see, based on topic analysis, our model shows strong ability of mining relevant words. Other cases show that the model can be further improved by removing the noisy and meaningless ones among added words.
        </p>
       </div>
      </div>
     </div>
     <div class="ltx_section" id="S5">
      <h2 class="ltx_title ltx_title_section">
       <span class="ltx_tag ltx_tag_section">
        5
       </span>
       Conclusion and Future Work
      </h2>
      <div class="ltx_para" id="S5.p1">
       <p class="ltx_p">
        We propose an effective content enriching method for microblog, to enhance classification accuracy. News corpus is exploited as external knowledge. As for techniques, our method uses LDA as its topic analysis model and formulates topic inference for new data as convex optimization problems. Compared with traditional representation, enriched microblog shows great improvement in classification tasks.
       </p>
      </div>
      <div class="ltx_para" id="S5.p2">
       <p class="ltx_p">
        As we do not control the quality of added words, our future work starts from building a filter to select better additional information. And to make the most of external knowledge, better ways to build topic space should be considered.
       </p>
      </div>
     </div>
    </div>
   </div>
  </div>
 </body>
</html>
