<?xml version="1.0" encoding="UTF-8"?><root><url>https://www.sciencedirect.com/science/article/pii//S0004370215000028</url><title>A new semantics for overriding in description logics</title><authors>P.A. Bonatti,M. Faella,I.M. Petrova,L. Sauro</authors><abstract>Many modern applications of description logics (DLs, for short), such as biomedical ontologies and semantic web policies, provide fresh motivations for extending DLs with nonmonotonic inferences—a topic that has attracted a significant amount of attention along the years. Despite this, nonmonotonic inferences are not yet supported by DL technology due to a number of issues related to expressiveness, computational complexity, and optimizations. This paper contributes to the practical support of nonmonotonic inferences in description logics by introducing a new semantics expressly designed to address knowledge engineering needs. This formalism has appealing expressiveness, enjoys nice computational properties, and constitutes an interesting solution to an ample class of application needs. The formalism is validated through extensive comparison with the other nonmonotonic DLs, and systematic scalability tests. The test case generator and its novel validation methodology constitute a further contribution of this paper.</abstract><keywords>Nonmonotonic reasoning;Description logics;Knowledge representation</keywords><content><section label="1"><section-title>Introduction</section-title><paragraph>The ontologies at the core of the semantic web—as well as ontology languages like RDF and OWL—are based on description logics (DLs), that are fragments of first-order logic or slight extensions thereof, such as fixpoint logic. Therefore, DLs inherit strengths and weaknesses of these well-established formalisms. Limitations include monotonicity, and the consequent inability to design knowledge bases (KBs) by describing prototypical instances whose general properties can be refined later, by adding suitable exceptions, without modifying the old axioms, that is, incrementally. This natural formulation approach has been commonly adopted for centuries in areas such as law and science, and more recently in programming and computer security.</paragraph><paragraph>For example, many laws are formulated by adding new norms whose articles may contradict those of previous norms; in case of conflict, the new articles may partially or completely replace the old articles. It is a mechanism similar to overriding in object oriented programming (OOP) languages: in law, recent norms override (part of) the old ones; in OOP the definitions in subclasses override any conflicting binding belonging to superclasses. Similarly, biologists have been incrementally introducing exceptions to general rules since the early days of this science. There is an obvious reason: In biology, virtually all universal properties admit some exception. For instance, the human body has a rather precise structure: the heart is usually located in the left-hand half of the body. Still there are exceptional individuals, with so-called situs inversus, whose heart is located on the opposite side. Eukaryotic cells are those with a proper nucleus, by definition. Still they comprise mammalian red blood cells, that in their mature stage have no nucleus.{sup:1} Another application of nonmonotonic DLs stems from the recent development of policy languages based on DLs [49], [25], [52], [36]. DLs nicely capture role-based policies and facilitate the integration of semantic web policy enforcement with reasoning about semantic metadata (which is often needed to check policy conditions). However, in order to formulate standard default policies such as open and closed policies,{sup:2} conflict resolution methods such as denials take precedence, and authorization inheritance with exceptions, it is necessary to adopt a nonmonotonic semantics (see the survey [12] for more details). The purpose is the same: introducing exceptions incrementally, without modifying the old rules that nicely encode the general default policy of the system.</paragraph><paragraph>Note that important frame systems such as LOOM (one of the ancestors of description logics) supported default properties and nonmonotonic reasoning.{sup:3} These features were lost in the formalization process that led to the development of DLs. One of the major obstacles to the deployment of solutions based on nonmonotonic DLs is constituted by their high computational complexity (see the survey in [11, Ch. 7] and the results in [10]), combined with the absence of effective optimization techniques.{sup:4} Given the massive size of semantic web ontologies and RDF bases, it is mandatory that reasoning in nonmonotonic DLs be extremely efficient, possibly feasible in polynomial time. Unfortunately, nonmonotonic extensions do not preserve the tractability of low-complexity DLs [14], [40], [7], [27], [28]. In most cases, the complexity of nonmonotonic DL reasoning is significantly higher than reasoning in the underlying, monotonic DLs.</paragraph><paragraph>Another problem is that none of the standard nonmonotonic semantics produces exactly the set of expected consequences, and this can be verified on a range of rather simple examples (details will be given in Section 6). Circumscription, Default logic, Autoepistemic logic, Rational closure, they all have complementary strengths and weaknesses that make it difficult to propose a single nonmonotonic extension as the reference semantics of nonmonotonic inheritance and overriding in description logics. In several cases, some natural, desirable inferences are missing for subtle reasons that are quite difficult to track,{sup:5} and would make it hard for a knowledge engineer to formulate and validate complex knowledge bases.</paragraph><paragraph>Supporting default attributes and exceptions was important enough to look for alternative representation methods, based on classical DLs. The simplest examples can be dealt with by means of ontology design patterns [44], [47]. However, these solutions do not scale to more complex examples with multiple exception dimensions, as discussed in [44]: The number of additional concepts introduced by the patterns may grow exponentially. Moreover, such auxiliary concepts must constitute a partition of the original concept, and defining partitions requires computationally expensive constructs such as disjunction. So, even if the given knowledge base belongs to some low-complexity fragment (such as some OWL2 profile), its nonmonotonic extension is generally not tractable.{sup:6}</paragraph><paragraph>After so many extensive investigations, and after trying hard to find a proper way to address the application requirements discussed above by means of standard nonmonotonic semantics, we came to the conclusion that a new semantics is needed, tailored to knowledge engineering needs. The ideal logic should be easy to grasp, its inferences should be reasonably predictable, and its complexity should be comparable to the complexity of the underlying monotonic description logic, because nonmonotonic features should be applicable also to those important domains (such as biomedical ontologies) that push automated reasoning technology to its limits. A related desideratum is that nonmonotonic inferences should be implementable by re-using as much as possible the well-engineered tools and engines available for semantic web reasoning, in order to exploit all the sophisticated optimization techniques developed across decades of research on automated reasoning, as well as the standardization efforts carried out so far.</paragraph><paragraph>Here we start this new line of research by introducing and investigating {a mathematical formula}DLN, a nonmonotonic extension of description logics supporting normality concepts{a mathematical formula}NC, that denote the prototypical instances of a concept C. Their semantics is determined by defeasible inclusions (DIs) {a mathematical formula}C⊑nD, whose intended meaning is “normally the instances of C are instances of D, unless stated otherwise”. This means that higher-priority DIs may override{a mathematical formula}C⊑nD. The goal of this paper is investigating the effectiveness of the following simplifications in achieving the above research objectives:</paragraph><list><list-item label="•">{a mathematical formula}DLN adopts the simplest possible criterion for overriding: a DI is overridden iff it is inconsistent with some higher-priority DIs. There are no further hidden requirements or mechanisms.{sup:7}</list-item><list-item label="•">{a mathematical formula}DLN is prototype oriented. In the examples taken from biomedical domains, policies, etc., the default properties associated to a concept C describe a typical member of C. Let us call such a member a prototype.{sup:8} In our approach, a concept C can be associated to one prototype, and all the standard instances of C conform to it, that is, they satisfy the same default properties.{sup:9}</list-item><list-item label="•">The conflicts between DIs with the same priority are not resolved automatically; they are regarded as knowledge representation errors, that can be detected by looking for inconsistent normality concepts.</list-item></list><paragraph> This last feature of {a mathematical formula}DLN needs further explanations. The prototypical features of A are expected to be subject to overriding in some of the concepts B subsumed by A (because the default properties specific to B may be inconsistent with those of A), but every single prototype, in our reference scenarios, is internally coherent, that is, the default properties that characterize a prototype are consistent with the classical axioms of the knowledge base.</paragraph><paragraph>On the contrary, the artificial examples occurring in the literature (especially the reductions adopted in proving lower complexity bounds) make massive use of inconsistent prototypes: one of the most frequent axiom patterns comprises one or more conflicting, nonmonotonic axioms with the same priority. From a practical perspective—in the light of our reference scenarios—such prototypes may be regarded as an abuse of nonmonotonic constructs.</paragraph><paragraph>Most nonmonotonic logics deal with inconsistent prototypes by maximizing the set of satisfied nonmonotonic axioms. Intuitively, it is like identifying all optimal repairs of the inconsistent prototype and computing the inferences that hold for all repairs. Of course, in writing a knowledge base that models a concrete scenario, computing the invariants across all repairs is not necessarily the right approach. There may be a single meaningful (application dependent) way of removing the inconsistency, and the knowledge engineer should be involved in deciding how to repair the prototype.</paragraph><paragraph label="Example 1">Consider the famous Nixon's diamond:</paragraph><list><list-item label="1.">Quakers are normally pacifist;</list-item><list-item label="2.">Republicans are normally not pacifist;</list-item><list-item label="3.">Nixon is both a quaker and a republican.</list-item></list><paragraph>The rationale behind highlighting inconsistent prototypes is even clearer in ontology merging activities, as illustrated by the next example, due to [44].</paragraph><paragraph label="Example 2">Suppose a knowledge engineer is merging two ontologies that describe the anatomy of humans and mice, respectively. In the former ontology, the body has one prostate with three lobes, while in the latter ontology bodies have five prostates, none of which has lobes. Now consider the union of the two ontologies. The nonmonotonic semantics introduced so far in the literature would resolve the conflict between the prostate axioms by allowing each body to have either a single prostate with three lobes, or five prostates with no lobe; no conflict resolution strategy would extend the knowledge base signature. However, in this case, extending the signature is exactly what should be done: it would be better to notify the clash to the knowledge engineer, who could then refine the concept Body by introducing two subclasses: HumanBody and MouseBody, each satisfying the corresponding prostate axiom.  □</paragraph><paragraph>According to the above discussion, in {a mathematical formula}DLN inconsistent prototypes are regarded as knowledge representation errors. Identifying inconsistent prototypes will be considered as a debugging step analogous to detecting inconsistent concepts. Knowledge engineers are responsible for deciding how to repair the prototype. Only the conflicts that can be settled by a clear priority relation between nonmonotonic axioms shall be resolved by the logic.</paragraph><paragraph>Another important feature of {a mathematical formula}DLN is that it does not maximize the sets of normal instances; this prevents the undesirable closed-world assumption effects discussed in Section 6.</paragraph><paragraph>No other nonmonotonic DL has all of the above features—actually, the overriding mechanism is novel, despite its simplicity, and contributes to the unique computational properties of {a mathematical formula}DLN. The final result is that {a mathematical formula}DLN is the only nonmonotonic description logic that enjoys all of the following properties:</paragraph><list><list-item label="•">it yields the expected inferences in all the applicative examples, avoiding undesired side-effects and common shortcomings (cf. Table 1 in Section 8);</list-item><list-item label="•">it supports ontology engineering by highlighting inconsistent prototypes;</list-item><list-item label="•">it achieves the above goals without increasing the computational complexity of the classical reasoning tasks such as subsumption and instance checking, concept consistency checking, and knowledge base consistency checking; to the best of our knowledge, {a mathematical formula}DLN is the first nonmonotonic description logic that preserves the tractability of the above tasks over the {a mathematical formula}EL family and the DL-lite family.</list-item></list><paragraph> According to the pragmatic goals of this paper, the above achievements are evaluated from a knowledge engineering perspective, as opposed to a philosophical perspective. We do not aim at covering all potentially interesting forms of nonmonotonic reasoning; we rather focus on analogues of what McCarthy calls communication and database storage conventions, and policy representation[41]. In the communication and database storage convention perspective, nonmonotonic constructs are meant to factorize the common features of a majority of individuals and confine explicit detailed axiomatization to a restricted number of exceptional individuals (so as to reduce the size and cost of knowledge bases and improve their readability). Similarly, from the policy representation perspective, the goal is a concise and neat formulation of a policy that is best described by factorizing some general rules, and progressively adding suitable exceptions incrementally. According to this perspective, we do not force {a mathematical formula}DLN to satisfy any axiomatic properties a priori unless they are directly connected to the above goals; still, we are interested in discovering which axiomatic properties are induced by the new semantics ex post; such properties are extensively discussed in the paper.</paragraph><paragraph>A further contribution of this paper is the experimental validation of {a mathematical formula}DLN over large ontologies, with more than 20,000 concept names and almost 30,000 general concept inclusions. More precisely, due to the lack of practical nonmonotonic inference engines for description logics, “real” nonmonotonic knowledge bases do not currently exist. Therefore the scalability tests have to be performed on synthetic test cases, that have been obtained by suitably modifying the Gene Ontology (GO). The scalability tests yield promising results. Moreover, from a methodological point of view, we make an effort to validate the test case generator by analyzing the structure of the synthetic knowledge bases and their classification. To the best of our knowledge, this is the first such validation approach in the literature.</paragraph><paragraph>The paper is organized as follows: In the next section, the basics of description logics are briefly recalled.</paragraph><paragraph>The syntax and semantics of the new logic of overriding, called {a mathematical formula}DLN, are introduced in Section 3. The same section includes a number of examples (Sections 3.3, 3.5, and 3.6) and a translation of {a mathematical formula}DLN into classical description logic (Section 3.4).</paragraph><paragraph>Then, in Section 3.7, we resume the technical analysis of the new logic and show some semantic and logical properties of {a mathematical formula}DLN. Automated reasoning in the new logic is carried out by means of the reduction to classical description logics introduced in Section 3.4; its computational complexity is analyzed in Section 4.</paragraph><paragraph>Section 5 focuses on some guidelines for using {a mathematical formula}DLN, including representation methodologies, and elimination techniques for constructs that are extensively used in {a mathematical formula}DLN but are not supported by all description logics.</paragraph><paragraph>Next, in Section 6, {a mathematical formula}DLN is compared in detail with the other major nonmonotonic description logics. A comparison with design patterns can be found in Appendix C.</paragraph><paragraph>A prototype implementation of {a mathematical formula}DLN is described in Section 7, together with a preliminary, experimental scalability analysis carried out on many large test cases.</paragraph><paragraph>Finally, a section summarizing our contributions and discussing interesting directions for future work (Section 8) concludes the paper.</paragraph><paragraph>We assume the reader to be familiar with description logics; the topic is extensively illustrated in [6]. In Section 6, we assume the reader to be familiar with the standard nonmonotonic semantics for DLs (Circumscription, Default logic, MKNF, Rational closure, etc.). Their syntax and semantics can be found in [3], [4], [21], [10], [18], [29], [19], [40].</paragraph><paragraph>Most proofs have been moved to Appendix A to enhance readability.</paragraph></section><section label="2"><section-title>Preliminaries</section-title><paragraph>In DLs, concepts are inductively defined with the help of a set of constructors, starting with a set {a mathematical formula}NC of concept names, a set {a mathematical formula}NR of role names, and (possibly) a set {a mathematical formula}NI of individual names (all countably infinite). We use the term predicate to refer to elements of {a mathematical formula}NC∪NR. Metavariables A, B will range over concept names, C and D over (possibly compound) concepts, R and S over roles, and a, b and d over individual names.</paragraph><paragraph>Expressive DLs support a large number of operators and quantifiers; Fig. 1 illustrates some of them that will be used throughout the examples of this paper.{sup:11} Additionally, we shall adopt the usual abbreviation:{a mathematical formula} The semantics of DLs is defined in terms of interpretations{a mathematical formula}I=(ΔI,⋅I). The domain{a mathematical formula}ΔI is a non-empty set of individuals and the interpretation function{a mathematical formula}⋅I maps each concept name {a mathematical formula}A∈NC to a subset {a mathematical formula}AI of {a mathematical formula}ΔI, each role name {a mathematical formula}R∈NR to a binary relation {a mathematical formula}RI on {a mathematical formula}ΔI, and each individual name {a mathematical formula}a∈NI to an individual {a mathematical formula}aI∈ΔI. The extension of {a mathematical formula}⋅I to inverse roles and some common compound concepts is inductively defined as shown in the third column of Fig. 1. An interpretation {a mathematical formula}I is called a model of a concept C if {a mathematical formula}CI≠∅. If {a mathematical formula}I is a model of C, we also say that C is satisfied by {a mathematical formula}I.</paragraph><paragraph>A (general) TBox is a finite set of concept inclusions (CIs){a mathematical formula}C⊑D. As usual, we use {a mathematical formula}C≡D as an abbreviation for {a mathematical formula}C⊑D and {a mathematical formula}D⊑C. An ABox is a finite set of concept assertions{a mathematical formula}C(a) and role assertions{a mathematical formula}R(a,b). An interpretation {a mathematical formula}I  satisfies (i) a CI {a mathematical formula}C⊑D if {a mathematical formula}CI⊆DI, (ii) an assertion {a mathematical formula}C(a) if {a mathematical formula}aI∈CI, and (iii) an assertion {a mathematical formula}R(a,b) if {a mathematical formula}(aI,bI)∈RI. Then, {a mathematical formula}I is a (classical) model of a TBox {a mathematical formula}T (resp. an ABox {a mathematical formula}A) if {a mathematical formula}I satisfies all the members of {a mathematical formula}T (resp. {a mathematical formula}A).</paragraph><paragraph>In this paper, we will sometimes mention some important DLs that have been extensively studied in the literature and constitute the foundation of semantic web standards. The logic {a mathematical formula}ALC is defined by the following grammar, where R ranges over role names:{a mathematical formula}</paragraph><paragraph>The logic {a mathematical formula}EL supports only ⊤, ⊓, and ∃. Its extension {a mathematical formula}EL⊥ supports also ⊥. The logic {a mathematical formula}EL++ further adds concrete domains and some expressive role inclusions (see [2] for further details).</paragraph><paragraph>The logic DL-lite [15] supports inclusions shaped like {a mathematical formula}C⊑D and {a mathematical formula}C⊑¬D, where C and D range over concept names and unqualified existential restrictions such as ∃R and {a mathematical formula}∃R− ({a mathematical formula}R∈NR). {a mathematical formula}EL++ and DL-lite, respectively, constitute the foundation of the OWL2 profiles OWL2-EL and OWL2-QL. Both play an important role in applications; their inference problems are tractable (the same holds for some extensions of DL-lite, see [1]).</paragraph><paragraph>Finally we mention the very expressive DL {a mathematical formula}SROIQ that constitutes the foundation of the full standard OWL2. Inference in this logic is 2NExpTime-complete [33].</paragraph></section><section label="3">The nonmonotonic description logic {a mathematical formula}DLN<section label="3.1">The monotonic fragment of {a mathematical formula}DLN<paragraph>Let {a mathematical formula}DL be any classical description logic language, and {a mathematical formula}DLN be the extension of {a mathematical formula}DL with a new concept name {a mathematical formula}NC for each {a mathematical formula}DL  concept C. The new concept names {a mathematical formula}NC are called normality concepts, and are meant to denote the normal, standard or prototypical instances of C.</paragraph><paragraph>A {a mathematical formula}DLN interpretation{a mathematical formula}I=〈ΔI,⋅I〉 is any extension of a (classical) interpretation of {a mathematical formula}DL such that {a mathematical formula}NCI⊆CI. In other words, in all {a mathematical formula}DLN interpretations each normality concept {a mathematical formula}NC satisfies {a mathematical formula}NC⊑C.</paragraph><paragraph>A {a mathematical formula}DLN model of a set of {a mathematical formula}DLN axioms {a mathematical formula}S (that may possibly comprise both inclusions and assertions) is a {a mathematical formula}DLN interpretation that satisfies all the axioms in {a mathematical formula}S. As usual, if {a mathematical formula}I is a {a mathematical formula}DLN model of {a mathematical formula}S then we write {a mathematical formula}I⊨S, and if a sentence α is satisfied by all the {a mathematical formula}DLN models of {a mathematical formula}S then we say that α is a logical consequence of {a mathematical formula}S and write {a mathematical formula}S⊨α. Following standard notation, {a mathematical formula}S⊨C⊑D will be sometimes abbreviated to {a mathematical formula}C⊑SD. When an inclusion α occurs on the right-hand side of ⊨, as a query, then we call α a subsumption.</paragraph></section><section label="3.2"><section-title>Knowledge bases, defeasible inclusions, and overriding</section-title><paragraph>A {a mathematical formula}DLN knowledge base is a disjoint union {a mathematical formula}KB=S∪D where {a mathematical formula}S is a finite set of {a mathematical formula}DLN axioms (called strong or classical axioms) and {a mathematical formula}D is a finite set of defeasible inclusions (DIs, for short) that are expressions {a mathematical formula}C⊑nD where C is a {a mathematical formula}DL concept and D a {a mathematical formula}DLN concept. The informal meaning of {a mathematical formula}C⊑nD is: “normally, the instances of C are instances of D, unless stated otherwise”, that is, unless a group of strong axioms and higher priority DIs forces some instance of C to satisfy ¬D. Informally speaking, the set of DIs satisfied by all the members of a normality concept {a mathematical formula}NC constitute the prototype associated to C.</paragraph><paragraph>A pre-model of {a mathematical formula}KB is a {a mathematical formula}DLN model of its strong part {a mathematical formula}S. We will slightly abuse notation and write {a mathematical formula}KB⊨α as an equivalent of {a mathematical formula}S⊨α, and {a mathematical formula}C⊑KBD as an equivalent of {a mathematical formula}C⊑SD.</paragraph><paragraph>We proceed by specifying the semantics of DIs, which requires some intermediate steps. If {a mathematical formula}δ=(C⊑nD), then its left-hand side C and its right-hand side D are denoted (respectively) by {a mathematical formula}pre(δ) and {a mathematical formula}con(δ). An individual x in a {a mathematical formula}DLN  interpretation {a mathematical formula}I satisfies δ iff either {a mathematical formula}x∉pre(δ)I or {a mathematical formula}x∈con(δ)I. A normality concept {a mathematical formula}NC satisfies δ in {a mathematical formula}I iff all the elements of {a mathematical formula}NCI satisfy δ. The set of normality concepts that satisfy δ in {a mathematical formula}I will be denoted by {a mathematical formula}satI(δ), whose formal definition is:{a mathematical formula} It is frequently the case that a concept {a mathematical formula}NC cannot satisfy all the given DIs, because they are conflicting, i.e. they state mutually inconsistent properties. In that case, a choice is made using a priority relation over DIs.</paragraph><paragraph>The priority relation is a strict partial order ≺ such that the intended meaning of {a mathematical formula}δ1≺δ2 is that {a mathematical formula}δ1 has higher priority than {a mathematical formula}δ2 and, in case of conflicts, it is preferable to sacrifice {a mathematical formula}δ2. While many of our results apply to all priority relations, in the examples (unless otherwise stated) we will assume that ≺ is determined by so-called specificity:{a mathematical formula} With the above definition, the specific properties of {a mathematical formula}pre(δ1) may override those of the more general concept {a mathematical formula}pre(δ2).</paragraph><paragraph>In each intended model {a mathematical formula}I of {a mathematical formula}KB, a concept {a mathematical formula}NC should satisfy a DI {a mathematical formula}δ∈KB unless satisfying δ implies that either {a mathematical formula}NC becomes inconsistent (empty) or some higher priority {a mathematical formula}δ′∈KB must be invalidated. If this is the case, then δ can be ignored in {a mathematical formula}NC, and we say that δ is overridden in {a mathematical formula}NC/I. Since higher priority DIs, in turn, can be ignored if they are overridden, the formal definition of overriding is formulated in a recursive fashion:</paragraph><paragraph label="Definition 1">{a mathematical formula}Overriding w.r.t. KB, function ovdLet {a mathematical formula}I be a {a mathematical formula}DLN interpretation. A DI δ is overridden in{a mathematical formula}NC/I (w.r.t. a knowledge base {a mathematical formula}KB) iff there exists no pre-model {a mathematical formula}J of {a mathematical formula}KB satisfying all of the following conditions:</paragraph><list><list-item label="1.">{a mathematical formula}NC∈satJ(δ),</list-item><list-item label="2.">{a mathematical formula}NCJ≠∅,</list-item><list-item label="3.">for all {a mathematical formula}δ′∈KB such that {a mathematical formula}δ′≺δ, {a mathematical formula}satI(δ′)∖ovdKB(I,δ′)⊆satJ(δ′),</list-item></list><paragraph>In other words, δ is not overridden in {a mathematical formula}NC/I iff there exists a model {a mathematical formula}J of the strong part of {a mathematical formula}KB that represents an acceptable way of making {a mathematical formula}NC satisfy δ: Indeed, by condition 1, {a mathematical formula}NC satisfies δ in {a mathematical formula}J; by condition 2, {a mathematical formula}NC is consistent in {a mathematical formula}J; finally, by 3, all of the non-overridden, higher priority DIs of {a mathematical formula}KB  satisfied in {a mathematical formula}I by some {a mathematical formula}ND are also satisfied in {a mathematical formula}J by the same {a mathematical formula}ND (i.e., no higher priority DI is sacrificed, unless it is overridden).</paragraph><paragraph>The above recursive definition is well defined since the notion of overriding for δ depends only on the overriding of {a mathematical formula}δ′≺δ. Note that if δ has maximal priority (i.e., for all {a mathematical formula}δ′∈KB, {a mathematical formula}δ′⊀δ), then condition 3 is vacuously satisfied, so δ is not overridden iff there exists a pre-model {a mathematical formula}J of {a mathematical formula}KB satisfying 1 and 2.</paragraph><paragraph label="Example 3">Recall that the phrase situs inversus refers to humans whose heart is located on the right-hand side of the body, differently from typical humans whose heart is on the opposite side. If we stipulate that no heart can be simultaneously located on both sides, then a simple axiomatization in {a mathematical formula}(EL⊥)N is:{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula} We are going to show that in all {a mathematical formula}DLN-interpretations {a mathematical formula}I, (2) is not overridden in {a mathematical formula}NHuman and overridden in {a mathematical formula}NSitusInversus, due to (4).The above knowledge base {a mathematical formula}KB contains one DI {a mathematical formula}δ=(2), so the preference relation ≺ is irrelevant in this example. Moreover, δ has maximal priority in {a mathematical formula}KB, so we only have to consider conditions 1 and 2 of Definition 1, as explained above. Note that a {a mathematical formula}DLN-interpretation {a mathematical formula}J satisfies condition 1 of Definition 1 iff {a mathematical formula}J⊨NC⊑¬pre(δ)⊔con(δ). Therefore, conditions 1 and 2 of Definition 1 are satisfied by a pre-model of {a mathematical formula}KB iff there exists a {a mathematical formula}DLN-model {a mathematical formula}J of{a mathematical formula} such that {a mathematical formula}NCJ≠∅, where {a mathematical formula}S={(3),(4),(5)} is the strong part of {a mathematical formula}KB.First, let us focus on {a mathematical formula}NC=NHuman. According to the above discussion, (2) is not overridden in {a mathematical formula}NHuman/I iff there exists a {a mathematical formula}DLN-model {a mathematical formula}J of{a mathematical formula} such that {a mathematical formula}NHumanJ≠∅. Such a {a mathematical formula}DLN-model obviously exists: for example, take a {a mathematical formula}J where {a mathematical formula}SitusInversusJ=∅, all the instances of {a mathematical formula}HumanJ have their heart on the left-hand side of the body, and {a mathematical formula}NHumanJ=HumanJ≠∅. This confirms that (2) is not overridden in {a mathematical formula}NHuman/I.On the contrary, conditions 1 and 2 cannot be possibly satisfied for {a mathematical formula}NC=NSitusInversus, because (4), (5) imply that {a mathematical formula}NSitusInversus and the right-hand side of (2) are disjoint; therefore {a mathematical formula}NSitusInversus (which is subsumed by Human) cannot satisfy (2) in {a mathematical formula}J  unless {a mathematical formula}NSitusInversusJ=∅ (which violates condition 2). It follows that (2) is overridden in {a mathematical formula}NSitusInversus/I, for all {a mathematical formula}I.  □</paragraph><paragraph label="Example 4">The eukaryotic cell example is slightly different from the situs inversus example. If we decide to regard fully developed mammalian red blood cells (that have no nucleus) as standard mammalian red blood cells, then we have to introduce two conflicting DIs with different priority. The encoding in {a mathematical formula}ALCN is:{a mathematical formula}{a mathematical formula}{a mathematical formula} By (7), specificity yields {a mathematical formula}(8)≺(6), that is, (8) has higher priority than (6). We are going to show that for all {a mathematical formula}DLN-interpretations {a mathematical formula}I, none of the two DIs is overridden in {a mathematical formula}NEukCell/I, while (6) may be overridden by (8) in {a mathematical formula}NMamRedBldCel/I.Since (8) is a maximal priority default, the analysis of where it is overridden can be carried out by analogy with the analysis of (2), in the previous example. In particular, (8) is overridden in {a mathematical formula}NEukCell/I iff there exists no {a mathematical formula}DLN-model {a mathematical formula}J of{a mathematical formula} such that {a mathematical formula}NEukCellJ≠∅, where {a mathematical formula}S={(7)}. Such a {a mathematical formula}J exists: take any {a mathematical formula}DLN-interpretation where no eukaryotic cells have a nucleus, and {a mathematical formula}NEukCellJ=EukCellJ≠∅. It follows that (8) is not overridden in {a mathematical formula}NEukCell/I. The reader may easily check in a similar way that (8) is not overridden in {a mathematical formula}NMamRedBldCel/I, either.Next we show that the low-priority DI (6) is not overridden in {a mathematical formula}NEukCell/I. Take a {a mathematical formula}DLN-model {a mathematical formula}J of (7) (i.e. a pre-model of {a mathematical formula}KB) where:<list>{a mathematical formula}EukCellJ≠∅;all the instances of EukCell have a nucleus;{a mathematical formula}MamRedBldCelJ=∅.Finally, consider </list><paragraph>{a mathematical formula}NMamRedBldCel and an arbitrary {a mathematical formula}DLN-interpretation {a mathematical formula}I. There are two possibilities:</paragraph><list><list-item label="1.">{a mathematical formula}NMamRedBldCel satisfies (8) in {a mathematical formula}I. Then it is not possible to find any {a mathematical formula}J satisfying the conditions of Definition 1 for {a mathematical formula}δ=(6). To see this, observe that in no pre-model {a mathematical formula}J of {a mathematical formula}KB, {a mathematical formula}NMamRedBldCel can satisfy both DIs and be nonempty. However, satisfying (8) is necessary to satisfy condition 3 of Definition 1 for {a mathematical formula}δ′=(8). Therefore, (6) is overridden in {a mathematical formula}NMamRedBldCel/I.</list-item><list-item label="2.">{a mathematical formula}NMamRedBldCel does not satisfy (8) in {a mathematical formula}I. Then, take a {a mathematical formula}DLN-interpretation {a mathematical formula}J of {a mathematical formula}KB such that:</list-item></list><paragraph> Summarizing, (6) may or may not be overridden in {a mathematical formula}NMamRedBldCel/I depending on whether {a mathematical formula}NMamRedBldCel satisfies (8) in {a mathematical formula}I.  □</paragraph></paragraph><paragraph>We will not directly apply the definition of overriding anymore in the rest of the paper, because we can equivalently use a simple, handy test based on classical reasoning, that will be introduced in Section 3.4.</paragraph><paragraph label="Remark 1">Note that, according to this definition of overriding, a DI δ can be blocked only by higher priority DIs. In particular, it is possible that none of the “acceptable improvements” {a mathematical formula}J in the above definition provides a global solution by satisfying also all {a mathematical formula}δ′∈KB incomparable with δ (i.e. {a mathematical formula}δ′⊀δ and {a mathematical formula}δ⊀δ′). As a consequence, {a mathematical formula}DLN solves only the conflicts that can be settled by the priority relation ≺. This is a characterizing feature of {a mathematical formula}DLN. In the other nonmonotonic description logics (based on default logic, MKNF, circumscription, etc.) a nonmonotonic axiom/rule ν can contribute to blocking an incomparable axiom/rule {a mathematical formula}ν′, which leads to complex conflict resolution procedures. This may be not appropriate to inheritance with overriding, as argued in Section 1.  □</paragraph><paragraph>The requirement that each normality concept {a mathematical formula}NC should satisfy all the DIs that are not overridden in {a mathematical formula}NC (while overridden DIs can be ignored) naturally leads to the following notion of DI satisfaction:</paragraph><paragraph label="Definition 2">DI satisfactionA {a mathematical formula}DLN interpretation {a mathematical formula}I satisfies a DI δ (w.r.t. a knowledge base {a mathematical formula}KB) iff for all normality concepts {a mathematical formula}NC, either δ is overridden in {a mathematical formula}NC/I, or {a mathematical formula}NC∈satI(δ). If {a mathematical formula}I satisfies δ w.r.t. {a mathematical formula}KB then we write {a mathematical formula}I⊨KBδ.</paragraph><paragraph>Now the notion of {a mathematical formula}DLN model can be extended from strong axioms to a full {a mathematical formula}KB simply by stating that all the members of {a mathematical formula}KB must be satisfied:</paragraph><paragraph label="Definition 3">{a mathematical formula}DLN model of a DLN knowledge baseA {a mathematical formula}DLN interpretation {a mathematical formula}I is a {a mathematical formula}DLN model of {a mathematical formula}KB iff {a mathematical formula}I is a pre-model of {a mathematical formula}KB and for all DIs {a mathematical formula}δ∈KB, {a mathematical formula}I⊨KBδ.</paragraph><paragraph>Let ϵ be either a {a mathematical formula}DLN sentence (assertion or inclusion) or a DI. If ϵ is satisfied by all the {a mathematical formula}DLN models of {a mathematical formula}KB, then we say that ϵ is a {a mathematical formula}DLN consequence of {a mathematical formula}KB and write{a mathematical formula}</paragraph></section><section label="3.3"><section-title>Examples</section-title><paragraph>We start with some examples where all conflicts (if any) are resolved by specificity. Most nonmonotonic description logics agree on these examples. The first one is a simple representation of the situs inversus example mentioned in the introduction.</paragraph><paragraph label="Example 5">Consider again Example 3 (situs inversus). Recall that for all {a mathematical formula}DLN-interpretations {a mathematical formula}I, the unique DI of {a mathematical formula}KB, (2), is satisfied by {a mathematical formula}NHuman and overridden in {a mathematical formula}NSitusInversus.As a first consequence, {a mathematical formula}NHuman must satisfy (2) in every {a mathematical formula}DLN-model of {a mathematical formula}KB (by definition), that is, all the instances of {a mathematical formula}NHuman are either not humans (which is impossible, by definition of {a mathematical formula}DLN-interpretations) or members of the concept {a mathematical formula}∃has_heart.∃has_position.Left. As a consequence, one can derive that the heart of standard humans is located in the left-hand side of the body:{a mathematical formula} Moreover, since the {a mathematical formula}DLN models of {a mathematical formula}KB are also classical models of its strong axioms, by (4) we have that the instances of SitusInversus have their heart on the opposite side:{a mathematical formula} This yields no inconsistency, since (2) is overridden in {a mathematical formula}NSitusInversus/I, for all models {a mathematical formula}I. Similarly, SitusInversus violates the properties of standard humans without making the knowledge base inconsistent:{a mathematical formula} Moreover, as a classical consequence of the above inferences, one can further conclude that people with situs inversus are not standard humans:{a mathematical formula} Since {a mathematical formula}DLN cautiously refrains from applying (2) to all humans, in order to avoid inconsistencies with inferences like (11), (9) cannot be strengthened:{a mathematical formula} Indeed, there are exceptions to the above subsumption. Obviously, {a mathematical formula}KB, {a mathematical formula}NHuman, and {a mathematical formula}NSitusInversus are all consistent: {a mathematical formula}KB{an inline-figure}NHuman⊑⊥ and {a mathematical formula}KB{an inline-figure}NSitusInversus⊑⊥.  □</paragraph><paragraph>In some nonmonotonic logics, an exceptional concept like SitusInversus, that does not satisfy some of the standard properties of a more general concept, like Human, inherits none of the default properties of Human, including those that are consistent with the specific properties of SitusInversus (such as having a nose).{sup:12} The next example shows that this limitation, sometimes called inheritance blocking, does not affect {a mathematical formula}DLN's inheritance.{sup:13}</paragraph><paragraph label="Example 6">Extend Example 5 with the additional DI:{a mathematical formula} This DI has maximal priority and can be analyzed analogously to (2). It is easy to see that (13) is overridden neither in {a mathematical formula}NHuman nor in {a mathematical formula}NSitusInversus, therefore both of the following inferences are valid:{a mathematical formula}{a mathematical formula} In other words, the property of having a nose is inherited even if (9), (11), and (12) make SitusInversus exceptional w.r.t. Human.  □</paragraph><paragraph label="Example 7">Consider Example 4 (eukaryotic cells) and recall that for all {a mathematical formula}DLN-models {a mathematical formula}I of {a mathematical formula}KB, neither (6) nor (8) are overridden in {a mathematical formula}NEukCell/I, (8) is not overridden in {a mathematical formula}NMamRedBldCel/I, and (6) is overridden in {a mathematical formula}NMamRedBldCel/I.{sup:14} Then, in all such {a mathematical formula}I, {a mathematical formula}NEukCell satisfies both DIs, while {a mathematical formula}NMamRedBldCel satisfies only (8).The result is that standard eukaryotic cells have a nucleus while standard mammalian red blood cells do not have a nucleus, as required:{a mathematical formula}{a mathematical formula} Since {a mathematical formula}NEukCell must satisfy both DIs, it follows by classical inferences that{a mathematical formula} that is, mammalian red blood cells are abnormal eukaryotic cells.  □</paragraph><paragraph>The next example shows how to use {a mathematical formula}DLN to encode access control policies (which is another of the intended applications of nonmonotonic description logics mentioned in the introduction). It is also an example of multiple levels of exception: the requests of blacklisted staff are exceptional staff requests, that in turn are exceptional user requests.{sup:15}</paragraph><paragraph label="Example 8">We are going to axiomatize the following natural language policy:</paragraph><list><list-item label="•">In general, users cannot access confidential files.</list-item><list-item label="•">Staff can read confidential files.</list-item><list-item label="•">Blacklisted users are not granted any access. This directive cannot be overridden.</list-item></list><paragraph>The next example illustrates an inconsistent prototype, due to an unresolvable conflict between DIs with incomparable priorities. Most nonmonotonic logics tacitly solve this conflict and fail to highlight the inconsistency.</paragraph><paragraph label="Example 9">Consider the following variant of Nixon's diamond, expressed in {a mathematical formula}ALCN:{a mathematical formula}{a mathematical formula}{a mathematical formula} The two DIs here are not comparable under specificity, that is: {a mathematical formula}(19)⊀(20) and {a mathematical formula}(20)⊀(19). Then both DIs have maximal priority, and their overriding status shall be analyzed independently, by analogy with the unique DI of the situs inversus example. Both (19) and (20) can be individually satisfied by {a mathematical formula}NRepQuaker, without making it inconsistent. Then none of them is overridden in {a mathematical formula}NRepQuaker. It follows that {a mathematical formula}NRepQuaker must satisfy both DIs, consequently{a mathematical formula} that is, RepQuaker is associated to an inconsistent prototype. A knowledge engineer can now repair it in several possible ways, for instance:</paragraph><list><list-item label="1.">by adding {a mathematical formula}RepQuaker⊑nPacifist, which resolves the conflict in favor of (19);</list-item><list-item label="2.">by adding {a mathematical formula}RepQuaker⊑n¬Pacifist, which resolves the conflict in favor of (20);</list-item><list-item label="3.">by changing the axiomatization of behavior so as to permit three alternative attitudes: Pacifist, NonPacifist, and Mixed.</list-item></list><paragraph label="Example 10">Consider again Example 2. Suppose that the axiomatization of bodies and prostates in the two given ontologies has been done with DIs, so as to accommodate exceptional individuals:{a mathematical formula}{a mathematical formula} In the union of the two ontologies the above DIs have the same priority, so they cannot override each other. As a consequence, {a mathematical formula}NBody must satisfy both, in all models of {a mathematical formula}KB, therefore {a mathematical formula}KB{an inline-figure}NBody⊑⊥. This makes the unresolved conflict between the two DIs visible to the knowledge engineer. The inconsistency is confined to {a mathematical formula}NBody; {a mathematical formula}KB  is consistent.  □</paragraph><paragraph>The reader may wonder whether the attributes of a standard individual should be normal as well. In general, this is not the case:</paragraph><paragraph label="Example 11">Consider the following scenario: People are usually honest, and lawyers' customers are people. However, lawyers' customers cannot be assumed to be honest, by default. They are more evenly distributed, and it would not be appropriate to assume that they are not honest, either. Accordingly, consider the knowledge base:{a mathematical formula}{a mathematical formula} We notice the following: (i) atypical individuals may exist, since {a mathematical formula}DLN  does not induce any closed-world effects, as discussed later; in particular, {a mathematical formula}Person⊑NPerson does not hold; (ii) nothing in the semantics forces roles to range over normal individuals only, hence neither {a mathematical formula}NLawyer⊑∀customer.NPerson nor {a mathematical formula}NLawyer⊑∀customer.Honest hold, as required by the desiderata associated with this example.  □</paragraph><paragraph>In other cases, however, having roles range over standard individuals makes perfect sense, as shown by the following example. In those scenarios, {a mathematical formula}DLN supports knowledge engineers in expressing such restrictions. Most of the other nonmonotonic description logics are unable to do it.</paragraph><paragraph label="Example 12">The situs inversus example might be alternatively formulated by describing normal human hearts, and asserting that typically humans have normal human organs:{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula} First, since no inconsistency can be derived, none of the DIs is overridden. In particular, {a mathematical formula}NHumanOrgan⊓HumanHeart⊑∃has_position.Left and {a mathematical formula}NHuman⊑∀has_organ.NHumanOrgan hold. Together with the other strong axioms, it is a matter of classical reasoning to see that the heart of typical humans is placed on the left-hand side of the body:{a mathematical formula}  □</paragraph><paragraph>More generally, there is a nonmonotonic design pattern that given a knowledge base {a mathematical formula}KB=S∪D with (possibly defeasible) N-free{sup:16} ∀-restrictions {a mathematical formula}Ci⊑[n]∀Ri.Di ({a mathematical formula}1≤i≤n), further restricts each role {a mathematical formula}Ri to the standard members of {a mathematical formula}Di preserving the DIs in {a mathematical formula}D, that is, making role values standard only if the DIs in {a mathematical formula}D permit to do so. This can be accomplished by introducing in {a mathematical formula}KB the new DIs {a mathematical formula}δi=Ci⊑n∀Ri.NDi ({a mathematical formula}1≤i≤n) and setting their priorities as follows:</paragraph><list><list-item label="•">the new DIs are compared with each other by means of specificity, as in (1);</list-item><list-item label="•">for each new DI {a mathematical formula}δi and all {a mathematical formula}δ∈D, let {a mathematical formula}δ≺δi (i.e. the new DIs have lower priority than all of the explicit DIs in {a mathematical formula}KB).</list-item></list><paragraph> In this way, if {a mathematical formula}KB={A⊑∀R.B,B⊑nC}, then the new DI {a mathematical formula}δ1=A⊑n∀R.NB introduced by the design pattern makes it possible to entail {a mathematical formula}KB{an inline-figure}NA⊑∀R.C. If, however, the knowledge base were {a mathematical formula}KB′=KB∪{A⊑n∃R.¬C}, then, as one might expect, the DI introduced by the design pattern would have no effect:{a mathematical formula}{a mathematical formula} Clearly, if the new DIs were not given lower priority than the explicit DIs, then in examples like this an unresolvable conflict would arise between the DIs of {a mathematical formula}KB and those introduced by the design pattern; consequently {a mathematical formula}NA would become inconsistent.</paragraph></section><section label="3.4">A syntactic characterization of {an inline-figure}<paragraph>In order to automate reasoning in {a mathematical formula}DLN we introduce a syntactic characterization of {an inline-figure}. We shall reduce {an inline-figure} to classical reasoning over a {a mathematical formula}DL knowledge base where DIs are converted into classical axioms. For this purpose, we have to select among the infinitely many concepts {a mathematical formula}NC a finite set Σ of normality concepts that are relevant to the queries of interest. Such concepts will be regarded as additional concept names in the resulting (classical) knowledge base. In order to encode DIs in classical logic, we have to assume that {a mathematical formula}DL supports concept intersection (⊓) in the left-hand side of inclusions.{sup:17}</paragraph><paragraph>Let Σ be any finite set of normality concepts containing at least all the normality concepts explicitly occurring either in{a mathematical formula}KB or in the query of interest.{sup:18}</paragraph><paragraph>We shall denote with {a mathematical formula}DLΣ the language obtained by extending {a mathematical formula}DL with the normality concepts of Σ (to be treated like new concept names).</paragraph><paragraph>For all DIs δ and all concepts {a mathematical formula}NC define the classical translation of δ w.r.t. {a mathematical formula}NC as follows:{a mathematical formula} Note that {a mathematical formula}I⊨δNC holds iff {a mathematical formula}NC∈satI(δ), that is, {a mathematical formula}δNC means: “{a mathematical formula}NC satisfies δ”.</paragraph><paragraph>Next, for all sets of {a mathematical formula}DL axioms {a mathematical formula}S′ and all DIs δ, let {a mathematical formula}S′↓≺δ denote the result of removing from {a mathematical formula}S′ all the axioms {a mathematical formula}δ0NC such that {a mathematical formula}δ0's priority is not higher than δ's:{a mathematical formula}</paragraph><paragraph>Finally, let {a mathematical formula}δ1,…,δz be an arbitrary linearization of {a mathematical formula}(D,≺), which means that {a mathematical formula}{δ1,…,δz}=D and for all {a mathematical formula}i,j=1,…,z, if {a mathematical formula}δi≺δj then {a mathematical formula}i&lt;j.</paragraph><paragraph>Now we can define the classical knowledge base {a mathematical formula}KBΣ corresponding to {a mathematical formula}KB with the following inductive construction (where {a mathematical formula}i=1,2,…,z):{a mathematical formula}{a mathematical formula}{a mathematical formula} In informal terms, the first step in constructing {a mathematical formula}KBΣ consists in extending {a mathematical formula}S with the axioms {a mathematical formula}NC⊑C implicitly satisfied by {a mathematical formula}DLN's semantics. The construction proceeds by processing the DIs {a mathematical formula}δi∈D in decreasing priority order; if adding {a mathematical formula}δi to the (higher priority) {a mathematical formula}δj≺δi that have been previously selected does not make {a mathematical formula}NC inconsistent, as stated by (27), then {a mathematical formula}δiNC is included in {a mathematical formula}KBΣ, otherwise {a mathematical formula}δiNC is discarded (overridden).</paragraph><paragraph>Our first result shows that the above translation into classical reasoning yields a faithful account of subsumption and assertion checking in {a mathematical formula}DLN.{sup:19}</paragraph><paragraph label="Theorem 1">Let{a mathematical formula}KB be a{a mathematical formula}DLN knowledge base, α be a subsumption or an assertion in{a mathematical formula}DLN, and let Σ be any finite set of normality concepts including all{a mathematical formula}NCthat occur in{a mathematical formula}KB∪{α}. Then{a mathematical formula}</paragraph><paragraph label="Remark 2">Since {a mathematical formula}δ1,…,δ|D| is an arbitrary linearization of {a mathematical formula}(D,≺), the above theorem shows that all linearizations yield equivalent results (actually, it can be proved that they yield the same {a mathematical formula}KBΣ). Therefore the choice of the linearization is irrelevant.  □</paragraph><paragraph>Next, we show how to check overriding with {a mathematical formula}KBΣ and classical reasoning:</paragraph><paragraph label="Lemma 2">Let{a mathematical formula}I be a{a mathematical formula}DLN interpretation that satisfies{a mathematical formula}KBΣ. For all normality concepts{a mathematical formula}NC∈Σ, and for all DIs δ (not necessarily occurring in{a mathematical formula}KB),{a mathematical formula}</paragraph><paragraph label="Remark 3">Note that the above characterization of overriding does not depend on {a mathematical formula}I. So, as a corollary of the above Lemma, if {a mathematical formula}I and {a mathematical formula}J are two {a mathematical formula}DLN models of {a mathematical formula}KB{sup:20} then a DI δ is overridden in {a mathematical formula}NC/I iff δ is overridden in {a mathematical formula}NC/J. For this reason, from now on, we shall drop the model and say simply “δ is overridden in{a mathematical formula}NC”, meaning that δ is overridden in {a mathematical formula}NC/I for all {a mathematical formula}DLN models {a mathematical formula}I of {a mathematical formula}KB.  □</paragraph><paragraph>The above lemma is complemented by the next theorem, that provides a characterization of DI inference in terms of classical reasoning:</paragraph><paragraph label="Theorem 3">For all DIs δ,{a mathematical formula}KB{an inline-figure}δiff for all normality concepts{a mathematical formula}NC,{a mathematical formula}where Σ contains{a mathematical formula}NCand all the normality concepts{a mathematical formula}NDoccurring in{a mathematical formula}KB.</paragraph><paragraph>Unfortunately, Theorem 3 cannot be immediately applied in practice to infer DIs, because the condition in its statement must be checked for all the infinitely many, possible normality concepts. In the following, we provide a decision method for N-free knowledge bases and DI queries. Finding a decision method for unrestricted knowledge bases and DIs is left as an open problem.</paragraph><paragraph>In summary, the next result shows that if normality concepts occur neither in {a mathematical formula}KB nor in the DI δ, then the condition in Theorem 3 needs to be checked only over a finite, representative set of normality concepts {a mathematical formula}NC, defined as follows. Let {a mathematical formula}D be the set of DIs in {a mathematical formula}KB. For all subsets {a mathematical formula}D′⊆D, let{a mathematical formula} where {a mathematical formula}〚γ〛 is the internalization of γ, i.e., {a mathematical formula}(¬pre(γ))⊔con(γ). The following theorem strengthens Theorem 3 by stating that, when N occurs neither in {a mathematical formula}KB nor in δ, in order to check whether {a mathematical formula}KB{an inline-figure}δ it suffices to consider only the (finitely many) normality concepts {a mathematical formula}N〚D′〛 such that {a mathematical formula}D′⊆D.</paragraph><paragraph label="Theorem 4">Let{a mathematical formula}KBbe a{a mathematical formula}DLN KB and let δ be a DI, such that N occurs neither in{a mathematical formula}KB nor in δ. Then,{a mathematical formula}KB{an inline-figure}δif and only if the condition:{a mathematical formula}holds for all{a mathematical formula}X=〚D′〛such that{a mathematical formula}D′⊆D.</paragraph><paragraph>The obvious decision method for DI inference based on this theorem needs to check the condition in its statement for all {a mathematical formula}2|D| possible X. In Section 4, we will show that more efficient methods are unlikely to exist since DI inference is coNP-hard for very simple {a mathematical formula}DL.</paragraph></section><section label="3.5"><section-title>Examples of classical reductions</section-title><paragraph>Here we illustrate the reduction to classical reasoning by applying it to the examples introduced in Section 3.3.</paragraph><paragraph label="Example 13">Consider again Example 5 (situs inversus). In order to infer the standard properties of humans let {a mathematical formula}Σ={NHuman}. The classical translation {a mathematical formula}KBΣ of {a mathematical formula}KB consists of (3), (4), (5) (i.e. the strong part {a mathematical formula}S of {a mathematical formula}KB) plus the two inclusions {a mathematical formula}NHuman⊑Human and {a mathematical formula}δ1NHuman, where {a mathematical formula}δ1 is (2), so {a mathematical formula}δ1NHuman equals:{a mathematical formula} From these axioms we get the following inferences:{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula} that entail the corresponding nonmonotonic inferences (9), (10), (11), (12), by Theorem 1. Note that some simplification is possible: since {a mathematical formula}NHuman⊑Human belongs to {a mathematical formula}KBΣ, axiom (29) can be simplified to{a mathematical formula} (that states explicitly that the heart of standard humans is located on the left-hand side of their body).  □</paragraph><paragraph label="Example 14">Consider again Example 7 (the eukaryotic cell example). Recall that specificity yields {a mathematical formula}(8)≺(6), that is, (8) has higher priority than (6). Accordingly, the enumeration of {a mathematical formula}D must be {a mathematical formula}δ1=(8),δ2=(6). In Example 7 we were interested in inclusions involving {a mathematical formula}NEukCell and {a mathematical formula}NMamRedBldCel, so let{a mathematical formula} The translation {a mathematical formula}KBΣ consists of (7) (the only axiom in {a mathematical formula}S) plus:{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}KBΣ does not contain{a mathematical formula} because {a mathematical formula}δ2 is overridden in {a mathematical formula}NMamRedBldCel (by {a mathematical formula}δ1). The reduction detects it by computing {a mathematical formula}S1Σ↓≺δ2=S1Σ={(7),(30),(31),(32),(33)}, and checking that:{a mathematical formula} As a consequence, {a mathematical formula}δ2NMamRedBldCel does not enter {a mathematical formula}S2Σ (cf. (27)).By (30) and (31), inclusions (33) and (34) can be simplified to{a mathematical formula}{a mathematical formula} therefore {a mathematical formula}KBΣ classically entails that normal eukaryotic cells have a nucleus while normal mammalian red blood cells do not have a nucleus, as required. Moreover, by (35) and (36), we have {a mathematical formula}KBΣ⊨NMamRedBldCel⊑¬NEukCell, that is, normal mammalian red blood cells are abnormal eukaryotic cells. By Theorem 1, these classical inferences validate the nonmonotonic inferences reported in Example 7.  □</paragraph><paragraph>Next we show an example of inconsistent prototype.</paragraph><paragraph label="Example 15">Consider again Example 9 (Nixon's diamond). Since we are interested in the standard properties of RepQuaker, let {a mathematical formula}Σ={NRepQuaker}. The two DIs in this knowledge base are not comparable under specificity, that is: {a mathematical formula}(19)⊀(20) and {a mathematical formula}(20)⊀(19). Then, (19) and (20) cannot “block” each other. In formal terms, no matter whether {a mathematical formula}δ1=(19) or {a mathematical formula}δ1=(20), we have:{a mathematical formula} Clearly, by the above equations, {a mathematical formula}S0Σ↓≺δ1 and {a mathematical formula}S1Σ↓≺δ2 entail neither Pacifist nor ¬Pacifist, so none of the two DIs is overridden in {a mathematical formula}NRepQuaker. Consequently, the translations of both DIs enter {a mathematical formula}KBΣ; with the usual simplifications they are equivalent to:{a mathematical formula}{a mathematical formula} Thus {a mathematical formula}KBΣ⊨NRepQuaker⊑⊥, that is, RepQuaker is associated to an inconsistent prototype. Despite this, {a mathematical formula}KBΣ is consistent; moreover, {a mathematical formula}KBΣ⊭NQuaker⊑⊥ and {a mathematical formula}KBΣ⊭NRepublican⊑⊥. Thus, the reduction is able to reconstruct the nonmonotonic inferences outlined in Example 9, as stated by Theorem 1.  □</paragraph></section><section label="3.6"><section-title>Reasoning about individuals</section-title><paragraph>Some nonmonotonic description logics adopt two different approaches for reasoning about TBoxes and ABoxes, e.g. [19]. On the contrary, {a mathematical formula}DLN is one of the logics that treat TBox and ABox reasoning in a uniform way. Recall that the default properties of a concept C can be found by proving inclusions like {a mathematical formula}NC⊑D, as shown in the examples discussed so far; similarly, the default properties of an individual a can be found by proving inclusions {a mathematical formula}N{a}⊑D.</paragraph><paragraph label="Example 16">Extend the situs inversus example (Example 5) with an ABox containing{a mathematical formula}{a mathematical formula} Let {a mathematical formula}δ1 be the unique DI in {a mathematical formula}KB, that is, (2). Using (27) it is easy to check that {a mathematical formula}δ1N{Ann} belongs to {a mathematical formula}KBΣ, while {a mathematical formula}δ1N{Bob} does not, because the properties of SitusInversus are inconsistent with {a mathematical formula}δ1 (i.e. {a mathematical formula}δ1 is overridden in the concept {a mathematical formula}N{Bob}).Accordingly, both {a mathematical formula}N{Ann} and {a mathematical formula}N{Bob} are satisfiable w.r.t. {a mathematical formula}KBΣ, and the hearts of Ann and Bob are located where it should be expected:{a mathematical formula}{a mathematical formula}  □</paragraph><paragraph>It is worth noting that DIs only state what standard individuals look like; DIs do not force any individual to be standard.{sup:21} Accordingly, a concept {a mathematical formula}N{a} may happen to be empty, when a contingently violates its default profile. One of the advantages of this approach is that if the prototype associated to a nominal {a mathematical formula}{a} is inconsistent, then only {a mathematical formula}N{a} is inconsistent; the knowledge base remains globally consistent, and it is easier to locate inconsistent prototypes.</paragraph><paragraph>Of course, if {a mathematical formula}N{a} is satisfiable w.r.t. {a mathematical formula}KB (as it happens with {a mathematical formula}N{Ann} and {a mathematical formula}N{Bob} in the above example), then a could be safely asserted to be normal by adding the assertion {a mathematical formula}N{a}(a) to {a mathematical formula}KB. This assertion restricts the {a mathematical formula}DLN-models of {a mathematical formula}KB to those where a conforms to its default properties.{sup:22} Note, however, that the queries {a mathematical formula}N{a}⊑D simply constitute an alternative way of inspecting the same models: these queries are consequences of {a mathematical formula}KB iff a belongs to D in all the {a mathematical formula}DLN-models where a satisfies its default properties, that is, {a mathematical formula}N{a}(a) holds.{sup:23} So, an alternative phrasing of the query {a mathematical formula}N{a}⊑D is: “if a is normal, then it satisfies D”.</paragraph><paragraph>The eukaryotic cell example is similar to the above example in many respects, so here we only provide some details about the policy example, that illustrates a more general combination of concept and role assertions.</paragraph><paragraph label="Example 17">Extend the policy {a mathematical formula}KB of Example 8 with the following ABox, encoding three access requests submitted by Ann, Bob, and Cal:{a mathematical formula} The default decision for each read request {a mathematical formula}reqi can be inspected with a corresponding query {a mathematical formula}N{reqi}⊑∃privilege.Read, so here we choose{a mathematical formula} By constructing {a mathematical formula}KBΣ, it can be verified that:{a mathematical formula}{a mathematical formula}{a mathematical formula} therefore (as expected) Ann and Cal's requests are rejected while Bob's is accepted.  □</paragraph><paragraph>If your favorite logic does not support nominals, please refer to Section 5.2, that shows how to carry out the same kind of reasoning through a suitable translation.</paragraph></section><section label="3.7">The logic of {a mathematical formula}DLN<paragraph>The main logical properties of {a mathematical formula}DLN are illustrated in this section. Obviously, {a mathematical formula}DLN extends classical logic, by definition:</paragraph><paragraph label="Proposition 5">If{a mathematical formula}S⊨αthen{a mathematical formula}S∪D{an inline-figure}α.</paragraph><paragraph>The next two results show that concepts and axioms can be replaced by (classical) equivalents without affecting any inference. The first result holds for all priority relations.</paragraph><paragraph label="Theorem 6">Let{a mathematical formula}S and{a mathematical formula}S′be classically equivalent sets of inclusions and assertions. Then, for all sets of DIs{a mathematical formula}D,</paragraph><list><list-item label="1.">{a mathematical formula}I is a{a mathematical formula}DLN model of{a mathematical formula}S′∪Diff{a mathematical formula}I is a{a mathematical formula}DLN model of{a mathematical formula}S∪D;</list-item><list-item label="2.">for all subsumptions/assertions/DIs ϵ,{a mathematical formula}S′∪D{an inline-figure}ϵiff{a mathematical formula}S∪D{an inline-figure}ϵ.</list-item></list><paragraph>The next theorem, instead, requires a mild assumption on priority relations. Roughly speaking, ≺ should be insensitive to substitutions with logical equivalents:</paragraph><paragraph label="Definition 4">A priority relation ≺ for {a mathematical formula}KB is semantic iff {a mathematical formula}δ1≺δ2 and {a mathematical formula}C≡KBD imply {a mathematical formula}δ1′≺δ2′, where each {a mathematical formula}δi′ is obtained from {a mathematical formula}δi by replacing some occurrences of C with D.</paragraph><paragraph>Note that the specificity-based relation is a semantic priority relation.</paragraph><paragraph label="Theorem 7">Suppose that{a mathematical formula}C≡Dis a (classically) valid equivalence and let{a mathematical formula}KB¯be a knowledge base obtained from{a mathematical formula}KB by replacing some occurrences of C with D. If ≺ is semantic, then</paragraph><list><list-item label="1.">{a mathematical formula}I is a{a mathematical formula}DLN model of{a mathematical formula}KB¯iff{a mathematical formula}I is a{a mathematical formula}DLN model of{a mathematical formula}KB;</list-item><list-item label="2.">for all subsumptions/assertions/DIs ϵ,{a mathematical formula}KB¯{an inline-figure}ϵ¯iff{a mathematical formula}KB{an inline-figure}ϵ,</list-item></list><paragraph>Note that the above two theorems are not redundant. The former allows for more general restructuring of the strong part, while the latter supports replacements within DIs.</paragraph><paragraph>The analysis of {a mathematical formula}DLN proceeds in a more proof-theoretic fashion by focusing on DI inference; we shall investigate its relationships with the rational closure properties[38]—whose adaptation to our syntax is illustrated in Fig. 2—that extend the KLM axioms for preferential entailment [37]. In Fig. 2, each rule with premises {a mathematical formula}δ1,δ2 and conclusion {a mathematical formula}δ3 should be interpreted as follows:{a mathematical formula} In (RM), the negative premise should be interpreted as {a mathematical formula}KB{an inline-figure}C⊑n¬D. In reading the theorems below recall that, by definition, {a mathematical formula}KB{an inline-figure}δ holds for all DIs δ occurring in {a mathematical formula}KB.</paragraph><paragraph label="Theorem 8">Axiom (REF) is valid. Axiom (OR) holds if the priority relation is specificity. Axioms (CT), (CM), (LLE), (RW), and (RM) are not valid.</paragraph><paragraph label="Proof">(REF) Straightforward by definition. In particular, for all {a mathematical formula}DLN interpretations {a mathematical formula}I and all normality concepts {a mathematical formula}NX, we have that {a mathematical formula}NX∈satI(C⊑nC).(CT) Let {a mathematical formula}KB={A⊑C,A⊑¬D,δ1,δ2}, where {a mathematical formula}δ1=(C⊑nD) and {a mathematical formula}δ2=(C⊓D⊑nE). We have {a mathematical formula}KB{an inline-figure}δ1 and {a mathematical formula}KB{an inline-figure}δ2. However, contrary to Axiom (CT), we show that {a mathematical formula}KB{an inline-figure}δ, where {a mathematical formula}δ=(C⊑nE). Let {a mathematical formula}I be the interpretation defined by {a mathematical formula}ΔI={x}, {a mathematical formula}NAI=AI=CI={x}, whereas all other concepts are empty. We have that {a mathematical formula}I is a model of {a mathematical formula}KB, since: (i) it is a pre-model of {a mathematical formula}KB, (ii){a mathematical formula}δ1 is overridden in {a mathematical formula}NA/I, (iii){a mathematical formula}NA∈satI(δ2), and (iv) for all normality concepts {a mathematical formula}NX different from {a mathematical formula}NA, it holds that {a mathematical formula}NX∈satI(δ1)∩satI(δ2) because {a mathematical formula}NXI is empty. Property (ii) holds because in all pre-models {a mathematical formula}J of {a mathematical formula}KB such that {a mathematical formula}NAJ≠∅ we have that {a mathematical formula}NA∉satJ(δ1). Next, notice that {a mathematical formula}NA∉satI(δ). It remains to prove that δ is not overridden in {a mathematical formula}NA/I. To this aim, let {a mathematical formula}J be the interpretation that coincides with {a mathematical formula}I, except for {a mathematical formula}EJ={x}. It holds that {a mathematical formula}J satisfies conditions 1–3 of Definition 1, thus proving our thesis.(CM) Let {a mathematical formula}KB={A⊑C,δ1,δ2,δ3}, where {a mathematical formula}δ1=(C⊑nD), {a mathematical formula}δ2=(C⊑nE), and {a mathematical formula}δ3=(A⊑n¬E). Clearly, we have {a mathematical formula}KB{an inline-figure}δ1 and {a mathematical formula}KB{an inline-figure}δ2. However, contrary to Axiom (CM), we show that {a mathematical formula}KB{an inline-figure}δ, where {a mathematical formula}δ=(C⊓D⊑nE).Let {a mathematical formula}I be the interpretation defined by {a mathematical formula}ΔI={x}, {a mathematical formula}NAI=AI=CI=DI={x}, whereas all other concepts are empty. We have that {a mathematical formula}I is a model of {a mathematical formula}KB, since: (i) it is a pre-model of {a mathematical formula}KB, (ii){a mathematical formula}δ2 is overridden in {a mathematical formula}NA/I, (iii){a mathematical formula}NA∈satI(δ1)∩satI(δ3), and (iv) for all normality concepts {a mathematical formula}NX different from {a mathematical formula}NA, {a mathematical formula}NX fulfills all DIs simply because it is empty.Next, notice that {a mathematical formula}NA∉satI(δ). It remains to prove that δ is not overridden in {a mathematical formula}NA/I. To this aim, let {a mathematical formula}J be the interpretation that coincides with {a mathematical formula}I, except for {a mathematical formula}DJ=∅. It holds that {a mathematical formula}NAJ≠∅ and {a mathematical formula}NA∈satJ(δ). Moreover, no DI in {a mathematical formula}KB has a higher priority than δ. Hence, our thesis.(LLE) Let {a mathematical formula}KB={D⊑C,A⊑C,δ1,δ2,δ3}, where {a mathematical formula}δ1=(C⊑nD), {a mathematical formula}δ2=(C⊑nE), and {a mathematical formula}δ3=(A⊑n¬E). We have {a mathematical formula}KB{an inline-figure}δ2 and {a mathematical formula}KB{an inline-figure}(C≡D). However, contrary to Axiom (LLE), we show that {a mathematical formula}KB{an inline-figure}δ, where {a mathematical formula}δ=(D⊑nE).Let {a mathematical formula}I be the interpretation defined by {a mathematical formula}ΔI={x}, {a mathematical formula}NAI=AI=CI=DI={x}, whereas all other concepts are empty. We have that {a mathematical formula}I is a model of {a mathematical formula}KB, since: (i) it is a pre-model of {a mathematical formula}KB, (ii){a mathematical formula}δ2 is overridden in {a mathematical formula}NA/I, (iii){a mathematical formula}NA∈satI(δ1)∩satI(δ3), and (iv) for all normality concepts {a mathematical formula}NX different from {a mathematical formula}NA, {a mathematical formula}NX fulfills all DIs simply because it is empty.Next, notice that {a mathematical formula}NA∉satI(δ). It remains to prove that δ is not overridden in {a mathematical formula}NA/I. To this aim, let {a mathematical formula}J be the interpretation that coincides with {a mathematical formula}I, except for {a mathematical formula}DJ=∅ and {a mathematical formula}EJ={x}. It holds that {a mathematical formula}NAJ≠∅ and {a mathematical formula}NA∈satJ(δ). Moreover, no DI in {a mathematical formula}KB has a higher priority than δ. Hence, our thesis.(RW) Let {a mathematical formula}KB={A⊑C,A⊑¬D,D⊑E,C⊑nD}. We have {a mathematical formula}KB{an inline-figure}C⊑nD and {a mathematical formula}KB{an inline-figure}D⊑E. However, we show that {a mathematical formula}KB{an inline-figure}δ, where {a mathematical formula}δ=(C⊑nE). Let {a mathematical formula}I be the interpretation defined by {a mathematical formula}ΔI={x}, {a mathematical formula}NAI=AI=CI={x}, whereas all other concepts are empty. We have that {a mathematical formula}I is a model of {a mathematical formula}KB, since: (i) it is a pre-model of {a mathematical formula}KB, (ii){a mathematical formula}C⊑nD is overridden in {a mathematical formula}NA/I, and (iii) for all normality concepts {a mathematical formula}NX different from {a mathematical formula}NA, it holds that {a mathematical formula}NX∈satI(C⊑nD) because {a mathematical formula}NXI is empty. Next, notice that {a mathematical formula}NA∉satI(δ). It remains to prove that δ is not overridden in {a mathematical formula}NA/I. To this aim, let {a mathematical formula}J be the interpretation that coincides with {a mathematical formula}I, except for {a mathematical formula}EJ={x}. It holds that {a mathematical formula}I≤δJ, as there are no DIs in {a mathematical formula}KB with a higher priority than δ. Moreover, {a mathematical formula}NAJ≠∅ and {a mathematical formula}NA∈satJ(δ), which proves our thesis.Notation: In the rest of the proof we exploit an abbreviation for condition 3 in Definition 1: we write {a mathematical formula}I≤δKBJ if δ is a DI and {a mathematical formula}I, {a mathematical formula}J are two {a mathematical formula}DLN  interpretations such that for all {a mathematical formula}δ′≺δ in {a mathematical formula}KB, it holds that {a mathematical formula}satI(δ′)∖ovdKB(I,δ′)⊆satJ(δ′). The superscript {a mathematical formula}KB will be omitted when clear from context.(OR) Let {a mathematical formula}δ1=(C⊑nE), {a mathematical formula}δ2=(D⊑nE), and {a mathematical formula}δ=(C⊔D⊑nE). Assume that {a mathematical formula}KB{an inline-figure}δ1 and {a mathematical formula}KB{an inline-figure}δ2. Let {a mathematical formula}I be a model of {a mathematical formula}KB, we prove that {a mathematical formula}I⊨KBδ.Let {a mathematical formula}NX be a normality concept, assume first that {a mathematical formula}δ1 is overridden in {a mathematical formula}NX/I.We prove that also δ is overridden in {a mathematical formula}NX/I. By definition of overriding, for all pre-models {a mathematical formula}J of {a mathematical formula}KB such that {a mathematical formula}I≤δ1J it holds that {a mathematical formula}NXJ=∅ or {a mathematical formula}NX∉satJ(δ1). Now, let {a mathematical formula}J′ be a pre-model of {a mathematical formula}KB such that {a mathematical formula}I≤δJ′. Since {a mathematical formula}δ1≺δ, it holds that {a mathematical formula}I≤δ1J′. Hence, either {a mathematical formula}NXJ′=∅ or {a mathematical formula}NX∉satJ′(δ1). In particular, in the latter case {a mathematical formula}NX∉satJ′(δ), because violating {a mathematical formula}δ1 implies violating δ. We can then conclude that δ is overridden in {a mathematical formula}NX/I.The case when {a mathematical formula}δ2 is overridden in {a mathematical formula}NX/I is entirely symmetric. It remains to treat the case when neither {a mathematical formula}δ1 nor {a mathematical formula}δ2 is overridden in {a mathematical formula}NX/I. In that case, it holds that {a mathematical formula}NX∈satI(δ1)∩satI(δ2). Hence, {a mathematical formula}NX∈satI(δ). Putting the various cases together, we obtain that {a mathematical formula}I⊨KBδ.(RM) Let {a mathematical formula}KB={A⊑C,A⊑¬E,δ1}, where {a mathematical formula}δ1=(C⊑nE). We have that {a mathematical formula}KB{an inline-figure}δ1. Let {a mathematical formula}δ2=(C⊑n¬D) and {a mathematical formula}δ=(C⊓D⊑nE). We show that {a mathematical formula}KB{an inline-figure}δ2 and, contrary to Axiom (RM), {a mathematical formula}KB{an inline-figure}δ. To do so, we exhibit a model {a mathematical formula}I of {a mathematical formula}KB such that {a mathematical formula}I⊭KBδ2 and {a mathematical formula}I⊭KBδ. Let {a mathematical formula}I be defined by {a mathematical formula}ΔI={x}, {a mathematical formula}NAI=AI=CI=DI={x}, whereas all other concepts are empty. Moreover, let {a mathematical formula}J be the interpretation that coincides with {a mathematical formula}I, except for {a mathematical formula}DJ=∅.Both {a mathematical formula}I and {a mathematical formula}J are pre-models of {a mathematical formula}KB. Additionally, {a mathematical formula}I is a model of {a mathematical formula}KB, since: (i){a mathematical formula}δ1 is overridden in {a mathematical formula}NA/I, (ii) for all normality concepts {a mathematical formula}NX different from {a mathematical formula}NA, it holds that {a mathematical formula}NX∈satI(δ1), simply because {a mathematical formula}NXI is empty. Notice that {a mathematical formula}NA∉satI(δ2) and {a mathematical formula}NA∉satI(δ). It remains to prove that {a mathematical formula}δ2 and δ are not overridden in {a mathematical formula}NA/I.Assuming that the priority relation is specificity, we have that {a mathematical formula}I≤δJ and {a mathematical formula}I≤δ2J, as the priority of the only DI in {a mathematical formula}KB (i.e., {a mathematical formula}δ1) is not higher than the priority of δ and {a mathematical formula}δ2. Moreover, {a mathematical formula}NAJ≠∅ and {a mathematical formula}NA∈satJ(δ)∩satJ(δ2), which proves that δ and {a mathematical formula}δ2 are not overridden in {a mathematical formula}NA/I.  □</paragraph><paragraph>A simple inspection of the proof of Theorem 8 shows that the rational closure properties that are not valid in {a mathematical formula}DLN  are in sharp contrast with the idea of overriding as inconsistency with more specific axioms. Consider the counterexample for (CT), first: a concept A more specific than C may strongly satisfy ¬D so that {a mathematical formula}C⊑nD is overridden in {a mathematical formula}NA. Then, since {a mathematical formula}NA is not contained in D, {a mathematical formula}C⊓D⊑nE cannot be applied to infer that the members of {a mathematical formula}NA satisfy E. As a consequence, there is no reason to infer that {a mathematical formula}NA satisfies {a mathematical formula}C⊑nE. The following example instantiates this situation in a concrete representation domain, showing that extending {a mathematical formula}DLN with (CT) can lead to undesirable inferences.</paragraph><paragraph label="Example 18">In several countries (e.g. Mexico, Norway and Brazil) military service is mandatory for male citizens (except for special cases such as mental disorders). After military training, citizens become reservists, and shall join the army again in case of war. This can be formalized with the following DIs:{a mathematical formula}{a mathematical formula} The exceptions to the above rules include minors:{a mathematical formula}{a mathematical formula} Axiom (43) should prevent (41) from being applied to minors, that is, it should not be possible to conclude that {a mathematical formula}NMinorMaleCitizen⊑Reservist (indeed, this is what happens with {a mathematical formula}DLN).On the contrary, by applying (CT) to (40) and (41), one obtains:{a mathematical formula} whose right-hand side is consistent with the properties of MinorMaleCitizen formalized by (42) and (43). Then (44) would not be overridden and it would be possible to conclude that minors are normally reservists ({a mathematical formula}NMinorMaleCitizen⊑Reservist).  □</paragraph><paragraph>Theorem 8's argument for showing that (CM) does not hold is similar: A has a top priority DI {a mathematical formula}A⊑n¬E that overrides the premise {a mathematical formula}C⊑nE, thereby removing the main reason for inferring {a mathematical formula}C⊓D⊑nE. Analogously, in the counterexamples for (RW) and (RM), the strong properties of A override the first premise of the inference rule. Finally consider (LLE): in this rule, the problem is that the equivalence {a mathematical formula}C≡D is assumed to be a defeasible inference by our semantics; therefore, in general, it can be invalidated by overriding and, as a consequence, the conclusion of (LLE) is not logically supported.</paragraph><paragraph>It is easy to prove formally that overriding is indeed the only reason why some rational closure properties fail. To see this, for all rules listed in Fig. 2 with premises {a mathematical formula}δ1,δ2 and conclusion δ, consider the following weak interpretation: For all normality concepts {a mathematical formula}NX: if {a mathematical formula}KB{an inline-figure}δ1, {a mathematical formula}KB{an inline-figure}δ2, and neither {a mathematical formula}δ1 nor {a mathematical formula}δ2 are overridden in {a mathematical formula}NX, then for all {a mathematical formula}DLN-models {a mathematical formula}I of {a mathematical formula}KB, {a mathematical formula}NX satisfies the conclusion δ (i.e. {a mathematical formula}NX∈satI(δ)). (Again, in (RM), {a mathematical formula}KB{an inline-figure}δ2 should be replaced with {a mathematical formula}KB{an inline-figure}δ2.)</paragraph><paragraph label="Theorem 9">All the axioms inFig. 2hold under their weak interpretation.</paragraph><paragraph>Recall that the reason why (LLE) is not valid, in general, under the strong interpretation formalized by (39), is that the premise {a mathematical formula}C≡D is a defeasible consequence. It was meant to be a tautology in the original KLM axioms. Actually, (LLE) is valid under the strong interpretation (39) not only if {a mathematical formula}C≡D is a tautology, but also when it is a strong consequence of {a mathematical formula}KB, provided that the priority relation is semantic.</paragraph><paragraph label="Theorem 10">Axiom (LLE) holds when the assumption{a mathematical formula}C≡Dis interpreted as{a mathematical formula}KB⊨C≡D, and ≺ is semantic.</paragraph><paragraph>Concerning semantic properties, {a mathematical formula}DLN preserves the finite model property:</paragraph><paragraph label="Theorem 11">If{a mathematical formula}DL enjoys the finite model property, then{a mathematical formula}DLN enjoys it, too.</paragraph></section></section><section label="4"><section-title>Complexity analysis</section-title><paragraph>In this section we deal with the complexity of nonmonotonic inference in {a mathematical formula}DLN. The decision problems of interest are the following:</paragraph><list><list-item label="•">Subsumption checking in{a mathematical formula}DLN: given a {a mathematical formula}DLN knowledge base {a mathematical formula}KB and two {a mathematical formula}DLN concepts C and D, check whether {a mathematical formula}KB{an inline-figure}C⊑D;</list-item><list-item label="•">Instance checking in{a mathematical formula}DLN: given a {a mathematical formula}DLN knowledge base {a mathematical formula}KB and a {a mathematical formula}DLN assertion {a mathematical formula}α=C(a) or {a mathematical formula}α=R(a,b), check whether {a mathematical formula}KB{an inline-figure}α;</list-item><list-item label="•">N-free DI inference in{a mathematical formula}DLN: given an N-free {a mathematical formula}DLN  knowledge base {a mathematical formula}KB and two (N-free) {a mathematical formula}DL concepts C and D, check whether {a mathematical formula}KB{an inline-figure}C⊑nD.{sup:25}</list-item></list><paragraph> Concept satisfiability will not be explicitly dealt with, because it can be naturally reduced to the complement of subsumption checking in the usual way: C is satisfiable w.r.t. {a mathematical formula}KB (i.e. there exists a {a mathematical formula}DLN model {a mathematical formula}I of {a mathematical formula}KB such that {a mathematical formula}CI≠∅) iff {a mathematical formula}KB{an inline-figure}C⊑⊥. Similarly, {a mathematical formula}KB consistency will not be dealt with, because it can be reduced to checking whether {a mathematical formula}KB{an inline-figure}⊤⊑⊥.</paragraph><paragraph>Given any natural encoding of sets of sentences as strings, the size of a reasoning problem instance is defined as the length of the encoding of {a mathematical formula}KB∪{α}, where α is the given query (a subsumption, an assertion, or a DI). The length of the encoding of any {a mathematical formula}X⊆DLN will be denoted by {a mathematical formula}‖X‖.</paragraph><paragraph label="Theorem 12">If</paragraph><list><list-item label="•">{a mathematical formula}DL supports ⊓ in the left-hand side of inclusions, and</list-item><list-item label="•">subsumption (resp. instance) checking in{a mathematical formula}DL belongs to a complexity class{a mathematical formula}C, and</list-item><list-item label="•">deciding the preference relation ≺ belongs to{a mathematical formula}PC,{sup:26}</list-item></list><paragraph label="Remark 4">The priority relations ≺ considered so far satisfy the assumption of Theorem 12. Specificity, as defined in (1), can be decided by solving two subsumption problems, therefore it has the same complexity as entailment in {a mathematical formula}DL. The same holds for the priority relation adopted in the design pattern after Example 12.</paragraph><paragraph>The complexity of subsumption and assertion checking in many concrete DLs can now be characterized with a set of corollaries of Theorem 12. We proceed in increasing complexity order, starting with tractable DLs. Clearly, if {a mathematical formula}C=P, then {a mathematical formula}PC equals P, and we immediately get the following result:</paragraph><paragraph label="Corollary 13">If subsumption and assertion checking are tractable in a logic{a mathematical formula}DL  that supports ⊓ in the left-hand side of inclusion, and ≺ can be decided in polynomial time, then subsumption and assertion checking in{a mathematical formula}DLN are in P. In particular, if ≺ is specificity, then subsumption and assertion checking are tractable in:</paragraph><list><list-item label="•">{a mathematical formula}(EL++)N,</list-item><list-item label="•">{a mathematical formula}(DL-litehorn(HN))N[1].</list-item></list><paragraph label="Remark 5">The original DL-lite logic, that corresponds to {a mathematical formula}DL-litecoreF in [1], does not support ⊓, but it is a subset of {a mathematical formula}DL-litehorn(HN), so the above corollary implies the tractability of DL-lite, too. {a mathematical formula}DL-litehorn(HN) supports role inclusions and restricted forms of number restrictions. More tractable cases can be found in [1, Table 2].</paragraph><paragraph>The inference problems of many important description logics belong to deterministic time or space complexity classes {a mathematical formula}C⊇P (such as PSPACE or ExpTime) such that {a mathematical formula}PC equals {a mathematical formula}C. As a consequence, {a mathematical formula}DLN preserves their complexity:</paragraph><paragraph label="Corollary 14">Let{a mathematical formula}DL be a description logic whose subsumption (resp. instance) checking problem is in ExpTime, and suppose that deciding ≺ has the same complexity. Then subsumption (resp. instance) checking in{a mathematical formula}DLN are in ExpTime, too. Moreover, if{a mathematical formula}DL's subsumption (resp. instance) checking problem is ExpTime complete then so is the corresponding problem in{a mathematical formula}DLN.In particular, if ≺ is specificity, then subsumption and instance checking are ExpTime-complete for all the logics ranging from{a mathematical formula}ALCNto any of{a mathematical formula}SHOQN,{a mathematical formula}SHION, or{a mathematical formula}SHIQN.</paragraph><paragraph>Finally, consider the description logic underlying OWL2: {a mathematical formula}SROIQ's inference belongs to a nondeterministic complexity class, so all we can say is:</paragraph><paragraph label="Corollary 15">Subsumption and instance checking in the logic{a mathematical formula}SROIQNare in{a mathematical formula}PN2ExpTime, provided that deciding ≺ is in{a mathematical formula}PN2ExpTime, too (which holds if ≺ is specificity).</paragraph><paragraph>Next we characterize the complexity of N-free DI inference. This problem is coNP-hard, even in very simple languages, such as the ∃-free fragment of {a mathematical formula}(EL⊥)N, that is also a fragment of {a mathematical formula}DL-litehornN. The proof is based on a reduction of 3SAT. The search space is encoded with a pair of DIs for each propositional symbol {a mathematical formula}pi in the 3SAT instance ϕ:{a mathematical formula}{a mathematical formula}{a mathematical formula}Pi and {a mathematical formula}P¯i are disjoint. A suitable set of strong inclusions defines a concept F that represents the falsity of ϕ in terms of the symbols {a mathematical formula}Pi and {a mathematical formula}P¯i. Then {a mathematical formula}(⊤⊑nF) is not entailed iff there exists a concept {a mathematical formula}NC where exactly one of the above DIs is overridden, for each i, and the non overridden DIs correspond to a model of ϕ. For instance, one of these concepts is given by {a mathematical formula}C=(⨅Pi∈MPi)⊓(⨅Pi∉MP¯i), where M is a model of ϕ. As a consequence:</paragraph><paragraph label="Theorem 16">Let{a mathematical formula}KB range over{a mathematical formula}(EL⊥)Nknowledge bases, and δ range over{a mathematical formula}(EL⊥)NDIs. Then checking{a mathematical formula}KB{an inline-figure}δis coNP-hard. Similarly for{a mathematical formula}DL-litehornNknowledge bases and DIs. The theorem still holds if the input{a mathematical formula}KB and δ are N-free and ∃-free.</paragraph><paragraph>For the upper complexity bounds, we use the following result:</paragraph><paragraph label="Theorem 17">If</paragraph><list><list-item label="•">{a mathematical formula}DL supports ⊓ in the left-hand side of inclusions, and</list-item><list-item label="•">subsumption checking in{a mathematical formula}DL belongs to a complexity class{a mathematical formula}C, and</list-item><list-item label="•">the preference relation ≺ belongs to{a mathematical formula}PC,</list-item></list><paragraph>If {a mathematical formula}C=P, then {a mathematical formula}coNPC equals coNP, and we immediately obtain:</paragraph><paragraph label="Corollary 18">If subsumption is tractable in a logic{a mathematical formula}DL that supports ⊓ in the left-hand side of inclusion, and ≺ can be decided in polynomial time, then N-free DI inference in{a mathematical formula}DLN is in coNP. In particular, if ≺ is specificity, then this complexity bound holds for:</paragraph><list><list-item label="•">{a mathematical formula}(EL++)N,</list-item><list-item label="•">{a mathematical formula}(DL-litehorn(HN))N.</list-item></list><paragraph>This result and Theorem 16 prove that N-free DI inference is coNP complete for {a mathematical formula}(EL++)N and {a mathematical formula}(DL-litehorn(HN))N.</paragraph><paragraph>If {a mathematical formula}C=ExpTime, then the nondeterministic search performed by the polynomial time Turing machine with ExpTime oracle can be turned into an ExpTime deterministic search, that preserves the asymptotic cost of the oracle's tests; so the {a mathematical formula}coNPC bound collapses to ExpTime, and we immediately obtain:</paragraph><paragraph label="Corollary 19">Let{a mathematical formula}DL be a description logic whose subsumption checking problem is in ExpTime, and suppose that deciding ≺ has the same complexity. Then N-free DI inference in{a mathematical formula}DLN is in ExpTime, too. Moreover, if{a mathematical formula}DL's subsumption checking problem is ExpTime complete, then so is N-free DI inference in{a mathematical formula}DLN.In particular, if ≺ is specificity, then N-free DI inference is ExpTime-complete for all the logics ranging from{a mathematical formula}ALCNto any of{a mathematical formula}SHOQN,{a mathematical formula}SHION, or{a mathematical formula}SHIQN.</paragraph><paragraph>Finally, we have the following upper complexity bound for {a mathematical formula}SROIQN.</paragraph><paragraph label="Corollary 20">N-free DI inference in the logic{a mathematical formula}SROIQNis in{a mathematical formula}coNPN2ExpTime, provided that deciding ≺ is in{a mathematical formula}coNPN2ExpTime, too (which holds if ≺ is specificity).</paragraph></section><section label="5">Some methodological guidelines for KR&amp;R in {a mathematical formula}DLN<section label="5.1"><section-title>Disciplined usage of normality concepts</section-title><paragraph>Although most of our results hold for unrestricted knowledge bases, the “mainstream” use of the strong part {a mathematical formula}S of {a mathematical formula}KB is specifying classically valid axioms that do not involve normality concepts, because such concepts are supposed to be defined by the DIs in {a mathematical formula}D. By adhering to this discipline, one obtains what we call a canonical knowledge base:</paragraph><paragraph label="Definition 5">A knowledge base {a mathematical formula}KB=S∪D is canonical if {a mathematical formula}S⊆DL (i.e. normality concepts do not occur in the strong part of {a mathematical formula}KB).</paragraph><paragraph>One of the interesting properties of canonical knowledge bases is that their classical and nonmonotonic inferences are neatly separated. By carefully formulating queries, it is possible to distinguish the (classical) consequences of strong axioms from nonmonotonic inferences. This property is grounded on the following result, stating that the queries where N and {a mathematical formula}⊑n do not occur preserve their classical semantics:</paragraph><paragraph label="Theorem 21">If{a mathematical formula}KB=S∪Dis a canonical{a mathematical formula}DLN knowledge base, then for all subsumption or assertions{a mathematical formula}α∈DL,{a mathematical formula}KB{an inline-figure}αiff{a mathematical formula}S⊨α.</paragraph><paragraph label="Remark 6">This theorem has at least two interesting practical consequences, from a knowledge engineering perspective. First, if a legacy, classical ontology {a mathematical formula}S is extended with a set of DIs {a mathematical formula}D, then the classical consequences of {a mathematical formula}S (that have been validated along the life cycle of {a mathematical formula}S) are preserved; {a mathematical formula}D can only incrementally add default properties to the well-defined concepts of {a mathematical formula}S. The second consequence is that in general, if a canonical {a mathematical formula}KB entails some unexpected subsumption {a mathematical formula}NC⊑D, then the knowledge engineer can easily understand whether it is an unpredicted side effect of nonmonotonic inheritance and overriding, without re-classifying the strong part of {a mathematical formula}KB. It suffices to check whether {a mathematical formula}C⊑D is entailed by {a mathematical formula}KB; in that case, the strong part of {a mathematical formula}KB suffices to entail {a mathematical formula}NC⊑D, and defeasible inclusions are not to be blamed for the unexpected inference.  □</paragraph><paragraph>Clearly, the thesis of Theorem 21 is not valid if {a mathematical formula}KB is not canonical:</paragraph><paragraph label="Example 19">Let {a mathematical formula}S={⊤⊑∃R.NA}, {a mathematical formula}D={A⊑nB,A⊑n¬B}, and {a mathematical formula}KB=S∪D. Here {a mathematical formula}S is clearly consistent, so {a mathematical formula}S⊭⊤⊑⊥. However, we claim that {a mathematical formula}KB{an inline-figure}⊤⊑⊥. Informally speaking, the reason is that A's prototype is inconsistent but {a mathematical formula}S does not allow {a mathematical formula}NA to be empty.Formally, let {a mathematical formula}Σ={NA}, {a mathematical formula}δ1=(A⊑nB), and {a mathematical formula}δ2=(A⊑n¬B). Note that {a mathematical formula}δ1⊀δ2 and {a mathematical formula}δ2⊀δ1. We have{a mathematical formula}{a mathematical formula}{a mathematical formula} where {a mathematical formula}δ1NA=(NA⊓A⊑B) and {a mathematical formula}δ2NA=(NA⊓A⊑¬B). It follows that{a mathematical formula} However, {a mathematical formula}NA⊑⊥ is inconsistent with {a mathematical formula}S. Consequently, {a mathematical formula}KBΣ is inconsistent and hence {a mathematical formula}KB{an inline-figure}⊤⊑⊥.  □</paragraph><paragraph>A related interesting property of canonical knowledge bases is that they preserve classical consistency, in the following sense:</paragraph><paragraph label="Theorem 22">Let{a mathematical formula}KB=S∪Dbe a canonical{a mathematical formula}DLN knowledge base. Then{a mathematical formula}KB is satisfiable iff{a mathematical formula}S is (classically) satisfiable.</paragraph><paragraph>Again, the hypothesis that {a mathematical formula}KB is canonical is necessary: Example 19 provides a counterexample to satisfiability preservation in non-canonical knowledge bases.</paragraph></section><section label="5.2"><section-title>Reasoning on individuals without nominals</section-title><paragraph>The default properties of individuals are queried using nominals, by solving inference problems like {a mathematical formula}KB{an inline-figure}N{a}⊑C. If {a mathematical formula}DL and its inference engine do not support nominals, then it may be convenient to reduce the above problem to an inference problem that does not involve nominals.</paragraph><paragraph>In the rest of this subsection, we assume that</paragraph><list><list-item label="1.">{a mathematical formula}KB contains no nominals;</list-item><list-item label="2.">{a mathematical formula}{a}is the only nominal contained in Σ, that is, for all{a mathematical formula}N{b}∈Σ,{a mathematical formula}b=a.</list-item></list><paragraph label="Definition 6">Let {a mathematical formula}tr(KBΣ) be the set of axioms obtained from {a mathematical formula}KBΣ by:</paragraph><list><list-item label="1.">removing {a mathematical formula}N{a}⊑{a};</list-item><list-item label="2.">adding the assertion {a mathematical formula}F(a), where F is a fresh concept name;</list-item><list-item label="3.">replacing each {a mathematical formula}δiN{a} with {a mathematical formula}δiF=F⊓pre(δi)⊑con(δi).</list-item></list><paragraph>The resulting KB is correct, and hence reasoning about nominals can be reduced to an instance problem in a {a mathematical formula}DL theory without nominals.</paragraph><paragraph label="Theorem 23">{a mathematical formula}KB{an inline-figure}N{a}⊑Ciff{a mathematical formula}tr(KBΣ)⊨C(a).</paragraph></section><section label="5.3"><section-title>Relaxing default properties in subclasses</section-title><paragraph>We expect that in some applications it may be necessary to override some of the default properties of a class by relaxing them, rather than asserting their negation. For example, consider the definition of a subclass of humans whose heart is located somewhere in the chest, rather than specifically in its left- or right-hand side. Then the DI of Example 3, stating that human hearts are normally located in the left-hand side of the body, should be overridden without asserting that the heart is not placed there. This behavior can be simulated in {a mathematical formula}DLN in a uniform way by transforming each DI {a mathematical formula}δi=(C⊑nD) into {a mathematical formula}C⊑nD⊓¬Abi, where {a mathematical formula}Abi is a fresh symbol representing abnormality with respect to {a mathematical formula}δi. Now, for any given concept {a mathematical formula}C′, {a mathematical formula}δi can be blocked without asserting ¬D, by means of a DI {a mathematical formula}C′⊑nAbi. The approach is robust: the transformation of {a mathematical formula}δi alone does not affect inferences unless some blocking axioms {a mathematical formula}C′⊑nAbi are introduced. A practical version of {a mathematical formula}DLN might introduce syntactic sugar to handle the additional abnormality predicates {a mathematical formula}Abi implicitly.</paragraph></section></section><section label="6"><section-title>Comparison with other nonmonotonic DLs</section-title><paragraph>In this section we assume the reader to be familiar with the nonmonotonic DLs compared with {a mathematical formula}DLN. Their syntax and semantics can be found in [3], [4], [21], [10], [18], [29], [19], [40]. All the logics dealt with in this section have two features in common, that make {a mathematical formula}DLN an appealing alternative:</paragraph><list><list-item label="1.">they depart from desired behavior in two or more of the motivating examples;</list-item><list-item label="2.">they do not enjoy any tractable fragment that covers the set of motivating examples (unlike {a mathematical formula}DLN); actually, in most cases, no tractable fragment is known.</list-item></list><paragraph> A detailed comparison with the design patterns illustrated in [44], [47] can be found in Appendix C.</paragraph><section label="6.1"><section-title>Circumscribed description logics</section-title><paragraph>In this section we compare {a mathematical formula}DLN with the circumscribed DLs dealt with in [10], that can be regarded as a fragment of the more general framework analyzed in [11]. The syntax adopted in [10] supports defeasible inclusions; however, there are no normality concepts and each DI {a mathematical formula}C⊑nD affects directly the extension of C. Circumscribed knowledge bases include a preference ordering over DIs, just like {a mathematical formula}DLN.</paragraph><paragraph>An important semantic difference between {a mathematical formula}DLN and circumscribed {a mathematical formula}DL is that circumscription—roughly speaking—cannot create individuals. This happens because the model preference relation at the core of Circumscription's semantics makes two models {a mathematical formula}I and {a mathematical formula}J  comparable only if they have the same domain. This property has subtle consequences that may be difficult to predict.</paragraph><paragraph label="Example 20">Consider the following domain description:</paragraph><list><list-item label="1.">All dentists have an assistant;</list-item><list-item label="2.">Normally, a dentist's assistant is not a dentist;</list-item><list-item label="3.">Ann is a dentist.</list-item></list><paragraph>When Circumscription is adopted, knowledge engineers must decide for each predicate whether it should be fixed or variable. Fixed predicates cannot be affected by Circumscription, while variable predicates can. It has been proved that roles should not be fixed, otherwise reasoning becomes undecidable [11], [10]. Concerning concepts, it has been observed that a closed-world assumption (CWA) effect applies to all variable concepts that have some exceptional property. A variable concept C may thus become empty or restricted to all and only the individuals named in the knowledge base that belong to C (cf. [11], [8], [9]). Such CWA effects are frequently undesirable in DLs.</paragraph><paragraph label="Example 21">Consider again the situs inversus example. This is a formulation in Circumscribed {a mathematical formula}EL⊥:{a mathematical formula}If SitusInversus is variable, then Circumscription maximizes the set of individuals satisfying {a mathematical formula}Human⊑n∃has_heart.∃position.Left by restricting {a mathematical formula}SitusInversusI to {a mathematical formula}{BobI}. The effects of this minimization become visible if we add properties to Bob. For example, extend the ABox with {a mathematical formula}Blond(Bob). Then Circumscription yields{a mathematical formula}  □</paragraph><paragraph>An obvious solution consists in making all concept names fixed. However, in this case, some care must be taken, otherwise it might be impossible to define default attributes at all, as shown in the following example.</paragraph><paragraph label="Example 22">Consider a simplified policy example, where {a mathematical formula}KB consists of the single DI{a mathematical formula} If Deny is fixed, then Circumscription cannot infer{a mathematical formula} because there exists a model {a mathematical formula}I of the circumscription of {a mathematical formula}KB in which Deny is empty. Since Deny is fixed, {a mathematical formula}I can only be compared with other models where Deny is empty. It follows that Circumscription cannot force {a mathematical formula}∃decision.Deny to be satisfied. This problem can be addressed as shown in Example 20, by introducing additional axioms that make Deny nonempty. Several of the examples in Section 3.5 show that {a mathematical formula}DLN does not exhibit any similar difficulties. Again, the reason is that overriding is defined in terms of models that may have different domains.  □</paragraph><paragraph>In principle, Circumscription applies default properties to all individuals, including the “implicit” ones that are not denoted by any constant name, and exist because of existential quantification. However, this does not imply that in a concept {a mathematical formula}∃R.B role R ranges over the normal instances of B; the behavior of Circumscription, in this respect, is essentially context dependent and uncontrollable.</paragraph><paragraph label="Example 23">Assume that all concept names are variable. Consider the {a mathematical formula}KB{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula} and the query {a mathematical formula}Q=A⊑∃R.C, which might be expected to hold because of the first two inclusions. Circumscription maximizes the set of individuals satisfying both DIs by making {a mathematical formula}B′ empty and having all instances of B satisfy C; consequently, Q is entailed by {a mathematical formula}KB. However, if {a mathematical formula}KB is extended with any axiom that forces {a mathematical formula}B′ to be nonempty (such as {a mathematical formula}⊤⊑∃S.B′ or {a mathematical formula}B′(a)), then in every model of {a mathematical formula}KB, B contains some individual that satisfies ¬C. Semantics lets R range freely over all the members of B, so Q does not hold anymore. A similar behavior emerges when concept names are fixed.  □</paragraph><paragraph>So, with Circumscription, knowledge engineers have neither a direct way of restricting the range of R to the normal instances of B, nor any way of preventing such restriction when it is not appropriate. For this reason, Circumscription is not guaranteed to handle correctly Example 11 and Example 12 (the result is context dependent).</paragraph><paragraph>Concerning conflict resolution, as anticipated in the introduction, Circumscription deals with inconsistent prototypes by fixing them in all possible ways.</paragraph><paragraph label="Example 24">Consider again Example 1 (Nixon's diamond). Using circumscribed {a mathematical formula}EL⊥, it can be formalized as follows:{a mathematical formula} Here Nixon is associated to an inconsistent prototype by multiple inheritance. Each model of circumscribed {a mathematical formula}KB corresponds to an optimal repair of the prototype where Nixon satisfies exactly one of the above DIs. Therefore, Circumscription entails{a mathematical formula} and makes concept Nixon consistent. In {a mathematical formula}DLN, instead, since the two DIs have the same priority, the conflict is not resolved and {a mathematical formula}DLN makes it evident as follows:{a mathematical formula}  □</paragraph><paragraph>We argued in Section 1 that this conflict handling method is safer. It has also better computational properties, as shown by Theorem 12 and the complexity analysis in [10]. In particular, circumscribed {a mathematical formula}EL⊥ is not tractable, and various restrictions are needed to reduce its complexity [10], while subsumption and assertion queries are tractable in {a mathematical formula}(EL++)N. A prototypical implementation of circumscribed {a mathematical formula}ALC can be found in [32].</paragraph></section><section label="6.2"><section-title>Default description logics</section-title><paragraph>Some of the earliest nonmonotonic DLs are based on Default logic and prioritized extensions thereof [3], [4]. Undecidability problems led the authors of these papers to restrict the application of default rules to the individuals that are explicitly named in the knowledge base; this means that the implicit individuals introduced by existential quantification are not subject to nonmonotonic axioms.</paragraph><paragraph>As a consequence, Default DLs cannot encode Example 12, because the range of role {a mathematical formula}has_organ consists of implicit individuals to which default rules do not apply.</paragraph><paragraph>In case of conflicts between different default rules, Default logic adopts the repair-like approach sketched in the introduction.</paragraph><paragraph label="Example 25">In Default logic, Nixon's diamond can be encoded with the following default rules and axioms:{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula} There are two default extensions, containing {a mathematical formula}(∃has_behavior.Pacifist)(Nixon) and {a mathematical formula}(∃has_behavior.NonPacifist)(Nixon), respectively.  □</paragraph><paragraph>We have already discussed the potential drawbacks of this approach, in terms of representation error repairs. Moreover—due to this behavior—it is not hard to see that even if the underlying description logic is tractable (e.g. {a mathematical formula}EL⊥), the complexity of credulous reasoning is NP-hard, and the complexity of skeptical reasoning is coNP-hard.</paragraph></section><section label="6.3"><section-title>Autoepistemic description logics</section-title><paragraph>Autoepistemic description logics [21] have many properties in common with the description logics based on Default logic, so we provide only a brief summary of their features highlighting the relationships between the two approaches.</paragraph><paragraph>The autoepistemic approach is based on a version of MKNF (the logic of minimal knowledge and negation as failure) where all interpretations have the same domain: a denumerable set of constants called standard names. The examples of Section 6.2 can be transformed into analogous examples for MKNF by replacing each default rule{a mathematical formula} with the MKNF inclusion {a mathematical formula}Kα⊓¬A¬β⊑Kβ, where K is an epistemic operator and the modality {a mathematical formula}¬A is essentially negation as failure.</paragraph><paragraph>The above nonmonotonic inclusions define the defeasible properties β of individuals. Apparently, since the above inclusions need not be grounded on syntactic domains, they apply to all individuals (including those that are not denoted by any constant occurring in the knowledge base). However, the precondition {a mathematical formula}Kα is very strong. Only individuals that are denoted by a constant occurring in the knowledge base can satisfy it, so in practice nonmonotonic rules apply only to such individuals, as it happens with Default logic. It follows that Autoepistemic description logics are not able to encode Example 12.</paragraph><paragraph>Conflict handling is based on repairs and may yield multiple models that correspond to the alternative default extensions of default theories. It is not hard to see that the computational complexity of skeptical subsumption is at least coNP-hard, even if the underlying DL is tractable.</paragraph><paragraph>To the best of our knowledge, no prioritized version of Autoepistemic description logics has been introduced so far.</paragraph></section><section label="6.4"><section-title>Conditional entailment</section-title><paragraph>{a mathematical formula}DLN exhibits a superficial syntactic similarity with conditional knowledge bases and their conditional entailment semantics [26]. Conditional knowledge bases are sets of classical sentences and defaults {a mathematical formula}ϕ→ψ; these expressions are syntactic analogues of strong inclusions and DIs, respectively. Given a priority relation ≺ over the set of defaults, the models of a conditional knowledge base are those that maximize the set of satisfied defaults; such models are called ≺-preferred models. A sentence is conditionally entailed by a knowledge base {a mathematical formula}KB if it is satisfied by all the ≺-preferred models of {a mathematical formula}KB, for all admissible preference orderings. A preference ordering is admissible iff each set of defaults in {a mathematical formula}KB that is in conflict with another default {a mathematical formula}d∈KB, contains a default {a mathematical formula}d′≺d.</paragraph><paragraph>Conditional entailment has never been extended to description logics. For a fixed relation ≺, the models of circumscribed description logic with variable predicates—as presented in [10]—would be close analogues of ≺-preferred models; however, it is not clear how to extend the propositional notion of admissible ordering to this setting. This makes it more difficult to compare {a mathematical formula}DLN and conditional entailment. In particular, it is not possible to assess how a description logic based on conditional entailment would handle Example 11, Example 12 (and, more generally, how much control would be possible on the default properties of role ranges). The analogies with circumscribed DLs raise the concern that a conditional description logic might inherit Circumscription's limitations, in this respect.</paragraph><paragraph>The proof theory of conditional entailment is argumentation, which is significantly more complex than the simple iterative reduction to classical logic used for {a mathematical formula}DLN subsumptions and assertions. In the propositional case, the complexity of Conditional entailment is complete for the second level of the polynomial hierarchy, even if the underlying monotonic logic is tractable [24].</paragraph><paragraph>The notion of admissible ordering, and conditional entailment's quantification over such orderings, have two effects: On the one hand, no explicit priority needs to be specified. The priority induced by admissible orderings is always grounded on specificity (explicit priorities are more flexible). On the other hand, with this approach, specificity is determined by both strong and defeasible axioms. Sometimes, this notion of specificity solves conflicts than cannot be resolved by the version based solely on strong axioms.</paragraph><paragraph label="Example 26">Consider two analogous knowledge bases, encoded as a conditional knowledge base and a {a mathematical formula}DLN knowledge base, respectively:{a mathematical formula} Using conditional entailment's priorities, the first default makes a more specific than b, thereby giving itself and the second default higher priority than the third one. As a consequence, conditional entailment yields {a mathematical formula}a⊃c and solves the conflict between the second and third defaults in favor of the former. On the contrary, in {a mathematical formula}DLN, the three DIs are all incomparable, as there are no strong inclusions. So the conflict is not resolved, and {a mathematical formula}KB{an inline-figure}NA⊑⊥.  □</paragraph><paragraph>In other cases, our notion of specificity-based priority solves conflicts that conditional entailment cannot resolve.</paragraph><paragraph label="Example 27">Consider the following two analogous knowledge bases, inspired by the Nixon's diamond, encoded as a conditional knowledge base and a {a mathematical formula}DLN knowledge base, respectively:{a mathematical formula} The conditional knowledge base is inconsistent, because no priority ordering is admissible, while the {a mathematical formula}DLN knowledge base is consistent, and the last DI is overridden by the other two, because it defines a default property for the less specific concept of all (⊤).  □</paragraph><paragraph>Note that the explicit priorities adopted in Circumscribed DLs, default DLs and {a mathematical formula}DLN are more flexible, as they are not necessarily confined to specificity, and allow the encoding of nonmonotonic design patterns such as the default role range pattern illustrated after Example 12. Nonetheless, making priorities depend on DIs, and analyzing the consequences on the expressiveness and the complexity of {a mathematical formula}DLN, are interesting subjects for further research.</paragraph></section><section label="6.5"><section-title>Preferential semantics, rational closure, typicality</section-title><paragraph>The logic {a mathematical formula}ALC+Tmin[30], [29] features typicality concepts {a mathematical formula}T(C) analogous to our normality concepts {a mathematical formula}NC, that give a comparable degree of flexibility in specifying the default properties of role ranges (with some exceptions, cf. Example 29 below). The equivalent of our DI {a mathematical formula}C⊑nD is {a mathematical formula}T(C)⊑D, i.e. there is no special symbol for defeasible inclusions. The monotonic semantics of the typicality operator is essentially a preferential semantics [30]; its nonmonotonic extension [29] is a minimal model semantics that maximizes the extension of T. {a mathematical formula}ALC+Tmin satisfies the KLM axioms (REF), (LLE), (CM), and (OR) [30], and hence it formally differs from {a mathematical formula}DLN where (CM) is not universally valid (cf. Section 3.7). A stronger semantics satisfying also rational monotony is discussed in [29, Sec. 7.2]; it is argued that this semantics is too strong and yields undesirable results. In {a mathematical formula}DLN, also (CM) yields undesirable results (see the counterexamples reported in Section 3.7, which show that (CM) is not compatible with the notion of “overriding as plain inconsistency” adopted by {a mathematical formula}DLN).</paragraph><paragraph>In general, {a mathematical formula}ALC+Tmin resolves conflicts like Circumscription does: In Example 9 (reformulated in {a mathematical formula}ALC+Tmin) it would be possible to conclude neither {a mathematical formula}T(RepQuaker)⊑Pacifist nor the alternative inclusion {a mathematical formula}T(RepQuaker)⊑¬Pacifist, and {a mathematical formula}T(RepQuaker) would be satisfiable. Only direct conflicts such as {a mathematical formula}T(A)⊑C and {a mathematical formula}T(A)⊑¬C would make {a mathematical formula}T(A) inconsistent (so, in Example 10, {a mathematical formula}T(Body)⊑⊥ holds). Another similarity with Circumscription is the CWA effect on exceptional concepts:</paragraph><paragraph label="Example 28">The {a mathematical formula}ALC+Tmin knowledge base{a mathematical formula}{a mathematical formula}{a mathematical formula} entails that there are no whales, that is: {a mathematical formula}Whale⊑⊥.  □</paragraph><paragraph>Similar effects may force role ranges to be normal.</paragraph><paragraph label="Example 29">The above knowledge base entails {a mathematical formula}T(Mammal)≡Mammal, and in this case it is not possible to distinguish {a mathematical formula}∃R.T(Mammal) from {a mathematical formula}∃R.Mammal. In other words, R's ranges necessarily over typical instances.  □</paragraph><paragraph>Similarly to the other preferential semantics, {a mathematical formula}ALC+Tmin is affected by inheritance blocking. Here is an example.</paragraph><paragraph label="Example 30">Consider the following variant of the penguins-and-birds example:</paragraph><list><list-item label="1.">Penguins are birds;</list-item><list-item label="2.">Birds normally fly;</list-item><list-item label="3.">Birds normally have wings;</list-item><list-item label="4.">Penguins do not fly.</list-item></list><paragraph>Analogously, {a mathematical formula}ALC+Tmin does not deal correctly with Example 6.</paragraph><paragraph>Similarly to conditional entailment, in {a mathematical formula}ALC+Tmin priorities are implicit and grounded in specificity. In the analogue of Example 26, namely,{a mathematical formula}{a mathematical formula}ALC+Tmin is able to resolve the conflict: {a mathematical formula}T(A) is satisfiable and {a mathematical formula}T(A)⊑C is entailed.</paragraph><paragraph>The computational complexity of reasoning in {a mathematical formula}ALC+Tmin has been analyzed in some selected cases. So far, tractable fragments have not been identified. Some restricted fragments (called left local) fall within the second level of the polynomial hierarchy [27], [28].</paragraph><paragraph>More nonmonotonic DLs based on rational closure can be found in [18], [17]. Differently from {a mathematical formula}ALC+Tmin, they have a special inclusion operator for DIs but no equivalent of N. They satisfy the Rational closure axioms and are subject to inheritance blocking, like {a mathematical formula}ALC+Tmin (Example 6, Example 30 are not dealt with correctly). Moreover, they are not able to infer any standard property about role values (Example 12 cannot be encoded). No tractable fragments are known; the available results show that complexity is preserved only for ExpTime-hard logics.</paragraph><paragraph>These logics have been refined in [19] to remove inheritance blocking. The new approach has a syntactic nature (no model-theoretic semantics) and is articulated in two stages:</paragraph><list><list-item label="•">in the first stage, the knowledge base is converted into a boolean inheritance network (introduced in [19] itself); a set of nonmonotonic inclusions is derived using the network; in general, some of these inclusions cannot be derived by rational closure due to inheritance blocking;</list-item><list-item label="•">in the second stage, rational closure is applied to the knowledge base extended with the defeasible inclusions derived in the first stage.</list-item></list><paragraph> With this method, the effects of inheritance blocking are limited, as the inheritance networks recovers some of the missing inferences; for instance, in Example 30, this logic can infer that penguins have wings. The Rational closure axioms are satisfied, because the second stage performs a standard rational closure.</paragraph><paragraph>The two-stage logic has limited reasoning abilities on role ranges. For example, from the purely classical knowledge base {a mathematical formula}{A⊑∃R.B,B⊑C}, the TBox construction of [19] does not yield the classical consequence {a mathematical formula}A⊑∃R.C because strong axioms are internalized. This problem has been fixed in [13]. However, the solution does not suffice to infer {a mathematical formula}A⊑∃R.C from {a mathematical formula}{A⊑∃R.B,B⊑nC}. We argued that this inference is not always desirable (Example 11); the point here is that there is no obvious way of achieving it when it is desired (as in Example 12). The authors of [13] leave this issue as an open problem.</paragraph><paragraph>Priorities are implicit and determined by a form of specificity that takes defeasible inclusions into account, similarly to conditional entailment (as opposed to (1), that considers only strong axioms). So both the two-stage logic and conditional entailment resolve the conflicts in Example 26, Example 27 in the same way and return the same inferences. Interestingly, if ≺ were set using rational closure's axioms ranking, then {a mathematical formula}DLN would yield the same results as well.</paragraph><paragraph>When specificity does not settle a conflict, the two-stage logic repairs the conflict similarly to Default and Autoepistemic logics, Conditional entailment, and {a mathematical formula}ALC+Tmin; in particular, in Example 9, Example 10, no inconsistency is reported.</paragraph><paragraph>In [19, Appendix A], the two-stage logic is tried on eight examples discussed by Sandewall [45]. In several of these examples (A.2–A.5), strong inclusions are either absent or restricted to disjointness constraints {a mathematical formula}A⊑¬B, and hence unable to prioritize the examples' DIs in {a mathematical formula}DLN. Consequently, {a mathematical formula}DLN treats these examples similarly to Example 26: all DIs are mutually incomparable, and conflicts cannot be resolved by overriding. In Examples A.2 and A.3, the 2-stage logic cannot resolve the conflicts, either; no defeasible inclusion is applied and no inconsistency is derivable, while in {a mathematical formula}DLN the conflict is made evident by making some normality concept inconsistent. In Examples A.4 and A.5, instead, the two-stage logic is able to resolve all conflicts. Concerning the other examples, in A.1, A.6, and A.7 strong axioms suffice to prioritize DIs and {a mathematical formula}DLN yields the same results as the two-stage logic. Finally, Example A.8 appears to be intrinsically problematic, due to multiple conflicting defaults applying to the same concept t. Sandewall proposes a few alternative consequences, corresponding to different ways of resolving conflicts between incomparable defaults. The two-stage logic derives none of them because it cannot resolve those conflicts; {a mathematical formula}DLN makes the unresolved conflicts evident by entailing a subsumption {a mathematical formula}Nt⊑⊥.</paragraph><paragraph>The complexity of the two-stage logic has been determined for the nonmonotonic extension of {a mathematical formula}ALC. Basically, the exponential overhead of nonmonotonic inferences (partially due to a brute force search over all the possible permutations of the constants occurring in the ABox, each of which may yield a different deductive closure) is absorbed by the ExpTime complexity of monotonic {a mathematical formula}ALC reasoning. So far, no tractable fragment has been identified.</paragraph></section><section label="6.6"><section-title>Probabilistic, nonmonotonic description logics</section-title><paragraph>These logics, introduced in [40], extend classical DLs with conditional constraints{a mathematical formula}(D|C)[l,u] whose intended meaning is: “by default, the typical instances of C belong to D with probability {a mathematical formula}p∈[l,u]”. When {a mathematical formula}l=u=1, such conditional constraints are reminiscent of DIs {a mathematical formula}C⊑nD, however their behavior differs in many respects.</paragraph><paragraph>First of all, probabilistic description logics exhibit some inferences with a paraconsistent flavor.{sup:28} For instance, the knowledge base{a mathematical formula}{a mathematical formula} has a model, even if (48) states that some instance of A exists, and (49) apparently states that no individuals belong to A. The reason is that (49) applies only to a non-denotable subset of individuals, that can be considered as typical individuals. Next, consider the knowledge base with TBox{a mathematical formula} and a probabilistic ABox that asserts the following constraint on individual b{a mathematical formula} and the following constraint on individual c{a mathematical formula} This knowledge base is consistent and entails both the constraint {a mathematical formula}(∃R.({a}⊓A)|⊤)[1,1] for b, and {a mathematical formula}(∃R.({a}⊓¬A)|⊤)[1,1] for c, respectively. Note, however, that if b satisfied {a mathematical formula}∃R.({a}⊓A) and c satisfied {a mathematical formula}∃R.({a}⊓¬A) at the same time, then a should satisfy both A and ¬A (a contradiction). Therefore the two inferences about b and c should be regarded as members of different deductive closures.</paragraph><paragraph>The “typical” individuals, i.e. those that are subject to conditional constraints, are not allowed to occur in any axiom of the knowledge base. Accordingly, in the above knowledge base, a must necessarily be a “classical” individual that is not subject to any conditional constraint (while {a mathematical formula}DLN permits to use {a mathematical formula}{a} in the left-hand side of DIs, for all individuals a). This is an obstacle to applying defaults to role values. More generally, it turns out that probabilistic DLs cannot reason about “normal” attribute values. For instance, the probabilistic TBox{a mathematical formula}{a mathematical formula} does not entail {a mathematical formula}(∃R.B|⊤)[1,1], that is, the default property (54) does not apply to the values of role R in (53). Since normal individuals cannot be denoted in this logic, there seems to be no way of restricting role values to typical individuals.</paragraph><paragraph>Probabilistic DLs induce CWA effects on exceptional classes. For example the knowledge base{a mathematical formula}{a mathematical formula}{a mathematical formula} entails {a mathematical formula}(¬Whale|⊤)[1,1], that is, there are no whales.</paragraph><paragraph>The conflicts that cannot be resolved by specificity result in either inconsistent concepts or inconsistent knowledge bases. As a first example, consider the following encoding of Nixon's diamond:{a mathematical formula}{a mathematical formula} This probabilistic TBox entails that no one is both a quaker and a republican: {a mathematical formula}(¬(Quaker⊓Republican)|⊤)[1,1]. If {a mathematical formula}Quaker⊓Republican were forced to be nonempty, e.g. by adding{a mathematical formula} then the entire knowledge base would be inconsistent.</paragraph><paragraph>Priorities over conditional constraints are automatically derived based on a notion of specificity, similar to those adopted by conditional entailment and rational closure. They all behave in the same way on Example 26, Example 27.</paragraph><paragraph>Probabilistic DLs do not preserve tractability [40, Theorem 6.4(c)]. On the positive side, probabilistic DLs do not suffer from inheritance blocking (cf. [40, Example 4.17]), and satisfy suitable probabilistic variants of the KLM axioms [40, Theorems 4.19, 4.20].</paragraph></section><section label="6.7"><section-title>Rule-based approaches</section-title><paragraph>The frameworks that combine logic programming (or similar languages) and description logics typically support nonmonotonic constructs similar to negation as failure in rule bodies. Some of these approaches are based on MKNF with standard domain [43] and hence can be compared with {a mathematical formula}DLN  as discussed in Section 6.3. Others, such as [22], [23], are based on a loose semantic integration of rules and DLs. They follow the standard approach to conflict resolution, analogous to considering all possible repairs. Therefore, tractability can only be achieved by means of well-known syntactic restrictions developed in logic programming, such as stratifiability, that prevent conflicts. In most rule-based systems, priorities between nonmonotonic rules and specificity-based conflict resolution are not immediately supported. Some systems (such as DLV) attach weights to soft constraints and compute models that maximize the weights of satisfied constraints [39]. All the approaches based on logic programming and answer set programming need rules to be grounded on some syntactic domain. In [22], [23] such domain consists of the individual constants occurring in the knowledge base. Then nonmonotonic rules do not apply to implicit individuals; this yields the same effects discussed in Section 6.2.</paragraph></section></section><section label="7"><section-title>Experimental analysis</section-title><paragraph>This section introduces NMReasoner, a prototypical implementation of {a mathematical formula}DLN based on existing classical reasoners. A preliminary experimental performance analysis of this prototype is included; it uses test cases with realistic size and the optimization techniques supported by the underlying, classical reasoning engine. Currently, no “real” nonmonotonic DL knowledge bases exist, since mainstream DL technology does not support nonmonotonic inferences, and the available implementations of nonmonotonic DLs can only handle knowledge bases with moderate size. Then scalability tests have been carried out on synthetic test cases, that have been automatically generated in a principled way, as explained in Section 7.2.{sup:29}</paragraph><section label="7.1"><section-title>NMReasoner</section-title><paragraph>According to the theoretical framework, the engine consists of two modules. The first one, hereafter called translation module, constructs the classical knowledge base {a mathematical formula}KBΣ corresponding to the given {a mathematical formula}DLN knowledge base {a mathematical formula}KB=S∪D. The second module computes {a mathematical formula}DLN subsumptions (sometimes called queries in the following). In NMReasoner, Σ is the set of all normality concepts that occur either in {a mathematical formula}KB or in a given set of queries Q. Moreover, if no priority relation over DIs is provided in input (encoded in an appropriate file), then specificity (1) is applied by default. Both modules call an external classical reasoner for classification. For knowledge bases belonging to the {a mathematical formula}EL  family of description logics we chose ELK [50], [51], [35], a particularly efficient, specialized engine. Currently, NMReasoner adopts no optimization technique besides those natively supported by the underlying classical reasoner. In particular, NMReasoner exploits the incremental reasoning facilities of ELK.</paragraph></section><section label="7.2"><section-title>The test case generator</section-title><paragraph>We pursued two different approaches: (i) injecting fully synthetic random defeasible inclusions in a given real world ontology; (ii) transforming a random set of strong concept inclusions of a real world ontology into defeasible inclusions. Both approaches have been applied to a version of the Gene Ontology{sup:30} (GO for short) published in 2006, that has been extensively used in many performance experiments [5], [20], [31], [34], [42], [46], [48]. The GO is suitable for our purposes because of its size and domain (that fit our application scenarios): it is a large biomedical ontology, featuring 20,465 atomic concepts and 28,896 concept inclusions. It can be encoded in {a mathematical formula}EL++, whose nonmonotonic version {a mathematical formula}(EL++)N (as proved in Section 4) enjoys tractable inference problems.</paragraph><paragraph>Under approach (i), that is, random DI injection, given a classical TBox {a mathematical formula}S, the set of DIs {a mathematical formula}D is generated as follows. First, the size of {a mathematical formula}D is determined by a parameter Synthetic-DI-rate as the ratio between the number of DIs and the number of CIs in {a mathematical formula}S. Then, iteratively, two atomic concepts A and B, and optionally a role R are randomly chosen from the signature of {a mathematical formula}S, and either {a mathematical formula}A⊑nB or {a mathematical formula}A⊑n∃R.B is added to {a mathematical formula}D. The generator makes sure that no duplicates are generated, and that for each new DI δ, {a mathematical formula}pre(δ)⊑con(δ) is not classically entailed by {a mathematical formula}S.</paragraph><paragraph>Under approach (ii), given a classical TBox {a mathematical formula}S, a set of concept inclusions {a mathematical formula}S′⊆S is randomly chosen and turned into {a mathematical formula}D. The size of {a mathematical formula}S′ (and {a mathematical formula}D) is determined by a parameter CI-to-DI-rate that specifies the ratio {a mathematical formula}|S′|/|S|. Then all inclusions {a mathematical formula}C1⊑C2∈S′ are removed from {a mathematical formula}S and the corresponding DIs {a mathematical formula}C1⊑nC2 are added to {a mathematical formula}D (here {a mathematical formula}C1 and {a mathematical formula}C2 may be compound concepts, in general). The priority relation over {a mathematical formula}D is specificity, as determined by the logical consequences of {a mathematical formula}S before removing the inclusions in {a mathematical formula}S′, thus preserving as much as possible the semantics of the original relations encoded in the ontology. The intended effect is a progressive transformation of classical knowledge bases into purely defeasible knowledge bases, like those extensively adopted in the literature on preferential and rational closures.</paragraph><paragraph>Under both approaches, in order to increase the probability of overriding (and hence nonmonotonic behavior), some additional inconsistencies between DI conclusions can be injected in the ontology. To do that, DI pairs ({a mathematical formula}δ1, {a mathematical formula}δ2) are randomly selected from {a mathematical formula}D. For each such pair, two arbitrary concepts {a mathematical formula}C1 and {a mathematical formula}C2 are picked from the superclasses of {a mathematical formula}con(δ1) and {a mathematical formula}con(δ2) (respectively), and a new disjointness axiom {a mathematical formula}C1⊓C2⊑⊥ is added to {a mathematical formula}S. The test case generator makes sure that none of {a mathematical formula}C1, {a mathematical formula}C2, and {a mathematical formula}S are made inconsistent, by checking that the following conditions are satisfied in the extended knowledge base: (i) {a mathematical formula}con(δ2)⋢C1; (ii) {a mathematical formula}con(δ1)⋢C2; (iii) {a mathematical formula}C2⋢C1 and (iv) {a mathematical formula}C1⋢C2. Note that we intentionally refrain from asserting {a mathematical formula}con(δ1)⊓con(δ2)⊑⊥ directly, so that the reasoning involved in checking whether a DI is overridden is generally nontrivial. The generation of disjointness axioms is controlled by parameter DA-rate, that specifies the ratio between the number of new disjointness axioms and {a mathematical formula}|S|. The parameters that control the test case generator are summarized in Fig. 3.</paragraph></section><section label="7.3"><section-title>Experimental results: test case structure</section-title><paragraph>A first analysis has been aimed at checking that synthetic test cases are not trivial. For this purpose we inspected the structure of the DIs that actually apply to each normality concept {a mathematical formula}NC, which means that the DI's left-hand side subsumes C. In particular, we measure the height of the priority hierarchy of applicable DIs, and how many applicable DIs are overridden; the former quantity is related to the potential levels of overriding, while the latter is more directly related to the nonmonotonic behavior that actually occurs.</paragraph><paragraph>For all figures, every single reported value is obtained as the average over ten different non monotonic ontologies and fifty different queries on each ontology, each of which involved the construction of a different translation {a mathematical formula}KBΣ (as Σ depends on the query).</paragraph><paragraph>Fig. 4 is devoted to generation approach (i). As the DA rate grows, the figure reports the percentage of overridden applicable DIs, plus the average and maximum height of the priority hierarchy of applicable DIs. Fig. 5 reports the same values for generations approach (ii).</paragraph><paragraph>These figures are reasonable, given GO's structure. The length of the longest path in GO's classification (i.e. the maximum possible hierarchy depth) is 15, and the average length 3.66. In the experiments concerning DIs obtained from strong CIs (see Fig. 5) the average (resp. maximal) depth of the applicable DIs hierarchy range between 41% and 55% of the average (resp. 26.6% and 40% of the maximal) path length in the original ontology, coherently with the random placement of normality concepts in the hierarchy.</paragraph><paragraph>For fully synthetic DIs (Fig. 4) these values are lower and vary between 34% and 42% of the average length, and between 20% and 33.3% of the maximum length.</paragraph><paragraph>As expected, in Fig. 5, each increment of the DA-rate causes an increment of the percentage of overridden DIs. This relation is less evident in Fig. 4, probably due to the further randomness introduced by synthetic DI generation.</paragraph></section><section label="7.4"><section-title>Experimental results: performance analysis</section-title><paragraph>The experiments were performed on an Intel i7-2630QM 2 GHz machine with 18 GB RAM and Ubuntu 12.04.2 LTS. NMReasoner was run on Java 1.6 with the options -Xms8G -Xmx8G -Xss3G to set the available RAM to 8 GB and the stack memory space to 3 GB.</paragraph><paragraph>All test cases are modifications of GO according to approach (i) or (ii). Each query is a subsumption {a mathematical formula}NA⊑B, aimed at checking whether A's prototype has default property B.{sup:31} Our tests correspond to the pessimistic case in which {a mathematical formula}NA has never occurred in any previous query, so {a mathematical formula}KBΣ must be constructed every time. Every single reported value is obtained as the average execution time over ten different non monotonic ontologies and fifty different queries on each ontology, each of which involved the construction of a different translation {a mathematical formula}KBΣ. The varying parameters are: CI-to-DI-rate, Synthetic-DI-rate, and DA-rate.</paragraph><paragraph>Fig. 6, Fig. 7 report the execution time of the translation stage as the amount of DIs grows. In Fig. 6, CI-to-DI-rate (the percentage of CIs that are transformed into DIs) ranges from 5% to 25%, Synthetic-DI-rate is fixed to 0% (no fully synthetic DIs are generated) and DA-rate to 15%. In Fig. 7, Synthetic-DI-rate (the percentage of fully synthetic DIs) ranges from 5% to 25%, CI-to-DI-rate is fixed to 0% and DA-rate to 15%. In both cases, translation time increases linearly with the size of {a mathematical formula}D, in accordance to the linear increase in the number of classification problems that must be solved to compute {a mathematical formula}KBΣ. Translation is slightly faster over the test cases produced with approach (i), probably because of the less complex structure of applicable defaults (cf. Fig. 4, Fig. 5). Values of standard deviation do not exceed 2.36% in the upper and respectively 3.74% in the lower graph.</paragraph><paragraph>Fig. 8, Fig. 9 show the impact of disjointness axioms on the performance of the translation phase. In Fig. 8, CI-to-DI-rate is fixed to 15% and Synthetic-DI-rate to 0%, while in Fig. 9 these values are switched. Translation time is obviously affected by the additional strong disjointness axioms added to the ontology. However, execution time grows less steeply and with less uniform derivative. This is even more evident considering the standard deviation, that is bounded by 1.34% and 6.91% in the experiments reported in Fig. 8, Fig. 9, respectively. As in the previous graphs, fully synthetic DIs yield slightly shorter execution times than approach (ii).</paragraph><paragraph>The substantial similarity between the graphs for generation approach (i) and those for approach (ii) suggests that our test generation methods do not introduce any significant bias as far as translation phase scalability is concerned.</paragraph><paragraph>The overhead of the second phase (subsumption checking) is negligible, because the translation phase constructs a classification of {a mathematical formula}KBΣ as a byproduct, and subsumption checking consists of a simple search in the classification graph. In all tests, query evaluation time was at most 4 milliseconds. Detailed data are not reported, as the effects of increasing the number of DIs is dominated by statistical fluctuations.</paragraph><paragraph>As a term of comparison, a single classification of the original GO takes approximately 0.4 seconds. The current translation time is significantly higher due to the large number of classifications required for computing {a mathematical formula}KBΣ. Note, however, that translation time is compatible with off-line pre-computation of {a mathematical formula}KBΣ for a suitable Σ, covering the normality concepts that are expected to occur in the queries.</paragraph><paragraph>ELK's incremental reasoning facility [35] proved to be quite effective in reducing translation time. Without incremental reasoning, the translation time for CI-to-DI-rate = 15% and DA-rate = 15% raises more than 5 times (with an average value of 413 seconds versus 75 seconds). Further optimizations lie beyond the scope of this paper.</paragraph></section></section><section label="8"><section-title>Conclusions</section-title><paragraph>The {a mathematical formula}DLN family of logics results from a novel, utilitarian way of approaching nonmonotonic logic design, whose main goal is addressing the practical needs of ontology and policy designers, that have been illustrated with several examples in the literature on biomedical ontologies and semantic web policies. We deliberately refrained from adding a priori any requirements that are not directly motivated by the applicative examples. In general, the utilitarian approach led us to make {a mathematical formula}DLN neutral with respect to the inferences that are not always desired: when possible, {a mathematical formula}DLN gives knowledge engineers the ability of switching those inferences on and off. The final result of this investigation is a logic that enjoys the following unique set of properties{sup:32}:</paragraph><list><list-item label="•">No inheritance blocking. Recall that most of the logics grounded on preferential semantics and rational closure block the propagation of all default properties towards exceptional subclasses (so they fail to address correctly Example 6, Example 30). The plain notion of overriding cast into {a mathematical formula}DLN (based solely on consistency with higher priority defaults) yields the correct results.</list-item><list-item label="•">No CWA effects. Many nonmonotonic DLs extend default properties to as many individuals as possible, introducing CWA effects that clash with the intended behavior of biomedical ontologies. For instance, a concept (such as Whale or SitusInversus) may collapse to the inconsistent concept or a small set of individuals just because it has some exceptional property (cf. the discussion in Section 6 and in particular Example 21, Example 28). Moreover, such normality maximization introduces a sort of optimization problem in reasoning that increases computational complexity. {a mathematical formula}DLN does not introduce any CWA effect because it does not force individuals to be normal, unless explicitly stated otherwise. Nonetheless it is easy to check which properties would an individual have if it were normal (cf. Section 3.6).</list-item><list-item label="•">Fine-grained control on role ranges. Should role values be restricted to normal individuals? This is a kind of inference that is neither universally desirable nor undesirable, cf. Example 11, Example 12. Some logics are completely unable to apply default properties to role values. Some others cannot switch this inference off when it is not desired. Only {a mathematical formula}DLN and {a mathematical formula}ALC+Tmin make it possible to control this kind of inference. Due to its explicit priorities, {a mathematical formula}DLN is also able to encode a design pattern that makes role ranges normal whenever this does not override any explicit DI.</list-item><list-item label="•">Inconsistent prototype detection. We argued that when conflicts cannot be settled by priorities, silent conflict resolution is not a desirable feature: knowledge engineers should be involved because there is no universally correct automated resolution criterion (cf. Example 1, Example 2). Only {a mathematical formula}DLN  and probabilistic description logics (and {a mathematical formula}ALC+Tmin, in some very specific cases) detect inconsistent prototypes and make them evident. Canonical {a mathematical formula}DLN knowledge bases confine such inconsistencies to the corresponding normality concepts.</list-item><list-item label="•">Unique deductive closure. As a result of automated conflict resolution, several nonmonotonic logics yield multiple deductive closures, corresponding to all the alternative ways of solving each conflict. {a mathematical formula}DLN is one of the logics that has a unique closure.</list-item><list-item label="•">Low complexity. The reduction of {a mathematical formula}DLN subsumption and instance checking to classical reasoning iterates the inference procedure of {a mathematical formula}DL a polynomial number of times. It follows that {a mathematical formula}DLN  preserves the tractability of these reasoning tasks—which cover all the applicative examples—for all low-complexity DLs, including the rich tractable logics {a mathematical formula}EL++ and {a mathematical formula}DL-liteHorn(HN). Currently, no other nonmonotonic DL enjoys this property. Some logics, such as [18], [17], [19], preserve the asymptotic complexity of ExpTime-complete DLs like {a mathematical formula}ALC. However, the additional cost of nonmonotonic reasoning is exponential in these logics, because in the worst case inferences must be repeated for all permutations of the individual constants in the ABox, as each permutation may yield a different deductive closure. This is likely to have practical consequences. The complete set of complexity results for the {a mathematical formula}DLN logics considered in this paper are reported in Table 2.</list-item><list-item label="•">Control on priorities. Since priorities are not fixed a priori in {a mathematical formula}DLN, knowledge engineers can adapt them to their needs. In principle, it is possible to override DIs based on temporal criteria (which may be useful in legal ontologies and ontology versioning), define default conflict resolution criteria (as in the nonmonotonic design pattern after Example 12), and even use rational closure's specificity-based axiom ranking, if so desired, thereby getting a similar behavior in Example 26, Example 27. The logics derived from inheritance networks, preferential semantics, and rational closure can only support their fixed, specificity-based overriding criterion. Since these kinds of specificity (that take the consequences of defeasible axioms into account) and ours (based on strong axioms only) yield incomparable results, evaluating them in the perspective of knowledge engineering needs is an interesting topic for further research.</list-item></list><paragraph> Moreover, {a mathematical formula}DLN enjoys nice technical properties, that are not universally satisfied by other nonmonotonic semantics, such as the finite model property and the preservation of classical knowledge base satisfiability (the latter holds for canonical knowledge bases).</paragraph><paragraph>The translation of {a mathematical formula}DLN knowledge bases into equivalent classical knowledge bases (26), (27), (28) constitutes one of the simplest accounts of nonmonotonic inferences and overriding introduced so far: DIs are applied in decreasing priority order, checking their consistency with higher priority DIs without any further complication. There is no real nondeterminism, as all linearizations of ≺ yield the same deductive closure. Overriding in the other logics is only apparently similar, as witnessed by the comparison in Table 1; various kinds of additional constraints or mechanisms complicate their behavior, as discussed in Section 6.</paragraph><paragraph>{a mathematical formula}DLN (like any other nonmonotonic DL) facilitates the incremental refinement of knowledge bases with new subclasses and related exceptions. The advantages over monotonic design patterns are discussed in detail in Appendix C, using applicative examples from the biomedical domain. Moreover, by highlighting inconsistent prototypes, and confining those inconsistencies to individual concepts, {a mathematical formula}DLN may facilitate ontology debugging.</paragraph><paragraph>The first experimental scalability tests are promising. The result graphs show that DIs cause an approximately linear increase in reasoning time. A semi-naive implementation (relying only on the optimization techniques of the underlying classical reasoner) can construct and classify the classical translation {a mathematical formula}KBΣ for the large {a mathematical formula}KB Gene Ontology (GO) in less than 30 seconds when DIs are 5% of GO's inclusions, and in less than 2 minutes when DIs grow to 25%. The subsequent query phase remains below 4 milliseconds. As it is, the prototype is compatible with practical applications where the above response times are acceptable, or those where the set of interesting queries can be identified in advance so that {a mathematical formula}KBΣ can be pre-computed. We are planning to investigate optimization techniques to reduce the number of classifications during the construction of {a mathematical formula}KBΣ.</paragraph><paragraph>The test case generator should be considered as a contribution, as well. Its output has been analyzed in depth to verify that the synthetic ontologies it constructs and their classification are not trivial. The test case generator and the above validation criteria will hopefully be of help for other researchers in this field, where real nonmonotonic knowledge bases are not yet available.</paragraph><paragraph>The semantics of {a mathematical formula}DLN specifies how to entail defeasible inclusions (unlike Circumscribed DLs and Default DLs). This feature does not immediately help in our reference applications, but it might turn out to be helpful in designing optimization techniques. We leave the problem of general DI entailment as an open issue; Theorem 4 shows how to check DI entailments {a mathematical formula}KB{an inline-figure}δ when both {a mathematical formula}KB and δ are N-free. The complexity of N-free DI entailment is reported in Table 2. In some cases, inferring DIs is harder than subsumption and instance checking problems (unless {a mathematical formula}P=NP). It should be remarked that [18], [17], [19], [40] support analogues of DI inference and provide suitable algorithms for computing them without restrictions. The complexity of these reasoning tasks in the cited papers is at least ExpTime hard, and matches the complexity of classical inference in the underlying DL, namely {a mathematical formula}ALC in [18], [17], [19], {a mathematical formula}SHIF(D) and {a mathematical formula}SHOIN(D) in [40].</paragraph><paragraph>Another topic that deserves further attention is conjunctive query answering (especially in the context of the DL-lite family). We expect the nice properties of subsumption and instance checking in {a mathematical formula}DLN to carry over to this class of queries.</paragraph><section-title>Acknowledgements</section-title></section></content><acknowledgements><paragraph>This paper has been partially supported by the National Projects SmartHealth 2.0 (PON04a2_C) and Security Horizons (PRIN 2010-11 2010XSEMLC).</paragraph></acknowledgements><appendices><section label="Appendix A"><section-title>Proofs</section-title><section label="A.1">Proof of Theorem 1<paragraph>Note that {a mathematical formula}KBΣ⊆DLΣ. We are going to prove that for all expressions {a mathematical formula}ϵ∈DLΣ, {a mathematical formula}KB{an inline-figure}ϵ is equivalent to {a mathematical formula}KBΣ⊨ϵ. First we need a technical lemma relating membership of {a mathematical formula}KBΣ and overriding.</paragraph><paragraph label="Lemma 24">For all{a mathematical formula}DLN interpretations{a mathematical formula}I that satisfy{a mathematical formula}KBΣ,{a mathematical formula}</paragraph><paragraph label="Proof">We start by proving two auxiliary properties:</paragraph><paragraph label="Claim 1">If{a mathematical formula}δiND∉KBΣand{a mathematical formula}ND∉ovd(I,δi), then there exists{a mathematical formula}j&lt;iand{a mathematical formula}NE∈Σsuch that{a mathematical formula}δjNE∈KBΣand{a mathematical formula}NE∈ovd(I,δj).</paragraph><paragraph label="Claim 2">If{a mathematical formula}δiND∈KBΣand{a mathematical formula}ND∈ovd(I,δi), then there exists{a mathematical formula}j&lt;iand{a mathematical formula}NE∈Σsuch that{a mathematical formula}δj∈KB,{a mathematical formula}δjNE∉KBΣ, and{a mathematical formula}NE∉ovd(I,δj).</paragraph><paragraph label="Proof of Claim 1">Assume the hypotheses of Claim 1 hold. Since {a mathematical formula}ND∉ovd(I,δi), there exists a pre-model {a mathematical formula}J of {a mathematical formula}KB that satisfies condition 1–3 of Definition 1. In particular, (i) {a mathematical formula}J⊨δiND (by cond. 1 of Definition 1), (ii) {a mathematical formula}NDJ≠∅ (by cond. 2 of Definition 1). By (i) and (ii), if {a mathematical formula}J satisfied all {a mathematical formula}δjNE∈KBΣ such {a mathematical formula}δj≺δi, then {a mathematical formula}J would witness that {a mathematical formula}Si−1Σ↓≺δi∪{δiND}⊭ND⊑⊥; but then {a mathematical formula}δiND∈KBΣ, contradicting the first hypothesis. It follows that for some {a mathematical formula}j&lt;i such that {a mathematical formula}J⊭δjNE, {a mathematical formula}δjNE∈KBΣ and hence {a mathematical formula}I⊨δjNE (by the Lemma's hypothesis), which is equivalent to {a mathematical formula}NE∈satI(δj). We are only left to show that {a mathematical formula}NE∈ovd(I,δj). Suppose not. Then {a mathematical formula}NE∈satI(δj)∖ovd(I,δj) and hence, by cond. 3 of Definition 1, {a mathematical formula}NE∈satJ(δj). However, this is equivalent to {a mathematical formula}J⊨δjNE (a contradiction).</paragraph><paragraph label="Proof of Claim 2">Assume the hypotheses of Claim 2 hold. The first one ({a mathematical formula}δiND∈KBΣ) implies (by definition of the sequence {a mathematical formula}〈SiΣ〉i) that {a mathematical formula}Si−1Σ↓≺δi∪{δiND}⊭ND⊑⊥, therefore, there exists {a mathematical formula}J0 satisfying {a mathematical formula}Si−1Σ↓≺δi and {a mathematical formula}δiND, such that {a mathematical formula}NDJ0≠∅. Let {a mathematical formula}J be the extension of {a mathematical formula}J0 obtained by setting {a mathematical formula}ND′J=∅ for all normality concepts {a mathematical formula}ND′∉Σ.Note that {a mathematical formula}J is indeed a {a mathematical formula}DLN interpretation, since (i) for all {a mathematical formula}ND′∉Σ, the axiom {a mathematical formula}ND′⊑D′ is vacuously satisfied by construction of {a mathematical formula}J, and (ii) for all {a mathematical formula}ND′∈Σ, {a mathematical formula}J satisfies {a mathematical formula}ND′⊑D′ because {a mathematical formula}J agrees with {a mathematical formula}J0 on the interpretation of all {a mathematical formula}DLΣ sentences (by construction), and {a mathematical formula}J0 satisfies {a mathematical formula}ND′⊑D′ because this inclusion belongs to {a mathematical formula}S0Σ.Clearly, by construction, {a mathematical formula}J satisfies {a mathematical formula}S (the strong part of {a mathematical formula}KB) as well as conditions 1 and 2 of Definition 1.{sup:33} If {a mathematical formula}J satisfied also condition 3, then {a mathematical formula}ND∉ovd(I,δi), which contradicts the assumptions. Therefore {a mathematical formula}J violates condition 3; it follows that there must be some {a mathematical formula}δj∈KB{a mathematical formula}(j&lt;i) and some normality concept {a mathematical formula}NE such that {a mathematical formula}NE∈satI(δj)∖ovd(I,δj) but{a mathematical formula} This fact has two consequences. First, {a mathematical formula}NE∈Σ, otherwise {a mathematical formula}NE would vacuously satisfy {a mathematical formula}δj, contradicting (A.1). Second, since {a mathematical formula}J and {a mathematical formula}J0 agree on {a mathematical formula}DLΣ by construction, (A.1) implies {a mathematical formula}J0⊭δjNE which is possible only if {a mathematical formula}δjNE∉KBΣ. Finally, {a mathematical formula}NE∉ovd(I,δj) holds because {a mathematical formula}NE∈satI(δj)∖ovd(I,δj). This completes the proof of Claim 2.</paragraph><paragraph>Now suppose that the lemma does not hold (we shall derive a contradiction). This implies that either the hypotheses of Claim 1 or those of Claim 2 hold. Note that the conclusions of Claim 1 satisfy the hypotheses of Claim 2, and the conclusions of the latter satisfy the hypotheses of Claim 1. Therefore, by alternating the two claims, we have that there exists an infinite descending chain {a mathematical formula}j0=i&gt;j1&gt;j2&gt;… such that for all {a mathematical formula}n&gt;0, {a mathematical formula}δjn∈KB. This is clearly impossible since the indexes {a mathematical formula}jn are positive integers.  □</paragraph><paragraph>Next, overriding is syntactically characterized.</paragraph><paragraph label="Lemma 25">Let{a mathematical formula}I be a{a mathematical formula}DLN model of{a mathematical formula}KB. For all normality concepts{a mathematical formula}NC∈Σ, and for all{a mathematical formula}δi∈KB,{a mathematical formula}δiis overridden in{a mathematical formula}NC/Iiff{a mathematical formula}</paragraph><paragraph label="Proof">By induction on i.Base case{a mathematical formula}(i=1). Note that {a mathematical formula}Si−1Σ↓≺δi=S0Σ=S∪{ND⊑D|ND∈Σ}. We prove the contrapositive of the two implications constituting the lemma's statement.{a mathematical formula}(⇐) Suppose that {a mathematical formula}δ1 is not overridden in {a mathematical formula}NC/I. Then, there exists a pre-model {a mathematical formula}J of {a mathematical formula}KB satisfying conditions 1–3 of Definition 1. By assumption, {a mathematical formula}J⊨S; moreover, {a mathematical formula}J satisfies all the axioms {a mathematical formula}ND⊑D by def. of {a mathematical formula}DLN interpretation. So {a mathematical formula}J⊨S0Σ↓≺δi. Furthermore, by cond. 1 of Definition 1, {a mathematical formula}NC∈satJ(δi), which is equivalent to {a mathematical formula}J⊨δiNC. It follows, by cond. 2 of Definition 1 (i.e. {a mathematical formula}NCJ≠∅), that {a mathematical formula}J  is a witness that {a mathematical formula}Si−1Σ↓≺δi∪{δiNC}⊭NC⊑⊥. This proves the “if” part of the base case.{a mathematical formula}(⇒) Suppose that {a mathematical formula}S0Σ↓≺δ1∪{δ1NC}⊭NC⊑⊥. Then there exists a model {a mathematical formula}J0 of {a mathematical formula}S0Σ↓≺δ1∪{δ1NC} such that {a mathematical formula}NCJ0≠∅. Extend {a mathematical formula}J0 to a {a mathematical formula}DLN interpretation {a mathematical formula}J by setting {a mathematical formula}NDJ=∅ for all normality concepts {a mathematical formula}ND∉Σ. Note that {a mathematical formula}J is indeed a {a mathematical formula}DLN interpretation, since (i) for all {a mathematical formula}ND∉Σ, the axiom {a mathematical formula}ND⊑D is vacuously satisfied by construction of {a mathematical formula}J, and (ii) for all {a mathematical formula}ND∈Σ, {a mathematical formula}J satisfies {a mathematical formula}ND⊑D because {a mathematical formula}J agrees with {a mathematical formula}J0 on the interpretation of all {a mathematical formula}DLΣ sentences (by construction), and {a mathematical formula}J0 satisfies {a mathematical formula}ND⊑D because this inclusion belongs to {a mathematical formula}S0Σ. Similarly, by the agreement of {a mathematical formula}J and {a mathematical formula}J0 on {a mathematical formula}DLΣ sentences, we have the following three consequences: (i) {a mathematical formula}J is a pre-model of {a mathematical formula}KB; (ii) {a mathematical formula}J⊨δ1NC, which is equivalent to {a mathematical formula}NC∈satJ(δi) (i.e.  {a mathematical formula}J  satisfies cond. 1 of Definition 1); (iii) {a mathematical formula}NCJ≠∅ (i.e. {a mathematical formula}J satisfies cond. 2 of Definition 1). Condition 3 is vacuously satisfied since {a mathematical formula}δ1 has maximal priority, so {a mathematical formula}J satisfies all conditions of Definition 1 and hence {a mathematical formula}δ1 is not overridden in {a mathematical formula}NC/I. This completes the proof of the base case.Induction step ({a mathematical formula}i&gt;1). By induction hypothesis, assume that the lemma holds for all {a mathematical formula}j&lt;i, that is, {a mathematical formula}NC∈ovd(I,δj) iff {a mathematical formula}Sj−1Σ↓≺δj∪{δjNC}⊨NC⊑⊥.(⇐) We prove the contrapositive. Suppose that {a mathematical formula}δi is not overridden in {a mathematical formula}NC/I, and let {a mathematical formula}J be a pre-model of {a mathematical formula}KB satisfying conditions 1–3 of Definition 1. By analogy with the base case's proof we have that {a mathematical formula}J satisfies {a mathematical formula}S0Σ∪{δiNC}, and {a mathematical formula}NCJ≠∅. So, in order to prove that {a mathematical formula}Si−1Σ↓≺δi∪{δiNC}⊭NC⊑⊥, we are only left to show that {a mathematical formula}J  satisfies all {a mathematical formula}δjND∈Si−1Σ↓≺δi. Note that for all such j, it must be {a mathematical formula}j&lt;i, so the induction hypothesis can be applied; then we obtain the following chain of implications:{a mathematical formula} This completes the “if” part of the induction step.(⇒) Conversely, suppose that {a mathematical formula}Si−1Σ↓≺δi∪{δiNC}⊭NC⊑⊥, and let {a mathematical formula}J0 be a model of {a mathematical formula}Si−1Σ↓≺δi∪{δiNC} such that {a mathematical formula}NCJ0≠∅. Extend {a mathematical formula}J0 to a {a mathematical formula}DLN  interpretation {a mathematical formula}J by setting {a mathematical formula}NDJ=∅ for all normality concepts {a mathematical formula}ND∉Σ. By analogy with the base case, it can be seen that {a mathematical formula}J is actually a {a mathematical formula}DLN interpretation, that {a mathematical formula}J is a pre-model of {a mathematical formula}KB, and that {a mathematical formula}J satisfies conditions 1–2 of Definition 1. So, in order to show that {a mathematical formula}δi is not overridden in {a mathematical formula}NC/I, we are only left to prove that {a mathematical formula}J  satisfies also cond. 3. For this purpose, let {a mathematical formula}δj be any DI of {a mathematical formula}KB such that {a mathematical formula}δj≺δi ({a mathematical formula}j&lt;i), and let {a mathematical formula}ND be any member of {a mathematical formula}satI(δj)∖ovd(I,δj); we have to show that {a mathematical formula}ND∈satJ(δj). This holds by the following chain of implications:{a mathematical formula} This concludes the proof. □</paragraph><paragraph>By means of the above lemmas, we are going to prove that for all expressions {a mathematical formula}ϵ∈DLΣ, {a mathematical formula}KB{an inline-figure}ϵ is equivalent to {a mathematical formula}KBΣ⊨ϵ. The first results prove this for inclusions and assertions; DIs will be dealt with later.</paragraph><paragraph label="Lemma 26">Every{a mathematical formula}DLN model{a mathematical formula}Iof{a mathematical formula}KB satisfies{a mathematical formula}KBΣ.</paragraph><paragraph label="Proof">The proof is by reductio ad absurdum. Suppose that {a mathematical formula}I is a {a mathematical formula}DLN  model of {a mathematical formula}KB but {a mathematical formula}I⊭KBΣ. Then, for some {a mathematical formula}δi∈KB and {a mathematical formula}NC∈Σ, {a mathematical formula}δiNC∈KBΣ and {a mathematical formula}I⊭δiNC; the latter is equivalent to {a mathematical formula}NC∉satI(δi). By definition of {a mathematical formula}DLN model, this implies that {a mathematical formula}δi must be overridden in {a mathematical formula}NC/I. By Lemma 25, it follows that {a mathematical formula}Si−1Σ↓≺δi∪{δiNC}⊨NC⊑⊥. But then, by definition of {a mathematical formula}SiΣ and {a mathematical formula}KBΣ, {a mathematical formula}δiNC∉KBΣ (a contradiction).  □</paragraph><paragraph label="Lemma 27">Every (classical) model{a mathematical formula}I0of{a mathematical formula}KBΣcan be extended to a{a mathematical formula}DLN model{a mathematical formula}I of{a mathematical formula}KB.</paragraph><paragraph label="Proof">Extend {a mathematical formula}I0 to {a mathematical formula}I by setting {a mathematical formula}NCI=∅ for all {a mathematical formula}NC∉Σ. As shown in the proof of Claim 2 in Lemma 24, {a mathematical formula}I is actually a {a mathematical formula}DLN  interpretation (it satisfies all the inclusions {a mathematical formula}ND⊑D). Moreover, by construction, {a mathematical formula}I and {a mathematical formula}I0 agree on the interpretation of all sentences in {a mathematical formula}DLΣ, so {a mathematical formula}I satisfies {a mathematical formula}S⊆KBΣ (the strong part of {a mathematical formula}KB). We are left to prove that all concepts {a mathematical formula}NC satisfy each non-overridden DI of {a mathematical formula}KB. Suppose not, that is, there exist {a mathematical formula}δk∈KB and {a mathematical formula}NC such that the following two assumptions hold:</paragraph><list><list-item label="1.">{a mathematical formula}δk is not overridden in {a mathematical formula}NC/I;</list-item><list-item label="2.">{a mathematical formula}NC∉satI(δk) or, equivalently, {a mathematical formula}I⊭δkNC.</list-item></list><paragraph>We are finally ready to prove the main result of this section:</paragraph><paragraph label="Theorem 1">Let{a mathematical formula}KB be a{a mathematical formula}DLN knowledge base, α be a subsumption or an assertion in{a mathematical formula}DLN, and let Σ be any finite set of normality concepts including all{a mathematical formula}NCthat occur in{a mathematical formula}KB∪{α}. Then{a mathematical formula}</paragraph><paragraph label="Proof">By Lemma 26, every counterexample to {a mathematical formula}KB{an inline-figure}α is also a counterexample to {a mathematical formula}KBΣ⊨α. Conversely, every model {a mathematical formula}I of {a mathematical formula}KBΣ can be extended to a {a mathematical formula}DLN  model {a mathematical formula}J of {a mathematical formula}KB, by Lemma 27. Note that {a mathematical formula}I and {a mathematical formula}J agree on the interpretation of all {a mathematical formula}DLΣ sentences. Consequently, every counterexample to {a mathematical formula}KBΣ⊨α can be extended to a counterexample to {a mathematical formula}KB{an inline-figure}α.  □</paragraph></section><section label="A.2"><section-title>Proofs for DI inference methods</section-title><paragraph>Here we focus on the problem of inferring DIs. In the following results, we assume the usual linearization {a mathematical formula}δ1,…,δ|D| of {a mathematical formula}(D,≺). We start by extending the syntactic characterization of overriding to all DIs, including those that do not occur in {a mathematical formula}KB.</paragraph><paragraph label="Lemma 2">Let{a mathematical formula}I be a{a mathematical formula}DLN interpretation that satisfies{a mathematical formula}KBΣ. For all normality concepts{a mathematical formula}NC∈Σ, and for all DIs δ (not necessarily occurring in{a mathematical formula}KB),{a mathematical formula}</paragraph><paragraph label="Proof">{a mathematical formula}(⇐) By contraposition. Suppose that δ is not overridden in {a mathematical formula}NC/I. Then there exists a pre-model {a mathematical formula}J  of {a mathematical formula}KB that satisfies conditions 1–3 of Definition 1. By condition 1 and 2, {a mathematical formula}J⊨δNC and {a mathematical formula}J⊭NC⊑⊥. Therefore, if additionally {a mathematical formula}J satisfied {a mathematical formula}KBΣ↓≺δ, then {a mathematical formula}J would witness that {a mathematical formula}KBΣ↓≺δ∪{δNC}⊭NC⊑⊥, thereby proving (the contrapositive of) the “if” part of the lemma. Then we only have to assume that {a mathematical formula}J⊭KBΣ↓≺δ and derive a contradiction. By assumption, there exists {a mathematical formula}δiND∈KBΣ such that {a mathematical formula}J⊭δiND. Therefore, by Lemma 24, {a mathematical formula}ND∉ovd(I,δi). But then {a mathematical formula}ND∈satI(δi)∖ovd(I,δi), so cond. 3 of Definition 1 implies {a mathematical formula}J⊨δiND, which is a contradiction.{a mathematical formula}(⇒) Assume that {a mathematical formula}KBΣ↓≺δ∪{δNC}⊭NC⊑⊥. We shall prove that δ is not overridden in {a mathematical formula}NC/I. By assumption, there exists a model {a mathematical formula}J0 of {a mathematical formula}KBΣ↓≺δ∪{δNC} such that {a mathematical formula}NCJ0≠∅. Extend {a mathematical formula}J0 to a {a mathematical formula}DLN  interpretation {a mathematical formula}J in the usual way, by setting {a mathematical formula}NDJ=∅ for all {a mathematical formula}ND∉Σ. Clearly, by construction, {a mathematical formula}J satisfies {a mathematical formula}S⊆KBΣ as well as conditions 1 and 2 of Definition 1; if {a mathematical formula}J satisfied also cond. 3, then δ would not be overridden in {a mathematical formula}NC/I and the lemma would be proved. So we are only left to assume that {a mathematical formula}J does not satisfy cond. 3 and derive a contradiction. This assumption implies that there exist {a mathematical formula}δi∈KB and a normality concept {a mathematical formula}ND such that (i) {a mathematical formula}δi≺δ, (ii) {a mathematical formula}ND∈satI(δi)∖ovd(I,δi), and (iii) {a mathematical formula}ND∉satJ(δi). Note that {a mathematical formula}ND∈Σ (otherwise {a mathematical formula}ND would vacuously satisfy {a mathematical formula}δi, contradicting (iii)). Now there are two possibilities:First assume that {a mathematical formula}δiND∈KBΣ. In this case, we have also {a mathematical formula}δiND∈KBΣ↓≺δ, so {a mathematical formula}J0⊨δiND and {a mathematical formula}J⊨δiND (by the agreement of {a mathematical formula}J and {a mathematical formula}J0 on {a mathematical formula}DLΣ). However, this is equivalent to the negation of (iii).Then it must be {a mathematical formula}δiND∉KBΣ. By Lemma 24, it follows that {a mathematical formula}ND∈ovd(I,δi), which contradicts (ii).  □</paragraph><paragraph>The next theorem provides a characterization of DI inference in terms of classical reasoning:</paragraph><paragraph label="Theorem 3">For all DIs δ,{a mathematical formula}KB{an inline-figure}δiff for all normality concepts{a mathematical formula}NC,{a mathematical formula}where Σ contains{a mathematical formula}NCand all the normality concepts{a mathematical formula}NDoccurring in{a mathematical formula}KB.</paragraph><paragraph label="Proof">(⇐) We prove the contrapositive. Suppose that {a mathematical formula}KB{an inline-figure}δ, and let {a mathematical formula}I be a {a mathematical formula}DLN model of {a mathematical formula}KB that does not satisfy δ. This means that there exists a normality concept {a mathematical formula}NC such that (i) δ is not overridden in {a mathematical formula}NC/I, and (ii) {a mathematical formula}NC∉satI(δ). The former implies {a mathematical formula}KBΣ↓≺δ∪{δNC}⊭NC⊑⊥ (by Lemma 2), so we are only left to show that {a mathematical formula}KBΣ⊭δNC. Property (ii) is equivalent to {a mathematical formula}I⊭δNC, which implies {a mathematical formula}KBΣ⊭δNC because {a mathematical formula}I satisfies {a mathematical formula}KBΣ (by Lemma 26). This completes the “if” part of the proof.(⇒) We prove the contrapositive. Assume that (i) {a mathematical formula}KBΣ↓≺δ∪{δNC}⊭NC⊑⊥ and (ii) {a mathematical formula}KBΣ⊭δNC. By (ii), there exists a model {a mathematical formula}I′ of {a mathematical formula}KBΣ such that {a mathematical formula}I′⊭δNC. Then, by Lemma 27, there exists an extension {a mathematical formula}I of {a mathematical formula}I′ such that {a mathematical formula}I is a {a mathematical formula}DLN model of {a mathematical formula}KB and {a mathematical formula}I⊭δNC (because {a mathematical formula}I and {a mathematical formula}I′ agree on {a mathematical formula}DLΣ), which is equivalent to {a mathematical formula}NC∉satI(δ). Moreover, by (i) and Lemma 2, {a mathematical formula}δNC is not overridden in {a mathematical formula}NC/I. It follows that {a mathematical formula}I⊭δ, and hence {a mathematical formula}KB{an inline-figure}δ.  □</paragraph><paragraph>Next, we provide the technical details leading to the proof of Theorem 4 (that provides a DI inference method for N-free knowledge bases and DIs). In the following, let {a mathematical formula}KB be a {a mathematical formula}DLN KB containing no occurrences of any normality concept. The first lemma is an easy consequence of the fact that {a mathematical formula}NC occurs only negatively (i.e., on the l.h.s. of inclusions) in {a mathematical formula}KB{NC}.</paragraph><paragraph label="Lemma 28">Let C be a concept and{a mathematical formula}Ibe a model of{a mathematical formula}KB{NC}. All interpretations{a mathematical formula}I′that coincide with{a mathematical formula}Iexcept for{a mathematical formula}NCI′⊆NCIare models of{a mathematical formula}KB{NC}.</paragraph><paragraph>By Theorem 3, in order to disprove a query {a mathematical formula}KB{an inline-figure}δ, for a DI δ, it is sufficient to find a normality concept {a mathematical formula}NC such that {a mathematical formula}KB{NC}↓≺δ∪{δNC}⊭NC⊑⊥ and {a mathematical formula}KB{NC}⊭δNC (intuitively, δ is neither overridden nor satisfied in {a mathematical formula}NC). Now, assume that {a mathematical formula}NC is such a concept, and let {a mathematical formula}DC⊆D be the set of defeasible inclusions γ such that {a mathematical formula}γNC∈KB{NC}. Let for brevity {a mathematical formula}X=〚DC〛, the following lemma states that {a mathematical formula}NC is a subset of X in all models of {a mathematical formula}KB{NC}, which is not obvious due to the negative conjuncts in X, corresponding to the DIs {a mathematical formula}γ∈D∖DC.</paragraph><paragraph label="Lemma 29">It holds that{a mathematical formula}KB{NC}⊨NC⊑X.</paragraph><paragraph label="Proof">The concept X contains a conjunct for each DI in {a mathematical formula}D; we prove that {a mathematical formula}NC is contained in each of these conjuncts. For each {a mathematical formula}γ∈DC, we have that {a mathematical formula}γNC=(NC⊓pre(γ)⊑con(γ))∈KB{NC}. Notice that {a mathematical formula}γNC is equivalent to {a mathematical formula}NC⊑〚γ〛 and so {a mathematical formula}KB{NC}⊨NC⊑〚γ〛, as desired.Then, consider {a mathematical formula}γ∈D∖DC. Since {a mathematical formula}γ∉KB{NC}, there is a step i in the construction of {a mathematical formula}KB{NC} (see Section 3.4) such that {a mathematical formula}Si−1NC↓≺γ∪{γNC}⊨NC⊑⊥. This implies that {a mathematical formula}KB{NC}∪{γNC}⊨NC⊑⊥. It follows that for all models {a mathematical formula}I of {a mathematical formula}KB{NC} either {a mathematical formula}NCI is empty or {a mathematical formula}(NC⊓¬〚γ〛)I is not empty. We prove that {a mathematical formula}KB{NC}⊨NC⊑¬〚γ〛. Assuming the contrary, there exists a model {a mathematical formula}J of {a mathematical formula}KB{NC} and an individual {a mathematical formula}a∈ΔJ s.t. {a mathematical formula}a∈(NC⊓〚γ〛)J. Let {a mathematical formula}J′ be obtained from {a mathematical formula}J by setting {a mathematical formula}NCJ′={a}. By Lemma 28, {a mathematical formula}J′ is a model of {a mathematical formula}KB{NC}. Moreover, it holds that {a mathematical formula}NCJ′ is not empty whereas {a mathematical formula}(NC⊓¬〚γ〛)J′ is empty, contradicting a previous claim. We conclude that {a mathematical formula}KB{NC}⊨NC⊑¬〚γ〛. Having considered all conjuncts of X, we obtain the thesis.  □</paragraph><paragraph>The following lemma establishes a strong connection between {a mathematical formula}KB{NC} and {a mathematical formula}KB{NX}: the latter can be obtained from the former by replacing each occurrence of {a mathematical formula}NC with {a mathematical formula}NX (an operation denoted below by {a mathematical formula}[NX/NC]), except for the axiom {a mathematical formula}NC⊑C, which is entirely replaced by {a mathematical formula}NX⊑X. In particular, this means that the same DIs from {a mathematical formula}D are instantiated in {a mathematical formula}KB{NC} and {a mathematical formula}KB{NX}. This connection is proved for each single step in the construction of {a mathematical formula}KB{NC} and {a mathematical formula}KB{NX} (see Section 3.4).</paragraph><paragraph label="Lemma 30">For all{a mathematical formula}i≥0it holds that{a mathematical formula}</paragraph><paragraph label="Proof">We proceed by induction on i, the thesis being trivial for {a mathematical formula}i=0. Let {a mathematical formula}i&gt;0, by inductive hypothesis the above relationship holds between {a mathematical formula}Si−1{NC} and {a mathematical formula}Si−1{NX} and hence also between {a mathematical formula}Si−1{NC}↓≺δ and {a mathematical formula}Si−1{NX}↓≺δ. Let γ be the DI of index i according to the chosen linearization of {a mathematical formula}(D,≺). In order to obtain the thesis, it suffices to show that {a mathematical formula}γNC is inserted into {a mathematical formula}Si{NC} iff {a mathematical formula}γNX is inserted into {a mathematical formula}Si{NX}.Assume first that {a mathematical formula}γNC∈Si{NC}. Then, there exists a model {a mathematical formula}I of {a mathematical formula}Si−1{NC}↓≺δ∪{γNC} such that {a mathematical formula}NCI is not empty. Let {a mathematical formula}I′ be the extension of {a mathematical formula}I obtained by setting {a mathematical formula}NXI′=NCI, we prove that {a mathematical formula}I′ is a model of {a mathematical formula}Si−1{NX}↓≺δ∪{γNX}. Lemma 29 guarantees that {a mathematical formula}I′ satisfies {a mathematical formula}NX⊑X. Since {a mathematical formula}I satisfies {a mathematical formula}γNC, it follows that {a mathematical formula}I′ satisfies {a mathematical formula}γNX. The other axioms are taken care of by the inductive hypothesis. We conclude that {a mathematical formula}γNX∈Si{NX}.Conversely, assume that {a mathematical formula}γNC∉Si{NC}. Then, {a mathematical formula}γ∉DC and therefore by construction {a mathematical formula}X⊑¬〚γ〛. Since {a mathematical formula}γNX≡NX⊑〚γ〛, it follows that {a mathematical formula}Si−1{NX}↓≺δ∪{γNX}⊨NX⊑⊥ and hence {a mathematical formula}γNX∉Si{NX}.  □</paragraph><paragraph label="Proof">Let{a mathematical formula}KBbe a{a mathematical formula}DLN KB and let δ be a DI, both without occurrences of any normality concept. Then,{a mathematical formula}KB{an inline-figure}δif and only if for all{a mathematical formula}D′⊆D{a mathematical formula}where{a mathematical formula}X=〚D′〛.The “only if” implication is a direct consequence of Theorem 3. As to the “if” direction, assume that {a mathematical formula}KB{an inline-figure}δ. By Theorem 3 there exists a concept C such that {a mathematical formula}KB{NC}↓≺δ∪{δNC}⊭NC⊑⊥ and {a mathematical formula}KB{NC}⊭δNC. Let {a mathematical formula}D′ be the set of DIs {a mathematical formula}γ∈D such that {a mathematical formula}γNC∈KB{NC} and let {a mathematical formula}X=〚D′〛. Let {a mathematical formula}I be a model of {a mathematical formula}KB{NC}↓≺δ∪{δNC} such that {a mathematical formula}NCI≠∅. Consider the extension {a mathematical formula}I′ of {a mathematical formula}I obtained by setting {a mathematical formula}NXI′=NCI. We prove that {a mathematical formula}I′ is a model of {a mathematical formula}KB{NX}↓≺δ∪{δNX}. The fact that {a mathematical formula}I′ satisfies {a mathematical formula}δNX is an immediate consequence of {a mathematical formula}I satisfying {a mathematical formula}δNC and the fact that δ contains no normality concepts. By Lemma 30, {a mathematical formula}KB{NX} can be obtained from {a mathematical formula}KB{NC} by replacing all occurrences of {a mathematical formula}NC with {a mathematical formula}NX, except for the axiom {a mathematical formula}NC⊑C, which is entirely replaced by {a mathematical formula}NX⊑X. So, {a mathematical formula}I′ satisfies by construction all axioms of {a mathematical formula}KB{NX} except {a mathematical formula}NX⊑X, whose satisfaction is instead guaranteed by Lemma 29. Then, {a mathematical formula}I′ is a witness to {a mathematical formula}KB{NX}↓≺δ∪{δNX}⊭NX⊑⊥.It remains to prove that {a mathematical formula}KB{NX}⊭δNX. To this aim, we extend an interpretation {a mathematical formula}I which witnesses {a mathematical formula}KB{NC}⊭δNC into an interpretation {a mathematical formula}I′ which witnesses {a mathematical formula}KB{NX}⊭δNX, by stipulating {a mathematical formula}NXI′=NCI. Once again, Lemma 29, Lemma 30 can be used to prove that {a mathematical formula}I′ is indeed a model of {a mathematical formula}KB{NX}.  □</paragraph></section><section label="A.3">Proofs for Section 3.7<paragraph>Notation: In the following results we exploit an abbreviation for condition 3 in Definition 1: we write {a mathematical formula}I≤δKBJ if δ is a DI and {a mathematical formula}I, {a mathematical formula}J are two {a mathematical formula}DLN  interpretations such that for all {a mathematical formula}δ′≺δ in {a mathematical formula}KB, it holds that {a mathematical formula}satI(δ′)∖ovdKB(I,δ′)⊆satJ(δ′). The superscript {a mathematical formula}KB will be omitted when clear from context.</paragraph><paragraph label="Theorem 6">Let{a mathematical formula}S and{a mathematical formula}S′be classically equivalent sets of inclusions and assertions. Then, for all sets of DIs{a mathematical formula}D,</paragraph><list><list-item label="1.">{a mathematical formula}I is a{a mathematical formula}DLN model of{a mathematical formula}S′∪Diff{a mathematical formula}I is a{a mathematical formula}DLN model of{a mathematical formula}S∪D;</list-item><list-item label="2.">for all subsumptions/assertions/DIs ϵ,{a mathematical formula}S′∪D{an inline-figure}ϵiff{a mathematical formula}S∪D{an inline-figure}ϵ.</list-item></list><paragraph label="Proof">Let {a mathematical formula}KB=S∪D and {a mathematical formula}KB′=S′∪D. First, we show that for all interpretations {a mathematical formula}I and all DIs ϵ, {a mathematical formula}ovdKB(I,ϵ)=ovdKB′(I,ϵ). The proof is by induction on the priority relation ≺. Assume that ϵ has maximal priority w.r.t. {a mathematical formula}D, i.e. for all {a mathematical formula}δ′∈D, {a mathematical formula}δ′⊀ϵ. We have that {a mathematical formula}NC∈ovdKB(I,ϵ) iff there does not exist a pre-model {a mathematical formula}J of {a mathematical formula}KB such that {a mathematical formula}NC∈satJ(ϵ) and {a mathematical formula}NCJ≠∅. However, since {a mathematical formula}KB and {a mathematical formula}KB′ have the same pre-models, this is equivalent to {a mathematical formula}NC∈ovdKB′(I,ϵ).Induction step, assume that for all {a mathematical formula}δ′∈D such that {a mathematical formula}δ′≺ϵ, {a mathematical formula}ovdKB(I,δ′)=ovdKB′(I,δ′). This means that {a mathematical formula}satI(δ′)∖ovdKB(I,δ′)=satI(δ′)∖ovdKB′(I,δ′) and consequently {a mathematical formula}I≤ϵKBJ iff {a mathematical formula}I≤ϵKB′J, for all interpretations {a mathematical formula}J. By definition, {a mathematical formula}NC∈ovdKB(I,ϵ) iff there does not exist a pre-model {a mathematical formula}J of {a mathematical formula}KB such that {a mathematical formula}NC∈satJ(ϵ), {a mathematical formula}NCJ≠∅ and {a mathematical formula}I≤ϵKBJ. However, since {a mathematical formula}KB and {a mathematical formula}KB′ have the same pre-models and {a mathematical formula}I≤ϵKBJ iff {a mathematical formula}I≤ϵKB′J, this is equivalent to {a mathematical formula}NC∈ovdKB′(I,ϵ).Now, {a mathematical formula}I⊨KBϵ iff for all {a mathematical formula}NC, {a mathematical formula}NC∈satI(ϵ)∪ovdKB(I,ϵ). Since {a mathematical formula}ovdKB(I,ϵ)=ovdKB′(I,ϵ), this is equivalent to {a mathematical formula}I⊨KB′ϵ. The thesis immediately follows from definitions.  □</paragraph><paragraph label="Theorem 7">Suppose that{a mathematical formula}C≡Dis a (classically) valid equivalence and let{a mathematical formula}KB¯be a knowledge base obtained from{a mathematical formula}KB by replacing some occurrences of C with D. If ≺ is semantic, then</paragraph><list><list-item label="1.">{a mathematical formula}I is a{a mathematical formula}DLN model of{a mathematical formula}KB¯iff{a mathematical formula}I is a{a mathematical formula}DLN model of{a mathematical formula}KB;</list-item><list-item label="2.">for all subsumptions/assertions/DIs ϵ,{a mathematical formula}KB¯{an inline-figure}ϵ¯iff{a mathematical formula}KB{an inline-figure}ϵ,</list-item></list><paragraph label="Proof">First, since {a mathematical formula}C≡D, it holds that {a mathematical formula}H≡H¯, where H is a generic concept and {a mathematical formula}H¯ is obtained from H by replacing some occurrences of C with D. This entails the following facts: (i) the classical part {a mathematical formula}S of {a mathematical formula}KB and the corresponding part {a mathematical formula}S¯ of {a mathematical formula}KB¯ are classically equivalent, (ii) for all defeasible inclusions ϵ and interpretations {a mathematical formula}I, {a mathematical formula}satI(ϵ)=satI(ϵ¯), and (iii) for all defeasible inclusions {a mathematical formula}ϵ1 and {a mathematical formula}ϵ2, {a mathematical formula}ϵ1≺ϵ2 iff {a mathematical formula}ϵ¯1≺ϵ¯2, where {a mathematical formula}ϵ¯, {a mathematical formula}ϵ¯1 and {a mathematical formula}ϵ¯2 are obtained respectively from ϵ, {a mathematical formula}ϵ1 and {a mathematical formula}ϵ2 by replacing some occurrences of C with D.By induction on ≺, we show that for all interpretations {a mathematical formula}I  and all DIs ϵ, {a mathematical formula}ovdKB(I,ϵ)=ovdKB¯(I,ϵ¯). Base case: ϵ is maximal w.r.t. {a mathematical formula}KB. First, by (iii), {a mathematical formula}ϵ¯ is maximal w.r.t. {a mathematical formula}KB¯. Then, due to (i) and (ii), the following equivalences holds: {a mathematical formula}NC∈ovdKB(I,ϵ) iff there does not exist a pre-model {a mathematical formula}J of {a mathematical formula}KB such that {a mathematical formula}NC∈satJ(ϵ) and {a mathematical formula}NCJ≠∅ iff there does not exist a pre-model {a mathematical formula}J′ of {a mathematical formula}S¯ such that {a mathematical formula}NC∈satJ(ϵ¯) and {a mathematical formula}NCJ≠∅ iff {a mathematical formula}NC∈ovdKB¯(I,ϵ¯).Induction step: for all {a mathematical formula}δ′∈D such that {a mathematical formula}δ′≺ϵ, {a mathematical formula}ovdKB(I,δ′)=ovdKB¯(I,δ′¯), where {a mathematical formula}δ′¯ is the corresponding DI in {a mathematical formula}KB¯. This together with (ii) and (iii) implies that {a mathematical formula}I≤ϵKBJ iff {a mathematical formula}I≤ϵKB¯J, for all {a mathematical formula}J. Moreover, by (i){a mathematical formula}KB and {a mathematical formula}KB¯ have the same pre-models. Then, the following equivalences holds: {a mathematical formula}NC∈ovdKB(I,ϵ) iff there does not exist a pre-model {a mathematical formula}J of {a mathematical formula}KB such that {a mathematical formula}NC∈satJ(ϵ), {a mathematical formula}NCJ≠∅ and {a mathematical formula}I≤ϵKBJ iff there does not exist a pre-model {a mathematical formula}J′ of {a mathematical formula}KB¯ such that {a mathematical formula}NC∈satJ′(ϵ¯), {a mathematical formula}NCJ′≠∅ and {a mathematical formula}I≤ϵ¯KB¯J′ iff {a mathematical formula}NC∈ovdKB¯(I,ϵ¯).Finally, for all DIs ϵ, {a mathematical formula}I⊨KBϵ iff for all {a mathematical formula}NC, {a mathematical formula}NC∈satI(ϵ)∪ovdKB(I,ϵ). Due to (ii) and the fact that {a mathematical formula}ovdKB(I,ϵ)=ovdKB¯(I,ϵ¯), this is equivalent to: for all {a mathematical formula}NC, {a mathematical formula}NC∈satI(ϵ¯)∪ovdKB¯(I,ϵ¯) iff {a mathematical formula}I⊨KB¯ϵ¯. The thesis immediately follows from definitions.  □</paragraph><paragraph label="Proof">Axiom (REF) already holds in its standard interpretation. We present the proof for the axiom (CT), as the proofs for the other axioms are analogous.(CT) Let {a mathematical formula}δ1=(C⊑nD), {a mathematical formula}δ2=(C⊓D⊑nE), and {a mathematical formula}δ=(C⊑nE), and assume that {a mathematical formula}KB{an inline-figure}δ1 and {a mathematical formula}KB{an inline-figure}δ2. Let {a mathematical formula}I be a {a mathematical formula}DLN model of {a mathematical formula}KB and let {a mathematical formula}NX be a normality concept such that {a mathematical formula}δ1 and {a mathematical formula}δ2 are not overridden in {a mathematical formula}NX/I. We prove that {a mathematical formula}NX∈satI(δ).By assumption, {a mathematical formula}NX∈satI(δ1)∩satI(δ2). If {a mathematical formula}NXI is empty, then clearly {a mathematical formula}NX∈satI(δ). Otherwise, let {a mathematical formula}x∈NXI and assume that {a mathematical formula}x∈CI. We have that {a mathematical formula}x∈DI and hence {a mathematical formula}x∈EI, which proves our thesis.  □</paragraph><paragraph label="Theorem 10">Axiom (LLE) holds when the assumption{a mathematical formula}C≡Dis interpreted as{a mathematical formula}KB⊨C≡D, and ≺ is semantic.</paragraph><paragraph label="Proof">Let {a mathematical formula}δ1=(C⊑nE), {a mathematical formula}δ2=(C≡D), and {a mathematical formula}δ=(D⊑nE). Assume that {a mathematical formula}KB{an inline-figure}δ1 and {a mathematical formula}KB⊨δ2. Let {a mathematical formula}I be a model of {a mathematical formula}KB, we prove that {a mathematical formula}I⊨KBδ.Let {a mathematical formula}NX be a normality concept and assume first that {a mathematical formula}δ1 is overridden in {a mathematical formula}NX/I. We prove that also δ is overridden in {a mathematical formula}NX/I. By definition of overriding, for all pre-models {a mathematical formula}J of {a mathematical formula}KB such that {a mathematical formula}I≤δ1J it holds that {a mathematical formula}NXJ=∅ or {a mathematical formula}NX∉satJ(δ1). Now, let {a mathematical formula}J′ be a pre-model of {a mathematical formula}KB such that {a mathematical formula}I≤δJ′. Since the l.h.s. of δ and {a mathematical formula}δ1 are classically equivalent under {a mathematical formula}KB, each DI which has a higher priority than {a mathematical formula}δ1 also has a higher priority than δ. Hence, {a mathematical formula}I≤δ1J′ and either {a mathematical formula}NXJ′=∅ or {a mathematical formula}NX∉satJ′(δ1). In particular, in the latter case {a mathematical formula}NX∉satJ′(δ), because violating {a mathematical formula}δ1 implies violating δ. We can then conclude that δ is overridden in {a mathematical formula}NX/I.Finally, assume that {a mathematical formula}δ1 is not overridden in {a mathematical formula}NX/I. In that case, it holds that {a mathematical formula}NX∈satI(δ1) and hence {a mathematical formula}NX∈satI(δ). Putting the two cases together, we obtain that {a mathematical formula}I⊨KBδ.  □</paragraph><paragraph label="Theorem 11">If{a mathematical formula}DL enjoys the finite model property, then{a mathematical formula}DLN enjoys it, too.</paragraph><paragraph label="Proof">Suppose that {a mathematical formula}DL enjoys the finite model property and let {a mathematical formula}KB be any satisfiable {a mathematical formula}DLN knowledge base. Let Σ be the set of normality concepts occurring in {a mathematical formula}KB. By Lemma 27 and Lemma 26, {a mathematical formula}KB is satisfiable iff {a mathematical formula}KBΣ is classically satisfiable. Moreover, by hypothesis, {a mathematical formula}KBΣ is consistent iff it has a finite model {a mathematical formula}I. As shown in the proof of Lemma 27, the extension {a mathematical formula}I′ of {a mathematical formula}I such that for all {a mathematical formula}NC∉Σ, {a mathematical formula}NCI′=∅ is a {a mathematical formula}DLN model of {a mathematical formula}KB. Clearly, since {a mathematical formula}I is finite, {a mathematical formula}I′ is finite as well.  □</paragraph></section><section label="A.4">Proofs for Section 4<paragraph label="Theorem 12">If</paragraph><list><list-item label="•">{a mathematical formula}DL supports ⊓ in the left-hand side of inclusions, and</list-item><list-item label="•">both subsumption (resp. instance) checking in{a mathematical formula}DL and the preference relation ≺ belong to a complexity class{a mathematical formula}C,</list-item></list><paragraph label="Proof">Let {a mathematical formula}KB=S∪D. By Theorem 1, {a mathematical formula}KB{an inline-figure}α can be verified by constructing {a mathematical formula}KBΣ and checking whether {a mathematical formula}KBΣ⊨α, where Σ is the set of normality concepts occurring in {a mathematical formula}KB∪{α} and hence{a mathematical formula} As a preliminary step, {a mathematical formula}D must be linearized according to the preference relation ≺, using any standard sorting algorithm. Since checking {a mathematical formula}δ≺δ′ is in {a mathematical formula}PC, by assumption, this step takes a polynomial number of calls to the oracle.Let {a mathematical formula}KBmaxΣ=S∪{NC⊑C|NC∈Σ}∪{δiNC|δi∈D and NC∈Σ}. Clearly, {a mathematical formula}‖KBmaxΣ‖=O(‖S‖+‖Σ‖+‖D‖⋅‖Σ‖). Moreover, note that for all {a mathematical formula}i≤|D|, {a mathematical formula}Si−1Σ↓≺δi⊆KBΣ⊆KBmaxΣ, so{a mathematical formula}{a mathematical formula} By Eq. (27), the construction of {a mathematical formula}KBΣ requires a polynomial number ({a mathematical formula}|D|⋅|Σ|) of underivability tests where the knowledge base (that is, {a mathematical formula}Si−1Σ↓≺δi∪{δiNC}) can be computed in polynomial time from the previous step ({a mathematical formula}Si−1Σ) using the oracle for {a mathematical formula}C to compare DIs. Since the size of those underivability problems is polynomial in {a mathematical formula}‖KB‖ and {a mathematical formula}‖α‖ (by (A.3) and (A.2)), it follows that {a mathematical formula}KBΣ can be computed in polynomial time using the oracle for {a mathematical formula}C. Similarly, by (A.4) and (A.2), the final test {a mathematical formula}KBΣ⊨α can be verified by a call to the oracle on an input whose size is polynomial in {a mathematical formula}‖KB‖+‖α‖. The theorem immediately follows.  □</paragraph><paragraph label="Theorem 16">Let{a mathematical formula}KB range over{a mathematical formula}(EL⊥)Nknowledge bases, and δ range over{a mathematical formula}(EL⊥)NDIs. Then checking{a mathematical formula}KB{an inline-figure}δis coNP-hard. Similarly for{a mathematical formula}DL-litehornNknowledge bases and DIs. The theorem still holds if the input{a mathematical formula}KB and δ are N-free and ∃-free.</paragraph><paragraph label="Claim 4">This lower complexity bound is proved by reducing 3SAT to deciding {a mathematical formula}KB{an inline-figure}δ, for suitable {a mathematical formula}KB and δ. Let {a mathematical formula}p1,…,pn be the propositional symbols occurring in the given 3SAT instance. For each {a mathematical formula}pi introduce in {a mathematical formula}KB two concept names {a mathematical formula}Pi and {a mathematical formula}P¯i encoding {a mathematical formula}pi and {a mathematical formula}¬pi, respectively, and a corresponding axiom{a mathematical formula} Next, for each clause {a mathematical formula}cj=lj1∨lj2∨lj3 in the 3SAT instance, add a concept name {a mathematical formula}C¯j representing {a mathematical formula}¬cj and the corresponding axiom{a mathematical formula} where each {a mathematical formula}L¯ji is the encoding of {a mathematical formula}¬lji. Introduce also a concept name F representing the falsity of the entire clause set, axiomatized by the set of axioms{a mathematical formula} where {a mathematical formula}c1,…,cm are all the clauses in the 3SAT instance. Let {a mathematical formula}S be the set of strong axioms introduced so far. Finally, for all {a mathematical formula}i=1,…,n, add to {a mathematical formula}KB the DIs:{a mathematical formula}{a mathematical formula} Note that, according to specificity-based priority, these DIs are all mutually incomparable.Let C be any{a mathematical formula}EL⊥concept. If{a mathematical formula}C⋢KBPithen{a mathematical formula}⊤⊑nP¯iis not overridden in{a mathematical formula}NC. Symmetrically, if{a mathematical formula}C⋢KBP¯ithen{a mathematical formula}⊤⊑nPiis not overridden in{a mathematical formula}NC.We prove only the first part of the claim (the second part is symmetric). Assume that {a mathematical formula}C⋢KBPi. Let {a mathematical formula}δ=(⊤⊑nP¯i). By Lemma 2, δ is not overridden in {a mathematical formula}NC iff {a mathematical formula}KBΣ↓≺δ∪{δNC}⊭NC⊑⊥, where {a mathematical formula}Σ={NC}. Moreover, since the DIs of {a mathematical formula}KB  are all mutually incomparable, and {a mathematical formula}δNC=NC⊓⊤⊑P¯i, we have that {a mathematical formula}KBΣ↓≺δ∪{δNC} equals:{a mathematical formula} Therefore we have to prove that (A.10) does not entail {a mathematical formula}NC⊑⊥.The assumption {a mathematical formula}C⋢KBPi implies that there exists a pre-model {a mathematical formula}I of {a mathematical formula}KB such that{a mathematical formula} Obtain another interpretation {a mathematical formula}J from {a mathematical formula}I by setting:{a mathematical formula} It can be easily verified that {a mathematical formula}J⊨S∪{NC⊓⊤⊑P¯i}, by construction. Moreover, note that for all concept names A, {a mathematical formula}AI⊆AJ, and C (like every {a mathematical formula}EL⊥ concept) is monotonic in its atomic concepts, so {a mathematical formula}CI⊆CJ; then, by (A.12), we have:{a mathematical formula} which implies that {a mathematical formula}J⊨NC⊑C.It follows that {a mathematical formula}J is a model of (A.10). Furthermore, by (A.11) and (A.12), {a mathematical formula}NCJ≠∅. So {a mathematical formula}J is a witness that (A.10) does not entail {a mathematical formula}NC⊑⊥. This completes the proof of Claim 1.For all{a mathematical formula}EL⊥concepts C such that{a mathematical formula}KB{an inline-figure}NC⊑⊥, exactly one of{a mathematical formula}C⊑KBPiand{a mathematical formula}C⊑KBP¯iholds.By reduction to absurdum: Assume that Claim 2 does not hold. There are two possibilities:(a) {a mathematical formula}KB{an inline-figure}NC⊑⊥, {a mathematical formula}C⊑KBPi, and {a mathematical formula}C⊑KBP¯i. Then, by (A.5), {a mathematical formula}C⊑KB⊥, and hence {a mathematical formula}KB{an inline-figure}NC⊑⊥ (a contradiction).(b) {a mathematical formula}KB{an inline-figure}NC⊑⊥, {a mathematical formula}C⋢KBPi, and {a mathematical formula}C⋢KBP¯i. Then, by Claim 1, neither {a mathematical formula}⊤⊑nPi nor {a mathematical formula}⊤⊑nP¯i are overridden in {a mathematical formula}NC. It follows that {a mathematical formula}KB{an inline-figure}NC⊑Pi⊓P¯i, and hence, by (A.5), {a mathematical formula}KB{an inline-figure}NC⊑⊥ (a contradiction). This completes the proof of Claim 2.Let{a mathematical formula}δ=(⊤⊑nF). If{a mathematical formula}KB{an inline-figure}δ, then the SAT instance is satisfiable.Assume that {a mathematical formula}KB{an inline-figure}δ. Then there exist a {a mathematical formula}DLN model {a mathematical formula}I of {a mathematical formula}KB and a normality concept {a mathematical formula}NC such that {a mathematical formula}NC∉satI(δ). Clearly, this implies that {a mathematical formula}NCI≠∅, so {a mathematical formula}I is a witness that {a mathematical formula}KB{an inline-figure}NC⊑⊥. By Claim 2, it follows that for all {a mathematical formula}pi,{a mathematical formula} Now define a truth assignment M as follows:{a mathematical formula} By (A.13), M is well defined.Next, recall that {a mathematical formula}NC∉satI(δ), which implies {a mathematical formula}NCI⊈con(δ)I=FI. Therefore, by (A.7), {a mathematical formula}NCI⊈C¯jI ({a mathematical formula}1≤j≤m). By (A.6), this implies that for all {a mathematical formula}j=1,…,m, there exists {a mathematical formula}i∈{1,2,3} such that {a mathematical formula}NCI⊈L¯ji.It follows, by (A.13) and (A.14) that for all {a mathematical formula}j=1,…,m, there exists {a mathematical formula}i∈{1,2,3} such that {a mathematical formula}M⊭¬lij (that is, {a mathematical formula}M⊨lij), so M satisfies the given SAT instance. This proves Claim 3.If the SAT instance is satisfiable, then{a mathematical formula}KB{an inline-figure}δ, where{a mathematical formula}δ=(⊤⊑nF).To prove this claim, let M be a truth assignment satisfying the given SAT instance. We have to find a {a mathematical formula}DLN model {a mathematical formula}I of {a mathematical formula}KB and a concept {a mathematical formula}NC such that δ is not overridden in {a mathematical formula}NC/I and {a mathematical formula}NC∉satI(δ).Let {a mathematical formula}C=⨅{Pi|M⊨pi}, and construct {a mathematical formula}I as follows:{a mathematical formula} Since M satisfies {a mathematical formula}c1,…,cm, (A.6) is satisfied. The other strong axioms are obviously satisfied by construction. So {a mathematical formula}I is a pre-model of {a mathematical formula}KB. Now we have to prove that {a mathematical formula}I satisfies the DIs of {a mathematical formula}KB. All the normality concepts {a mathematical formula}ND with {a mathematical formula}C≠D vacuously satisfy all DIs. The DIs whose head {a mathematical formula}Pi encodes a proposition {a mathematical formula}pi satisfied by M are satisfied by {a mathematical formula}NC because {a mathematical formula}NCI={a}=PiI. The remaining DIs are overridden in {a mathematical formula}NC/I because the valid axiom {a mathematical formula}NC⊑C and (A.5) imply {a mathematical formula}NC⊑KB¬Pi, whenever {a mathematical formula}M⊨¬pi. This completes the proof that {a mathematical formula}I is a {a mathematical formula}DLN model of {a mathematical formula}KB.The next step consists in proving that δ is not overridden in {a mathematical formula}NC/I. Note that F has one occurrence in {a mathematical formula}KB and that such occurrence is positive, so a witness {a mathematical formula}J that δ is not overridden in {a mathematical formula}NC/I can be obtained from {a mathematical formula}I simply by setting {a mathematical formula}FJ=ΔJ=ΔI, {a mathematical formula}AJ=AI for all concept names {a mathematical formula}A≠F, and {a mathematical formula}NDJ=NDI for all normality concepts {a mathematical formula}ND. By the above observation on F, {a mathematical formula}J satisfies {a mathematical formula}S. Moreover, by the monotonicity of {a mathematical formula}EL⊥ concepts, we have that for all such D, {a mathematical formula}DI⊆DJ, so {a mathematical formula}J satisfies all axioms {a mathematical formula}ND⊑D. This proves that {a mathematical formula}J is a pre-model of {a mathematical formula}KB. Moreover, since δ is incomparable with all the DIs in {a mathematical formula}KB, condition 3 of the definition of overriding is trivially satisfied. Clearly, condition 2 is satisfied because {a mathematical formula}NCJ=NCI≠∅, and condition 1 is satisfied because {a mathematical formula}con(δ)=ΔJ (by construction).We are only left to show that {a mathematical formula}NC∉satI(δ). This follows immediately from the definitions of {a mathematical formula}NCI and {a mathematical formula}FI, so the proof of Claim 4 is completed.Finally, Claim 3, Claim 4 prove that the reduction is correct; the theorem follows immediately.  □</paragraph><paragraph label="Theorem 17">If</paragraph><list><list-item label="•">{a mathematical formula}DL supports ⊓ in the left-hand side of inclusions, and</list-item><list-item label="•">subsumption checking in{a mathematical formula}DL belongs to a complexity class{a mathematical formula}C, and</list-item><list-item label="•">the preference relation ≺ belongs to{a mathematical formula}PC,</list-item></list><paragraph label="Proof">The proof is analogous to the proof of Theorem 12. Let {a mathematical formula}KB=S∪D. The complement of the N-free DI entailment can be decided by guessing a subset {a mathematical formula}D′⊑D and checking whether the condition of Theorem 4 is satisfied. Given the estimates (A.2) and (A.4), this algorithm runs in polynomial time, using an oracle for {a mathematical formula}DL subsumption and ≺. It follows that N-free DI entailment is in {a mathematical formula}coNPC.  □</paragraph><paragraph label="Remark 7">Corollaries of Section 4The lower complexity bounds (hardness) in the corollaries of Section 4 follow immediately from two observations: if {a mathematical formula}D=∅ (i.e. the knowledge base contains no DIs) then</paragraph><list><list-item label="•">for all N-free subsumptions and assertions α, {a mathematical formula}KB{an inline-figure}α iff {a mathematical formula}KB⊨α;</list-item><list-item label="•">for all N-free concepts C and D, {a mathematical formula}KB{an inline-figure}C⊑nD iff {a mathematical formula}KB⊨C⊑D.</list-item></list></section><section label="A.5">Proofs for Section 5<paragraph label="Theorem 21">If{a mathematical formula}KB=S∪Dis a canonical{a mathematical formula}DLN knowledge base, then for all subsumption or assertions{a mathematical formula}α∈DL,{a mathematical formula}KB{an inline-figure}αiff{a mathematical formula}S⊨α.</paragraph><paragraph label="Proof">Every {a mathematical formula}DLN model of {a mathematical formula}KB must satisfy {a mathematical formula}S by definition, so {a mathematical formula}KB{an inline-figure}α implies {a mathematical formula}S⊭α, and (equivalently) {a mathematical formula}S⊨α implies {a mathematical formula}KB{an inline-figure}α. Conversely, suppose that {a mathematical formula}S⊭α (we have to prove that {a mathematical formula}KB{an inline-figure}α). Let {a mathematical formula}I0 be a (classical) model of {a mathematical formula}S such that {a mathematical formula}I0⊭α. Extend {a mathematical formula}I0 to a {a mathematical formula}DLN  interpretation {a mathematical formula}I by setting {a mathematical formula}NCI=∅ for all normality concepts {a mathematical formula}NC. Since {a mathematical formula}KB is canonical (i.e. no {a mathematical formula}NC occurs in {a mathematical formula}S) and {a mathematical formula}I agrees with {a mathematical formula}I0 on all {a mathematical formula}DL sentences (by construction), we have {a mathematical formula}I⊨S and {a mathematical formula}I⊭α. Moreover, for all {a mathematical formula}NC and all {a mathematical formula}δ∈D, {a mathematical formula}NC∈satI(δ) holds vacuously (because {a mathematical formula}NCI=∅). It follows that {a mathematical formula}I is a {a mathematical formula}DLN model of {a mathematical formula}KB; since {a mathematical formula}I⊭α, we have {a mathematical formula}KB{an inline-figure}α.  □</paragraph><paragraph label="Theorem 22">Let{a mathematical formula}KB=S∪Dbe a canonical{a mathematical formula}DLN knowledge base. Then{a mathematical formula}KB is satisfiable iff{a mathematical formula}S is (classically) satisfiable.</paragraph><paragraph label="Proof">{a mathematical formula}KB is satisfiable (i.e. it has a {a mathematical formula}DLN model) iff {a mathematical formula}KB{an inline-figure}⊤⊑⊥ iff {a mathematical formula}S⊭⊤⊑⊥ (by Theorem 21) iff {a mathematical formula}S is classically satisfiable.  □</paragraph><paragraph>For technical convenience, we identify an intermediate step within the transformation tr of Definition 6. We let {a mathematical formula}tr1(KBΣ) be the set of axioms obtained from {a mathematical formula}KBΣ by removing {a mathematical formula}N{a}⊑{a}, and replacing each {a mathematical formula}δiN{a} with{a mathematical formula}</paragraph><paragraph label="Lemma 31">{a mathematical formula}KBΣ⊨N{a}⊑Ciff{a mathematical formula}tr1(KBΣ)⊨{a}⊑C.</paragraph><paragraph label="Proof">(If.) We prove the contrapositive. Assume that {a mathematical formula}KBΣ⊭N{a}⊑C and let {a mathematical formula}I be any model of {a mathematical formula}KBΣ such that {a mathematical formula}N{a}I⊈CI, which implies {a mathematical formula}N{a}I≠∅ and hence (by {a mathematical formula}N{a}⊑{a}∈KBΣ) {a mathematical formula}N{a}I={a}I. This equality implies that for all {a mathematical formula}δ∈KB:<list>{a mathematical formula}I⊨δN{a} iff {a mathematical formula}I⊨δ{a}, and hence {a mathematical formula}I⊨tr1(KBΣ).{a mathematical formula}{a}I≠∅.(Only if.)</list><paragraph> We prove the contrapositive. Suppose that {a mathematical formula}tr1(KBΣ)⊭{a}⊑C and let {a mathematical formula}I be a model of {a mathematical formula}tr1(KBΣ) such that {a mathematical formula}{a}I⊈CI. Extend {a mathematical formula}I to an interpretation {a mathematical formula}I′ of {a mathematical formula}KBΣ by setting {a mathematical formula}N{a}I={a}I. Clearly, {a mathematical formula}I′⊨KBΣ and {a mathematical formula}N{a}I′⊈CI′. We conclude that {a mathematical formula}KBΣ⊭N{a}⊑C.  □</paragraph></paragraph><paragraph label="Lemma 32">{a mathematical formula}tr1(KBΣ)⊨{a}⊑Ciff{a mathematical formula}tr(KBΣ)⊨C(a).</paragraph><paragraph label="Proof">Again, we prove the contrapositives.(If.) Assume that {a mathematical formula}tr1(KBΣ)⊭{a}⊑C. Then there exists {a mathematical formula}I such that {a mathematical formula}I⊨tr1(KBΣ) and {a mathematical formula}aI∉CI. Extend {a mathematical formula}I  to a model of {a mathematical formula}tr(KBΣ) by setting {a mathematical formula}FI={a}I. The extended {a mathematical formula}I clearly satisfies {a mathematical formula}δiF for all {a mathematical formula}δi{a}∈tr1(KBΣ), so {a mathematical formula}I witnesses that {a mathematical formula}tr(KBΣ)⊭C(a).(Only if.) Suppose that {a mathematical formula}tr(KBΣ)⊭C(a). Then there exists {a mathematical formula}I such that {a mathematical formula}I⊨tr(KBΣ) and {a mathematical formula}aI∉CI. Since {a mathematical formula}{a}I⊆FI (by {a mathematical formula}F(a)∈tr(KBΣ)), {a mathematical formula}I satisfies also all inclusions {a mathematical formula}δi{a}∈tr1(KBΣ). Then {a mathematical formula}I⊨tr1(KBΣ), and hence {a mathematical formula}tr1(KBΣ)⊭{a}⊑C.  □</paragraph><paragraph label="Theorem 23">{a mathematical formula}KB{an inline-figure}N{a}⊑Ciff{a mathematical formula}tr(KBΣ)⊨C(a).</paragraph><paragraph label="Proof">A straightforward consequence of Theorem 1, Lemma 31, and Lemma 32.  □</paragraph></section></section><section label="Appendix B"><section-title>Classical translations of the examples</section-title><paragraph>In this section we report the translations {a mathematical formula}KBΣ of the examples illustrated in this paper, with the exception of those fully illustrated in Section 3.5. We do not report the entire{a mathematical formula}KBΣ; the obvious parts are not included, that is: the strong axioms and the inclusions {a mathematical formula}NC⊑C that belong to {a mathematical formula}S0Σ (i.e. we report only the translations of the DIs that are not overridden). In all examples, Σ is the set of all normality concepts that occur in {a mathematical formula}KB or in the queries.</paragraph><paragraph>Example 6(Nose, inheritance blocking)</paragraph><paragraph>{a mathematical formula}Σ={NHuman,NSitusInversus}.</paragraph><paragraph>{a mathematical formula}δ1=(2), {a mathematical formula}δ2=(13). They are incomparable.</paragraph><paragraph>DI translations in {a mathematical formula}KBΣ:{a mathematical formula}{a mathematical formula}{a mathematical formula}</paragraph><paragraph>{a mathematical formula}δ1NSitusInversus is discarded because{a mathematical formula}</paragraph><paragraph>Example 8(Policy, multiple exception levels)</paragraph><paragraph>Abbreviations:{a mathematical formula}{a mathematical formula}{a mathematical formula}</paragraph><paragraph>{a mathematical formula}Σ={NU,NS,NB}.</paragraph><paragraph>{a mathematical formula}δ1=(17), {a mathematical formula}δ2=(16).  {a mathematical formula}(17)≺(16).</paragraph><paragraph>DI translations in {a mathematical formula}KBΣ:{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}</paragraph><paragraph>{a mathematical formula}δ1NB is discarded because{a mathematical formula}</paragraph><paragraph>{a mathematical formula}δ2NS is discarded because{a mathematical formula}</paragraph><paragraph>Example 15(Nixon's diamond, inconsistent prototype)</paragraph><paragraph>{a mathematical formula}Σ={NRepQuaker}.</paragraph><paragraph>{a mathematical formula}δ1=(19), {a mathematical formula}δ2=(20). They are incomparable.</paragraph><paragraph>DI translations in {a mathematical formula}KBΣ:{a mathematical formula}{a mathematical formula}</paragraph><paragraph>Example 10(Prostate) is similar to Nixon's diamond, details are omitted.</paragraph><paragraph>Example 11(Lawyer's customers, reasoning about role ranges)</paragraph><paragraph>{a mathematical formula}Σ={NLawyer}.</paragraph><paragraph>{a mathematical formula}δ1=Person⊑nHonest.</paragraph><paragraph>DI translations in {a mathematical formula}KBΣ:{a mathematical formula}</paragraph><paragraph>Example 12(Normal organs, Default role range)</paragraph><paragraph>{a mathematical formula}Σ={NHuman,NHumanOrgan}.</paragraph><paragraph>{a mathematical formula}δ1=(24), {a mathematical formula}δ2=(25). They are not comparable.</paragraph><paragraph>DI translations in {a mathematical formula}KBΣ:{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}</paragraph><paragraph>Example 16(Situs inversus, reasoning with individuals)</paragraph><paragraph>{a mathematical formula}Σ={N{Ann},N{Bob}}.</paragraph><paragraph>{a mathematical formula}δ1=(2).</paragraph><paragraph>DI translations in {a mathematical formula}KBΣ:{a mathematical formula}</paragraph><paragraph>{a mathematical formula}δ1N{Bob} is discarded because{a mathematical formula}</paragraph></section><section label="Appendix C"><section-title>Comparison with design patterns</section-title><paragraph>As a first exercise, let us apply the ontology design pattern (ODP) for exceptions to the Eukaryotic Cell example, as illustrated in [47, Figs. 8, 9]. Axiomatization details follow the approach illustrated in [44, Sec. 2.1.3, 2.2]. The resulting knowledge base, denoted by {a mathematical formula}KB, consists of the following inclusions:{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula} Basically, the design pattern includes a complete axiomatization of all the primitive biological concepts (C.1), (C.2), (C.3), (C.4), (C.5) plus a definition of the typical and atypical cases for these concepts (C.6), (C.7), (C.8), (C.9), (C.10). Eukaryotic cells are partitioned into typical and atypical instances; red blood cells span over both partitions, so they must be split into typical and atypical instances as well.</paragraph><paragraph>The inference engine classifies avian red blood cells as typical red blood cells and typical eukaryotic cells; it classifies mammalian red blood cells as atypical red blood cells and atypical eukaryotic cells. Note that this is possible only if every concept is explicitly associated to a property that determines its normality or abnormality, as in (C.4)–(C.5) and (C.9). In other words, typical red blood cells do not automatically inherit the properties of typical eukaryotic cells, and avian red blood cells do not automatically inherit the properties of typical red blood cells. As a further example, if the single additional axiom{a mathematical formula} were added to {a mathematical formula}KB, then (without any further assertions about the normality of reptile red blood cells, or their having a nucleus), ReptileRedBldCel would be classified neither as TypicalEukCell nor as ATypicalEukCell.</paragraph><paragraph>The natural encoding of the above knowledge base in {a mathematical formula}DLN, denoted by {a mathematical formula}KB′, consists only of:</paragraph><list><list-item label="•">the strong axioms (C.1), (C.2), (C.3), (C.4);</list-item><list-item label="•">the defeasible version of (C.7): {a mathematical formula}EukCell⊑n∃nucleus.</list-item></list><paragraph> The other axioms need not be included explicitly, because {a mathematical formula}DLN is able to infer the properties of typical and atypical eukaryotic cells without any further directions:{a mathematical formula} Similarly, typical reptile red blood cells would automatically inherit the standard property of eukaryotic cell:{a mathematical formula} If the first ontology, {a mathematical formula}KB, were queried for the entities that have a nucleus (i.e. the concepts subsumed by {a mathematical formula}∃nucleus), then the query would return:{a mathematical formula} Similarly, the {a mathematical formula}DLN ontology {a mathematical formula}KB′ would return:{a mathematical formula} Thus, {a mathematical formula}DLN does support the factorization of common default properties, with a remarkable reduction of additional axioms even in this simple example.</paragraph><paragraph>The ontology design pattern is vulnerable to some trivial errors. If a concept A is subsumed by {a mathematical formula}B1 and {a mathematical formula}B2, and the typical instances of {a mathematical formula}B1 and {a mathematical formula}B2 are modeled using the same status role, then the instances of A that are typical with respect to {a mathematical formula}B1 become typical also w.r.t. {a mathematical formula}B2, and vice versa. A similar problem may occur if {a mathematical formula}KB is constructed as the union of two independently developed knowledge bases. Clearly, {a mathematical formula}DLN is not subject to the same vulnerabilities, since it needs no such explicit flags.</paragraph><paragraph>Next, we turn to more complex scenarios. Rector introduces an example with multiple levels of exceptions (as in the policy example) in [44, Sec. 2.3]: it consists in a drug knowledge base capable of keeping track of interactions and contraindications. Rector writes: […] to be safe, we want to express interactions and contraindications at the most general level possible and inherit them by default, to be overridden if necessary. Clearly, the ODP for exceptions does not help in this respect, as shown by the reptile cells example: as new drug subtypes are added to the ontology, the knowledge engineer must explicitly tell whether they are typical or atypical, or (equivalently) whether they have the typical contraindication of their superclasses, otherwise the default contraindications are neither inherited nor overridden.</paragraph><paragraph>Using the ODP, a drug type A with contraindication X and a subtype B that shares with A the same contraindication would be represented as follows:{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula} Let {a mathematical formula}KB1 be the above knowledge base. Now suppose a new contraindication Y for A is discovered and must be included in {a mathematical formula}KB1. There are three possible, alternative approaches:</paragraph><list><list-item label="1.">The new default contraindication is incrementally added to {a mathematical formula}KB1:{a mathematical formula} However, this formalization suffers from inheritance blocking (cf. Example 30): for instance, any subtype of A that overrides contraindication X is an atypical A, and hence it does not inherit contraindication Y, either. On the contrary, the incremental approach would work perfectly well in {a mathematical formula}DLN, that does not suffer from inheritance blocking (it would be sufficient to add {a mathematical formula}A⊑nContraindicationY).</list-item><list-item label="2.">The partition of A into two classes (TypicalA and ATypicalA) is replaced by a partition into four classes, corresponding to all the subsets of the default properties that can be satisfied by a drug. With this approach, a drug is allowed to inherit a subset of the contraindications for A. However, this approach introduces an exponential number of additional concepts. Moreover, asserting that a drug subtype C overrides contraindication X is not enough, because it does not tell the classifier whether contraindication Y should be overridden, too.</list-item><list-item label="3.">Concept TypicalA is replaced by a set of partially overlapping concepts ({a mathematical formula}i=1,…,n, where n is the number of contraindications for A):{a mathematical formula}{a mathematical formula} This approach introduces only a linear number of new concepts. However, for each drug type, the knowledge engineer should assert which properties {a mathematical formula}∃statusi.Normal hold, otherwise the classifier cannot infer the corresponding contraindications. Then the question is: what is the added value of this ODP? Would it be better to directly assert which contraindications apply to each drug?</list-item></list><paragraph> Accordingly, in [47] it is stated that: [The ODP for exceptions] suffices for simple exceptions. However, exceptions can be piled upon exceptions, eventually leading to a combinatorial explosion. Worse still, some cells, such as muscle cells, have many nuclei. This means we would have to model a three way split with zero, one or many nuclei in a cell. Finally, suppose a new subtype {a mathematical formula}B′ of drug B is discovered, that does not have contraindication X. In {a mathematical formula}DLN, this update can be handled incrementally, by extending the knowledge base {a mathematical formula}{B⊑A,A⊑nContraindicationX} with:{a mathematical formula}{a mathematical formula} This update cannot be handled incrementally with the ODP: axiom (C.16) must be retracted and replaced with the definition of TypicalB and ATypicalB.</paragraph><paragraph>Summarizing, {a mathematical formula}DLN overcomes the following drawbacks of the ODP for exceptions:</paragraph><list><list-item label="1.">the ODP cannot effectively factorize common default properties, nor achieve real default inheritance;</list-item><list-item label="2.">the ODP does not support incremental refinements and extensions;</list-item><list-item label="3.">the definitions of typical and atypical concepts make use of computationally expensive constructs;</list-item><list-item label="4.">the ODP tends to clutter the knowledge base with auxiliary concepts and roles;</list-item><list-item label="5.">the additional symbols introduce more error possibilities.</list-item></list><paragraph> It should be remarked that all the other nonmonotonic DLs that do not suffer from inheritance blocking share with {a mathematical formula}DLN the same advantages over the ODP, with the exception of tractability: all of the above examples fall within the tractable fragment of {a mathematical formula}DLN, while no tractable fragments are known for the other logics.</paragraph></section></appendices><references><reference label="[1]"><authors>A. Artale,D. Calvanese,R. Kontchakov,M. Zakharyaschev</authors><title>The DL-lite family and relations</title><host>J. Artif. Intell. Res.36 (2009) pp.1-69</host></reference><reference label="[2]"><authors>F. Baader,S. Brandt,C. Lutz</authors><title>Pushing the EL envelope</title><host>Proc. of the 19th Int. Joint Conf. on Artificial IntelligenceIJCAI-05(2005)Professional Book Center pp.364-369</host></reference><reference label="[3]"><authors>F. Baader,B. Hollunder</authors><title>Embedding defaults into terminological knowledge representation formalisms</title><host>J. Autom. Reason.14 (1)(1995) pp.149-180</host></reference><reference label="[4]"><authors>F. Baader,B. Hollunder</authors><title>Priorities on defaults with prerequisites, and their application in treating specificity in terminological default logic</title><host>J. Autom. Reason.15 (1)(1995) pp.41-68</host></reference><reference label="[5]"><authors>F. Baader,C. Lutz,B. Suntisrivaraporn</authors><title>CEL—a polynomial-time reasoner for life science ontologies</title><host>U. FurbachN. ShankarIJCARLecture Notes in Computer Sciencevol. 4130 (2006)Springer pp.287-291</host></reference><reference label="[6]"><authors>F. Baader,D.L. McGuiness,D. Nardi,P. Patel-Schneider</authors><title>The Description Logic Handbook: Theory, Implementation and Applications</title><host>(2003)Cambridge University Press</host></reference><reference label="[7]"><authors>P.A. Bonatti,M. Faella,L. Sauro</authors><title>Defeasible inclusions in low-complexity DLs: preliminary notes</title><host>C. BoutilierIJCAI(2009) pp.696-701</host></reference><reference label="[8]"><authors>P.A. Bonatti,M. Faella,L. Sauro</authors><title>EL with default attributes and overriding</title><host>Int. Semantic Web Conf.ISWC 2010LNCSvol. 6496 (2010)Springer pp.64-79</host></reference><reference label="[9]"><authors>P.A. Bonatti,M. Faella,L. Sauro</authors><title>Adding default attributes to EL++</title><host>W. BurgardD. RothAAAI(2011)AAAI Press</host></reference><reference label="[10]"><authors>P.A. Bonatti,M. Faella,L. Sauro</authors><title>Defeasible inclusions in low-complexity DLs</title><host>J. Artif. Intell. Res.42 (2011) pp.719-764</host></reference><reference label="[11]"><authors>P.A. Bonatti,C. Lutz,F. Wolter</authors><title>The complexity of circumscription in DLs</title><host>J. Artif. Intell. Res.35 (2009) pp.717-773</host></reference><reference label="[12]"><authors>P.A. Bonatti,P. Samarati</authors><title>Logics for authorization and security</title><host>Logics for Emerging Applications of Databases(2003)Springer pp.277-323</host></reference><reference label="[13]">K. Britz,G. Casini,T. Meyer,K. Moodley,I. VarzinczakOrdered interpretations and entailment for defeasible description logicsTechnical report(2013)CAIR, CSIR Meraka and UKZNSouth AfricaDownload from URL:<host>http://www.cair.za.net/research/outputs/ordered-interpretations-and-entailment-defeasible-description-logics</host></reference><reference label="[14]"><authors>M. Cadoli,F. Donini,M. Schaerf</authors><title>Closed world reasoning in hybrid systems</title><host>Proc. of ISMIS'90(1990)Elsevier pp.474-481</host></reference><reference label="[15]"><authors>D. Calvanese,G. De Giacomo,D. Lembo,M. Lenzerini,R. Rosati</authors><title>DL-lite: tractable description logics for ontologies</title><host>Proc. of AAAI 2005(2005) pp.602-607</host></reference><reference label="[16]"><authors>G. Casini,T. Meyer,K. Moodley,R. Nortje</authors><title>Relevant closure: a new form of defeasible reasoning for description logics</title><host>E. FerméJ. LeiteLogics in Artificial Intelligence—Proceedings of 14th European ConferenceJELIA 2014, Funchal, Madeira, Portugal, September 24–26, 2014Lecture Notes in Computer Sciencevol. 8761 (2014)Springer pp.92-106</host></reference><reference label="[17]"><authors>G. Casini,T. Meyer,K. Moodley,I.J. Varzinczak</authors><title>Towards practical defeasible reasoning for description logics</title><host>T. EiterB. GlimmY. KazakovM. KrötzschDescription LogicsCEUR Workshop Proceedingsvol. 1014 (2013)CEUR-WS.org pp.587-599</host></reference><reference label="[18]"><authors>G. Casini,U. Straccia</authors><title>Rational closure for defeasible description logics</title><host>T. JanhunenI. NiemeläJELIALecture Notes in Computer Sciencevol. 6341 (2010)Springer pp.77-90</host></reference><reference label="[19]"><authors>G. Casini,U. Straccia</authors><title>Defeasible inheritance-based description logics</title><host>J. Artif. Intell. Res.48 (2013) pp.415-473</host></reference><reference label="[20]"><authors>V. Delaitre,Y. Kazakov</authors><title>Classifying ELH ontologies in SQL databases</title><host>OWLED(2009)</host></reference><reference label="[21]"><authors>F.M. Donini,D. Nardi,R. Rosati</authors><title>Description logics of minimal knowledge and negation as failure</title><host>ACM Trans. Comput. Log.3 (2)(2002) pp.177-225</host></reference><reference label="[22]"><authors>T. Eiter,G. Ianni,T. Lukasiewicz,R. Schindlauer,H. Tompits</authors><title>Combining answer set programming with description logics for the semantic web</title><host>Artif. Intell.172 (12–13)(2008) pp.1495-1539</host></reference><reference label="[23]"><authors>T. Eiter,G. Ianni,R. Schindlauer,H. Tompits</authors><title>A uniform integration of higher-order reasoning and external evaluations in answer-set programming</title><host>L.P. KaelblingA. SaffiottiIJCAI(2005)Professional Book Center pp.90-96</host></reference><reference label="[24]"><authors>T. Eiter,T. Lukasiewicz</authors><title>Default reasoning from conditional knowledge bases: complexity and tractable cases</title><host>Artif. Intell.124 (2)(2000) pp.169-241</host></reference><reference label="[25]"><authors>T.W. Finin,A. Joshi,L. Kagal,J. Niu,R.S. Sandhu,W.H. Winsborough,B.M. Thuraisingham</authors><title>ROWLBAC: representing role based access control in OWL</title><host>I. RayN. LiSACMAT(2008)ACM pp.73-82</host></reference><reference label="[26]"><authors>H. Geffner,J. Pearl</authors><title>Conditional entailment: bridging two approaches to default reasoning</title><host>Artif. Intell.53 (2–3)(1992) pp.209-244</host></reference><reference label="[27]"><authors>L. Giordano,V. Gliozzi,N. Olivetti,G.L. Pozzato</authors><title>Prototypical reasoning with low complexity description logics: preliminary results</title><host>E. ErdemF. LinT. SchaubLPNMRLecture Notes in Computer Sciencevol. 5753 (2009)Springer pp.430-436</host></reference><reference label="[28]"><authors>L. Giordano,V. Gliozzi,N. Olivetti,G.L. Pozzato</authors><title>Preferential low complexity description logics: complexity results and proof methods</title><host>Y. KazakovD. LemboF. WolterDescription LogicsCEUR Workshop Proceedingsvol. 846 (2012)CEUR-WS.org</host></reference><reference label="[29]"><authors>L. Giordano,V. Gliozzi,N. Olivetti,G.L. Pozzato</authors><title>A non-monotonic description logic for reasoning about typicality</title><host>Artif. Intell.195 (2013) pp.165-202</host></reference><reference label="[30]"><authors>L. Giordano,N. Olivetti,V. Gliozzi,G.L. Pozzato</authors><title>ALC + T: a preferential extension of description logics</title><host>Fundam. Inform.96 (3)(2009) pp.341-372</host></reference><reference label="[31]"><authors>B. Glimm,I. Horrocks,B. Motik,R. Shearer,G. Stoilos</authors><title>A novel approach to ontology classification</title><host>J. Web Semant.14 (2012) pp.84-101</host></reference><reference label="[32]"><authors>S. Grimm,P. Hitzler</authors><title>A preferential tableaux calculus for circumscriptive ALCO</title><host>A. PolleresT. SwiftRRLecture Notes in Computer Sciencevol. 5837 (2009)Springer pp.40-54</host></reference><reference label="[33]"><authors>Y. Kazakov</authors><title>RIQ and SROIQ are harder than SHOIQ</title><host>G. BrewkaJ. LangKR(2008)AAAI Press pp.274-284</host></reference><reference label="[34]"><authors>Y. Kazakov</authors><title>Consequence-driven reasoning for horn SHIQ ontologies</title><host>Description Logics(2009)</host></reference><reference label="[35]"><authors>Y. Kazakov,P. Klinov</authors><title>Incremental reasoning in EL+ without bookkeeping</title><host>Description Logics(2013) pp.294-315</host></reference><reference label="[36]"><authors>V. Kolovski,J.A. Hendler,B. Parsia</authors><title>Analyzing web access control policies</title><host>C.L. WilliamsonM.E. ZurkoP.F. Patel-SchneiderP.J. ShenoyWWW(2007)ACM pp.677-686</host></reference><reference label="[37]"><authors>S. Kraus,D.J. Lehmann,M. Magidor</authors><title>Nonmonotonic reasoning, preferential models and cumulative logics</title><host>Artif. Intell.44 (1–2)(1990) pp.167-207</host></reference><reference label="[38]"><authors>D.J. Lehmann,M. Magidor</authors><title>What does a conditional knowledge base entail?</title><host>Artif. Intell.55 (1)(1992) pp.1-60</host></reference><reference label="[39]"><authors>N. Leone,G. Pfeifer,W. Faber,T. Eiter,G. Gottlob,S. Perri,F. Scarcello</authors><title>The DLV system for knowledge representation and reasoning</title><host>ACM Trans. Comput. Log.7 (3)(July 2006) pp.499-562</host></reference><reference label="[40]"><authors>T. Lukasiewicz</authors><title>Expressive probabilistic description logics</title><host>Artif. Intell.172 (6–7)(2008) pp.852-883</host></reference><reference label="[41]"><authors>J. McCarthy</authors><title>Applications of circumscription to formalizing common sense knowledge</title><host>Artif. Intell.28 (1986) pp.89-116</host></reference><reference label="[42]"><authors>J. Mendez,B. Suntisrivaraporn</authors><title>Reintroducing CEL as an OWL 2 EL reasoner</title><host>Description Logics(2009)</host></reference><reference label="[43]"><authors>B. Motik,R. Rosati</authors><title>Reconciling description logics and rules</title><host>J. ACM57 (5)(2010)</host></reference><reference label="[44]"><authors>A.L. Rector</authors><title>Defaults, context, and knowledge: alternatives for OWL-indexed knowledge bases</title><host>Pacific Symposium on Biocomputing(2004)World Scientific pp.226-237</host></reference><reference label="[45]"><authors>E. Sandewall</authors><title>Defeasible inheritance with doubt index and its axiomatic characterization</title><host>Artif. Intell.174 (18)(2010) pp.1431-1459</host></reference><reference label="[46]"><authors>B. Sertkaya</authors><title>In the search of improvements to the EL+ classification algorithm</title><host>Description Logics(2011)</host></reference><reference label="[47]"><authors>R. Stevens,M.E. Aranguren,K. Wolstencroft,U. Sattler,N. Drummond,M. Horridge,A.L. Rector</authors><title>Using OWL to model biological knowledge</title><host>Int. J. Man-Mach. Stud.65 (7)(2007) pp.583-594</host></reference><reference label="[48]"><authors>D. Tsarkov,I. Horrocks,P.F. Patel-Schneider</authors><title>Optimizing terminological reasoning for expressive description logics</title><host>J. Autom. Reason.39 (3)(2007) pp.277-316</host></reference><reference label="[49]"><authors>A. Uszok,J.M. Bradshaw,R. Jeffers,N. Suri,P.J. Hayes,M.R. Breedy,L. Bunch,M. Johnson,S. Kulkarni,J. Lott</authors><title>KAoS policy and domain services: towards a description-logic approach to policy representation, deconfliction, and enforcement</title><host>4th IEEE Int. Workshop on Policies for Distributed Systems and NetworksPOLICY(June 2003)IEEE Computer Soc. pp.93-96</host></reference><reference label="[50]"><authors>F.S.Y. Kazakov,M. Krotzsch</authors><title>ELK reasoner: architecture and evaluation</title><host>E.J.-R.I. HorrocksM. YatskevichProceedings of the 1st International Workshop on OWL Reasoner Evaluation, CEUR Workshop ProceedingsORE-2012(2012)</host></reference><reference label="[51]"><authors>Yevgeny Kazakov,Markus Krötzsch,Frantisek Simancik</authors><title>The incredible ELK – from polynomial procedures to efficient reasoning with  ontologies</title><host>J. Autom. Reason.53 (1)(2014) pp.1-61</host></reference><reference label="[52]">R. Zhang, A. Artale, F. Giunchiglia, B. Crispo, Using description logics in relation based access control, in: Proceedings of the 22nd International Workshop on Description Logics, DL 2009, Oxford, UK, July 27–30, 2009.</reference></references><footnote><note-para label="1">All of these examples are introduced and discussed in [44], [47].</note-para><note-para label="2">If no explicit authorization has been specified for a given access request, then an open policy permits the access while a closed policy denies it.</note-para><note-para label="3">http://www.isi.edu/isd/LOOM/documentation/LOOM-DOCS.html.</note-para><note-para label="4">Some of the most effective optimizations of DL reasoning, such as tableaux caching and dependency-directed backtracking [6], rely on the monotonicity of classical DLs.</note-para><note-para label="5">Cf. Section 6.1.</note-para><note-para label="6">These design patterns are extensively discussed in Appendix C.</note-para><note-para label="7">A non-exhaustive list of such additional requirements and mechanisms taken from the literature comprises: preserving as many of the KLM axioms as possible; giving defeasible inheritance an independent philosophical foundation (e.g. probabilistic); defining overriding through complex criteria such as argumentation, or predicates over inclusion paths (as in inheritance networks); restricting entailment to the invariant consequences across a set of “admissibile” priority orderings; maximizing the number of satisfied default properties; defining normal individuals through an absolute, global normality ordering, independent from any given concept C.</note-para><note-para label="8">Actually, unlike the prototypes dealt with in philosophy (that might not exist in the real world due to their degree of perfection), the prototypes introduced in the above domains typically correspond to a number of real instances. This is coherent with the utilitarian view underlying McCarthy's conventions[41].</note-para><note-para label="9">In other logics, such as circumscribed DLs, the conflicts between defaults can be solved in different ways for each “maximally normal” instance of C; consequently, each normal instance of C may satisfy a different set of default properties. In this sense, C is not associated to a single prototype.</note-para><note-para label="11">Note, however, that our framework applies also to all rich DLs supporting boolean role operators, fixpoint operators, full number restrictions, complex role inclusions, and all of the other operators not occurring in Fig. 1.</note-para><note-para label="12">Such logics are discussed in the related work section.</note-para><note-para label="13">From now on, in the examples, we do not spell out the details of how inferences are derived (with the exception of Example 7). Appendix B contains the reductions to classical logic (cf. Section 3.4) that support those inferences.</note-para><note-para label="14">Since {a mathematical formula}I is a {a mathematical formula}DLN-model of {a mathematical formula}KB, and (8) is not overridden in {a mathematical formula}NMamRedBldCel/I, {a mathematical formula}NMamRedBldCel must satisfy (8) in {a mathematical formula}I, and in this case (6) is necessarily overridden in {a mathematical formula}NMamRedBldCel/I, as shown in Example 4.</note-para><note-para label="15">Recall that inferences are justified by the translation into classical DLs given in Appendix B.</note-para><note-para label="16">An expression or a set of expressions is N-free if it contains no occurrences of any normality predicate.</note-para><note-para label="17">This restriction rules out a single notable description logic, namely DL-lite. However, a tractable extension of DL-lite, called {a mathematical formula}DL-liteHorn, satisfies the above assumption [1].</note-para><note-para label="18">As a special case, Σ may be exactly the set of normality concepts occurring either in {a mathematical formula}KB or in the given query. As a kind of optimization, Σ may optionally contain further normality concepts that are expected to be frequently used in queries, so as to pre-compute their default properties once and for all. Queries can be subsumption queries ({a mathematical formula}C⊑D), instance checking queries ({a mathematical formula}C(a) or {a mathematical formula}R(a,b)), concept consistency queries (that can be formulated through subsumptions like {a mathematical formula}C⊑⊥), and knowledge base consistency queries (that can be expressed through {a mathematical formula}⊤⊑⊥).</note-para><note-para label="19">Note that the queries α range over {a mathematical formula}DLΣ, that is, N is allowed to occur in the queries. So Theorem 1 covers all the motivating examples illustrated in this paper.</note-para><note-para label="20">By Lemma 26, Lemma 27, this is equivalent to say that {a mathematical formula}I and {a mathematical formula}J  satisfy {a mathematical formula}KBΣ, that is, the hypothesis of Lemma 2.</note-para><note-para label="21">This cautious behavior prevents undesired CWA effects, such as those reported in Section 6.</note-para><note-para label="22">Of course, if all individuals a were simultaneously asserted to be normal, then the knowledge base might become inconsistent, because in general the normality of an individual may imply the abnormality of another individual. This is just another kind of conflict between DIs with incomparable priorities: in this case the involved DIs apply to different individuals. Coherently with our conflict handling approach, these conflicts should be solved by the knowledge engineer.</note-para><note-para label="23">This holds because for all {a mathematical formula}DLN models {a mathematical formula}I of {a mathematical formula}KB, either {a mathematical formula}N{a}I is empty, or {a mathematical formula}N{a}I={aI}.</note-para><note-para label="25">The complexity of unrestricted DI inference is left as an open question.</note-para><note-para label="26">{a mathematical formula}PC is the class of all problems that can be solved by a deterministic Turing machine in polynomial time using an oracle for {a mathematical formula}C.</note-para><note-para label="28">Such contradictory inferences may be regarded as analogues of credulous inference in the logics with multiple deductive closures, such as Default and Autoepistemic logics.</note-para><note-para label="29">Only very recent work [17], [16] addresses knowledge bases with up to ∼5200 axioms, and for the same reason adopts synthetic test cases for experiments.</note-para><note-para label="30">http://www.geneontology.org.</note-para><note-para label="31">A and B are chosen randomly among the concept names defined in {a mathematical formula}KB, because currently ELK does not support any method to compute more general subsumptions between unrestricted concepts C and D. The only possibility is classifying the knowledge base and searching for a path between the taxonomy's nodes. The number of standard {a mathematical formula}EL classifications needed for constructing {a mathematical formula}KBΣ does not depend on the choice of A because NMReasoner has not yet been optimized to ignore irrelevant DIs. The response time is largely independent from the choice of B, too, since the cost of entailing subsumptions from {a mathematical formula}KBΣ is negligible w.r.t. the construction of {a mathematical formula}KBΣ.</note-para><note-para label="32">See Table 1 for a comparison with the other nonmonotonic DLs in terms of these properties.</note-para><note-para label="33">Where {a mathematical formula}NC and δ are replaced by {a mathematical formula}ND and {a mathematical formula}δi, respectively.</note-para></footnote></root>