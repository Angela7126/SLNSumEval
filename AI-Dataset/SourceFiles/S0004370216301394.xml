<?xml version="1.0" encoding="UTF-8"?><root><url>https://www.sciencedirect.com/science/article/pii//S0004370216301394</url><title>Query efficient posterior estimation in scientific experiments via Bayesian active learning</title><authors>Kirthevasan Kandasamy,Jeff Schneider,Barnabás Póczos</authors><abstract>A common problem in disciplines of applied Statistics research such as Astrostatistics is of estimating the posterior distribution of relevant parameters. Typically, the likelihoods for such models are computed via expensive experiments such as cosmological simulations of the universe. An urgent challenge in these research domains is to develop methods that can estimate the posterior with few likelihood evaluations. In this paper, we study active posterior estimation in a Bayesian setting when the likelihood is expensive to evaluate. Existing techniques for posterior estimation are based on generating samples representative of the posterior. Such methods do not consider efficiency in terms of likelihood evaluations. In order to be query efficient we treat posterior estimation in an active regression framework. We propose two myopic query strategies to choose where to evaluate the likelihood and implement them using Gaussian processes. Via experiments on a series of synthetic and real examples we demonstrate that our approach is significantly more query efficient than existing techniques and other heuristics for posterior estimation.</abstract><keywords>Posterior estimation;Active learning;Gaussian processes</keywords><content><section label="1"><section-title>Introduction</section-title><paragraph>Computing the posterior distribution of parameters given observations is a central problem in Bayesian statistics. We use the posterior distribution to make inferences about likely parameter values and estimate functionals we are interested in. For simple parametric models with conjugate priors, we may obtain the posterior in analytic form. In more complex models where the posterior is analytically intractable, we have to resort to approximation techniques. In some cases, we only have access to a black box which computes the likelihood for a given value of the parameters.</paragraph><paragraph>Our goal is an efficient way to estimate posterior densities when calls to this black box are expensive. This work is motivated by applications in computational physics and cosmology. Several cosmological phenomena are characterised by the cosmological parameters (e.g. Hubble constant, dark energy fraction). Given observations, we wish to make inferences about the parameters. Physicists have developed simulation-based probability models of the Universe which can be used to compute the likelihood of cosmological parameters for a given observation. Fig. 1 shows different scenarios to estimate/compute the likelihood. Many problems in scientific computing have a similar flavour. Expensive simulators in molecular mechanics, computational biology and neuroscience are used to model many scientific processes. Hence this work finds relevance in these fields as well.</paragraph><paragraph>Related work</paragraph><paragraph>Practitioners have conventionally used sampling schemes [16] to approximate the posterior distributions. Rejection sampling and various MCMC methods are common choices. The advantage of MCMC approaches is their theoretical guarantees with large sample sets [24] and thus they are a good choice when likelihood evaluations are cheap. However, none of them is intended to be query efficient when evaluations are expensive. Some methods spend most of their computation evaluating point likelihoods and then discard the likelihood values after doing an acceptance test. This gives insight into the potential gains possible by retaining those likelihoods for use in regression. Despite such deficiencies, MCMC remains one of the most popular techniques for posterior estimation in experimental physics [6], [21], [13] and the other fields [14].</paragraph><paragraph>Approximate Bayesian computation (ABC) [17], [18] is a method of last resort for estimating posteriors when a likelihood can not be computed. Unfortunately, it still requires the generation of simulated data, which is expensive in our setup, and it does not address efficient selection of parameter values to be tested at all. Nested Sampling [27] is a technique commonly used in Astrostatistics. Kernel Bayes' Rule [7] is a non-parametric method of computing a posterior based on the embedding of probabilities in an RKHS. Both these methods require sampling from a distribution and do not address the question of which samples to choose if generating them is expensive. The work in Bryan et al. [3] actively learns level sets of an expensive function and derives confidence sets from the results. Gotovos et al. [8] also actively learn level sets via a classification approach. Our work is more general since we estimate the entire posterior.</paragraph><paragraph>Our methods draw inspiration from Gaussian Process (GP) based active learning methods such as Bayesian optimisation (BO) [19], Bayesian quadrature (BQ) [20], active GP Regression (AGPR) [25] and several others [28], [15], [12], [11], [10]. These methods have a common modus operandi to determining the experiment {a mathematical formula}θt at time step t: construct a utility function {a mathematical formula}ut based on the posterior GP conditioned on the queries so far; then maximise {a mathematical formula}ut to determine {a mathematical formula}θt. {a mathematical formula}ut(θ) captures the value of performing an experiment at point θ. Maximising the typically multimodal {a mathematical formula}ut is itself a hard problem. Further, inference in GPs can also be quite expensive, especially when we have several queries. However, it is generally assumed that querying the function is more costly than the effort to determine the next experiment [2], [28]. The key difference in such methods is essentially in the specification of {a mathematical formula}ut to determine the next experiment. In our work, we adopt this strategy. We present two utility functions for active posterior estimation.</paragraph><paragraph>Our contribution is to propose a query efficient method for estimating posterior densities when the likelihood is expensive to evaluate. We adopt a Bayesian active regression approach on the log likelihood using the samples it has already computed. We refer to this approach as Bayesian Active Posterior Estimation (BAPE). We propose two myopic query strategies on the uncertainty regression model for sample selection. Our implementation uses Gaussian processes [23] and we demonstrate the efficacy of the methods on multiple synthetic and real experiments.</paragraph><paragraph>The remainder of this manuscript is organised as follows. We begin with a brief review of GPs in Section 2.1. We present our methods in Sections 2.2, 2.3, 2.4 and compare them against non-active strategies and GP based active learning methods in Section 2.5. In Section 3 we discuss alternatives for empirical evaluation and in Section 4 we present experimental results on synthetic and real problems.</paragraph></section><section label="2"><section-title>Bayesian active posterior estimation</section-title><section label="2.1"><section-title>Gaussian processes</section-title><paragraph>A GP over a space Θ is a random process describing functions from Θ to {a mathematical formula}R. It is completely characterised by its mean function {a mathematical formula}μ:Θ→R and covariance kernel {a mathematical formula}k:Θ×Θ→R. The function values {a mathematical formula}f(θ1),…,f(θn) at any finite set of n points {a mathematical formula}{θ1,…,θn}⊂Θ are distributed jointly Gaussian {a mathematical formula}N(μ,K). Here {a mathematical formula}μ∈Rn, {a mathematical formula}μi=μ(θi) and {a mathematical formula}K∈Rn×n where {a mathematical formula}Kij=k(θi,θj).</paragraph><paragraph>Typically, a GP is specified by its prior mean {a mathematical formula}μ0 and kernel {a mathematical formula}k0. Given observations {a mathematical formula}y=(y1,…,yn)⊤∈Rn at points {a mathematical formula}θ={θ1,…,θn} the posterior is also a GP with mean {a mathematical formula}μ′ and covariance {a mathematical formula}k′ given by,{a mathematical formula} The posterior variance at any {a mathematical formula}θ∈Θ is given by {a mathematical formula}k′(θ,θ). Here, we have overloaded notation to denote, {a mathematical formula}μ0(θ)=(μ0(θ1),…,μ0(θn))⊤∈Rn, {a mathematical formula}k0(θ,θ)=(k0(θ1,θ),…,k0(θn,θ))⊤∈Rn, and {a mathematical formula}K0∈Rn×n whose {a mathematical formula}(i,j)th element is {a mathematical formula}k0(θi,θj). A popular choice for the covariance kernel is the squared exponential kernel {a mathematical formula}kσf,h(θ,θ′)=σf2exp⁡(−‖θ−θ′‖2/(2h2)). When the observations of f are noisy, it is common to use a noise term in the prior kernel {a mathematical formula}k0=kσ,h+σn2δ(θ−θ′) where δ is the Dirac-delta function. This corresponds to assuming white Gaussian noise with variance {a mathematical formula}σn2. For a more detailed review of GPs we recommend Rasmussen and Williams [23]. Following other GP based active learning methods [12], [28], we use GPs primarily as an uncertainty model for an unknown function.</paragraph></section><section label="2.2"><section-title>Active posterior estimation</section-title><paragraph>Problem setting: We formally define our posterior distribution estimation problem in a Bayesian framework. We have a bounded continuous parameter space Θ for the unknown parameters (e.g. cosmological constants). Let {a mathematical formula}Xobs denote our observations (e.g. signals from telescopes). For each {a mathematical formula}θ∈Θ we have the ability to query an oracle for the value of the likelihood {a mathematical formula}L(θ)=P(Xobs|θ). These queries are expensive and possibly noisy. Assuming a prior {a mathematical formula}Pθ(θ) on Θ, we have the posterior {a mathematical formula}Pθ|Xobs.{a mathematical formula} Our goal is to obtain an estimate {a mathematical formula}Pˆθ|Xobs of {a mathematical formula}Pθ|Xobs using as few queries to the oracle.</paragraph><paragraph>Some smoothness assumptions on the problem are warranted to make the problem tractable. A standard in the Bayesian nonparametrics literature is to assume that the function of interest is a sample from a Gaussian Process. In what follows we shall model the log joint probability of the cosmological parameters and the observations via a GP.{sup:1} This is keeping in line with Adams et al. [1] who use a similar prior for GP density sampling.</paragraph><paragraph>Uncertainty for the posterior via uncertainty for the log joint: Assume that we have queried the likelihood oracle at n points, and for each query point {a mathematical formula}θi the oracle provided us with {a mathematical formula}Li≈P(Xobs|θi) answers. Let {a mathematical formula}An={θi,Li}i=1n denote the set of these query value pairs. We build our GP using {a mathematical formula}Bn={θi,log⁡(LiPθ(θi))}i=1n as the input output pairs. The GP automatically induces uncertainty on the log joint probability; let us denote the distribution of {a mathematical formula}log⁡P(Xobs,θ) values at any {a mathematical formula}θ∈Θ by {a mathematical formula}L˜(θ). Moreover, if g is a sample from this GP, then {a mathematical formula}f=exp⁡g/∫exp⁡g denotes a sample from the induced uncertainty model {a mathematical formula}Fθ|Xobs for the posterior {a mathematical formula}Pθ|Xobs. A sample from {a mathematical formula}Fθ|Xobs is a distribution over Θ. This is illustrated in Fig. 2.</paragraph><paragraph>Finally, given any estimate {a mathematical formula}PˆAn(Xobs,θ) of the log joint probability constructed using a set {a mathematical formula}An of n parameter-likelihood pairs, the estimate of the posterior distribution is{a mathematical formula}</paragraph><paragraph>Bayesian active posterior estimation: We now describe the procedure to determine the point at which we should query the likelihood. At time step t, we have already queried at {a mathematical formula}t−1 points and have the set {a mathematical formula}At−1 of query value pairs. Our goal is to select the point {a mathematical formula}θt for the next experiment to evaluate the likelihood. We adopt a myopic strategy which picks the point that maximises a utility function {a mathematical formula}ut. {a mathematical formula}ut needs to capture a measure of divergence {a mathematical formula}D(⋅‖⋅) between the true and estimated distributions. A reasonable strategy would be to select {a mathematical formula}θt to satisfy{a mathematical formula} where {a mathematical formula}PˆAt−1∪{(θ+,L(θ+))} is our estimate of the posterior using {a mathematical formula}At−1∪{(θ+,L(θ+))}. Obviously, this objective is not accessible in practice, since we know neither {a mathematical formula}Pθ|Xobs nor {a mathematical formula}L(θ+). As surrogates to this ideal objective in Equation (3), in the following subsections we propose two utility functions for determining the next point: Negative Expected Divergence (NED) and Exponentiated Variance (EV). The first, NED adopts a Bayesian decision theoretic approach akin to the expected error reduction criterion used in active learning [26]. Here, we choose the point in Θ that yields the minimum expected divergence for the next estimate over the uncertainty model. Unfortunately, as we will see in Section 2.3, the NED utility is computationally expensive. Therefore, we propose a cheaper alternative, EV. In our experiments we found that both strategies performed equally well – so EV is computationally attractive. That said, some cosmological simulations are very expensive (taking several hours to a day) so NED is justified in such situations. We present our framework for BAPE using an appropriate utility function {a mathematical formula}ut in Algorithm 1.</paragraph></section><section label="2.3"><section-title>Negative Expected Divergence (NED)</section-title><paragraph>Equation (3) says that we should choose the point that results in the highest reduction in divergence if we knew the likelihood and the true posterior at that point. In NED, we choose the point with the highest expected reduction in divergence. For the next evaluation we choose the point that minimises the expected divergence between these models and the next estimate. Precisely,{a mathematical formula} Here {a mathematical formula}p+∈R is sampled from {a mathematical formula}L˜(θ+), the uncertainty of the log joint probability at {a mathematical formula}θ+. The density h is sampled from {a mathematical formula}Fθ|Xobs, the uncertainty model of the posterior obtained by adding {a mathematical formula}(θ+,p+) to the set of already available points {a mathematical formula}At−1. Both {a mathematical formula}L˜(θ+) and {a mathematical formula}Fθ|Xobs are induced from the log joint GP as explained before. {a mathematical formula}Pˆm+1A∪{(θ+,p+)} denotes the estimate of the posterior obtained by re-training the GP with {a mathematical formula}(θ+,p+) as the tth point along with the t points already available. The first expectation above captures our uncertainty over {a mathematical formula}log⁡P(θ+,Xobs) while the second captures our remaining uncertainty over {a mathematical formula}Pθ|Xobs after observing {a mathematical formula}L(θ+). Equation (4) says that you should minimise the expected divergence by looking one step ahead.</paragraph><paragraph>We have illustrated NED in Fig. 3. Assume we are considering the point {a mathematical formula}θ+ for the next evaluation. Our GP over the log joint probability gives us uncertainty for {a mathematical formula}log⁡P(θ+,Xobs) – depicted by {a mathematical formula}pB,pR,pG in blue, green and red respectively. For {a mathematical formula}pB, we add {a mathematical formula}(θ+,pB) as a hallucinated point to the {a mathematical formula}t−1 points we already have and obtain an estimate of the posterior {a mathematical formula}PˆAt−1∪(θ+,pB). Next, we rebuild our GP using these t points. We draw samples from the new GP and exponentiate and normalise them to obtain samples {a mathematical formula}hi from the uncertainty model for the posterior {a mathematical formula}Fθ|Xobs. Then we compute the divergence between {a mathematical formula}hi and {a mathematical formula}PˆAt−1∪(θ+,pB). We repeat this for the blue and green points and average all the divergences. The next evaluation point will be that with the lowest expected one step ahead divergence.</paragraph><paragraph>The expectations in the NED utility above are computationally intractable. They can only be approximated empirically by drawing samples and require numerical integration (as Fig. 3 suggests). For these reasons we propose an alternate utility function below. In our experiments we found that both EV and NED performed equally well.</paragraph></section><section label="2.4"><section-title>Exponentiated Variance (EV)</section-title><paragraph>A common active learning heuristic is to choose the point that you are most uncertain about for the next experiment. As before we use a GP on the log joint probability. At any given point in this GP we have an associated posterior variance of the GP. However, this variance corresponds to the uncertainty of the log joint probability whereas our objective is in learning the joint probability – which is a multiplicative factor away from the posterior. See Fig. 4. Therefore, unlike in usual GP active learning methods [25], the variance of interest here is in the exponentiated GP. By observing that an exponentiated Gaussian is a log Normal distribution, the EV utility function is given by{a mathematical formula} Here {a mathematical formula}μt,σt2 are the posterior mean and variances of the GP at time t. The {a mathematical formula}exp⁡(2μ(θ+)) will squash high variances in the low likelihood regions and amplify low variances in the high likelihood regions. The expression for {a mathematical formula}utEV(θ+) corresponds precisely to the variance of {a mathematical formula}P(θ,Xobs) according to the uncertainty model induced by the GP. We choose the point maximising the above variance to determine the next query location.</paragraph></section><section label="2.5"><section-title>Discussion</section-title><paragraph>We first argue that an active, i.e. an adaptive sequential, strategy will be useful for posterior estimation. In particular, the work of Castro et al. [4] demonstrates that active learning does not perform significantly better than passive strategies to estimate a uniformly smooth function uniformly well. However, in our case we wish to learn the function well at high log probability regions as they predominantly determine the shape of the posterior. To illustrate this we have shown a synthetically created log joint probability and the corresponding posterior in the first column of Fig. 5. The high likelihood regions largely affect the shape of the posterior since the variations in the low likelihood region are squashed after exponentiation. In the second column we queried the likelihood at uniformly spaced points and obtained estimates of the log joint probability and the posterior in green. In the third we have the same estimates in magenta, except that we used more queries at high likelihood regions. While the green estimate for the log joint may be uniformly better than the magenta estimate, it is the opposite for posterior. This is because, after exponentiation, the small errors in the high log probability regions have been inflated after exponentiation for the green estimate, whereas for the magenta estimate the large errors in the low probability regions have been diminished. Hence an active strategy, which uses more queries at the high log probability regions is likely to do better than a passive strategy. NED and EV do precisely this by attaching more emphasis to the uncertainties in the high log probability regions.</paragraph><paragraph>Next, it is important to distinguish our objective in this work from similar active learning literature in the GP framework. In BO, the objective is to find the maximum of a function. This means that once the active learner realises that it has found the mode of a function it has less incentive to explore around as it would not improve the current maximum values. For instance, consider the log joint probability in Fig. 6(a) and the joint probability in Fig. 6(b). We have shown the points where we have already queried at as brown crosses and the red circles (x) and (y) show possible candidates for the next query. The shaded regions represent the uncertainty due to three standard deviations in the GP. In BO, the active learner would not be interested in (y) as, by virtue of points (5), (6) and (7) it knows that (y) is not likely to be higher than (6). On the other hand, in BAPE we are keen on (y) as knowing it with precision will significantly affect our estimate of the posterior (Fig. 6(b)). In particular to know the posterior well we will need to query at the neighbourhood of modes and the heavy tails of a distribution. A BO utility is not interested in such queries. On the other extreme, in AGPR the objective is to learn the function uniformly well. This means in the same figures, AGPR will query point (x). However, given sufficient smoothness, we know that the joint probability will be very low there after exponentiation due to points (3) and (4). Therefore, the BAPE active learner will not be as interested in (x) as AGPR. Observe that the uncertainty at (x) is large in the log joint probability space in comparison to the uncertainty elsewhere; however, in the probability space this is smaller than the uncertainty at the high probability regions. As Fig. 5 indicates, while we model the log joint probability as a GP we are more interested in the uncertainty model of the posterior/joint probability. Finally, as a special case for BQ, Osborne et al. [20] consider evaluating the model evidence – i.e. the integral under the conditional. Their utility function uses approximations tailored to estimating the integral well. Note that our goal of estimating the posterior well is more difficult than estimating an integral under the conditional as the former implies the latter but not vice versa.</paragraph></section></section><section label="3"><section-title>Other algorithms for comparison</section-title><paragraph>We list and describe some potential alternatives for posterior estimation which we use in our empirical evaluation.</paragraph><paragraph>1. MCMC – density estimation (MCMC-DE): We implement MCMC with a Metropolis Hastings (MH) chain and use kernel density estimation (KDE) on the accepted points to estimate the posterior. When comparing MCMC against NED/EV we consider the total number of queries and not just those accepted. There are several variants of the MH proposal scheme and several tuning parameters. Comparing to all of them is nontrivial. We use MH in its basic form using a fixed Gaussian proposal distribution. Practitioners usually adjust the proposal based on the acceptance rate. Here, we chose the proposal manually by trying different values and picking the one that performed best within the queries used. Note that this comparison is advantageous to MCMC. In one experiment we test with Emcee [6], a popular package for Affine Invariant MCMC which automatically fine tunes the proposal bandwidth based on acceptance rate [6].</paragraph><paragraph>2. MCMC – regression (MCMC-R): Here, as in MCMC-DE we use a MH Chain to generate the samples. However, this time we regress on the queries (not samples) to estimate the posterior. We include this procedure since MCMC can be viewed as a heuristic to explore the parameter space in high likelihood regions. We show that a principled query strategy outperforms this heuristic.</paragraph><paragraph>3. Approximate Bayesian computing (ABC): There are several variants of ABC [18], [22]. We compare with a basic form given in [17]. At each iteration, we randomly sample θ from the prior and then sample an observation {a mathematical formula}Xsim from the likelihood. If {a mathematical formula}d(Xsim,Xobs)&lt;ϵ we add θ to our collection. Here {a mathematical formula}d(⋅,⋅) is some metric on a sufficient statistic of the observation and {a mathematical formula}ϵ&gt;0 is a prespecified threshold. We perform a KDE on the collected samples to estimate the posterior. The performance of ABC depends on ϵ: As for MCMC-DE we choose ϵ by experimenting with different values and choosing the value which gives the best performance within the queries used. We compare with total number of parameter values proposed and not just those retained. We compare with ABC only in experiments where it is possible to sample from the likelihood (in addition to evaluating the likelihood).</paragraph><paragraph>4. Uniform random samples (RAND): Here, we evaluate the likelihood at points chosen uniformly on Θ and then regress on these points.</paragraph><paragraph>5. Active Gaussian process regression (AGPR): &amp; 6. Bayesian optimisation (BO-EI): On our synthetic problems we also compare with the GP based active learning methods discussed in Section 2.5. For BO, we use the Expected Improvement [2]. We choose points using the above criterion and then regress on these points.</paragraph></section><section label="4"><section-title>Experiments</section-title><paragraph>We perform experiments on a series of low and high dimensional synthetic and real astrophysical experiments.</paragraph><paragraph>In our experiments the NED, EV utilities were maximised by evaluating them on a grid of size {a mathematical formula}103–108 depending on the dimensionality and then choosing the point with the maximum value. For numerical integration in NED, we use the trapezoidal rule. Further, since the inner expectation in Equation (4) is expensive we approximate it using a one sample estimate. NED is only tested on low dimensional problems since empirical approximation and numerical integration is computationally expensive in high dimensions. In our experiments, EV slightly outperforms NED probably since the EV utility can be evaluated exactly while NED can only approximated.</paragraph><paragraph>We use a squared exponential kernel in all our experiments. The bandwidth for the kernel was set to be {a mathematical formula}5n−1/d where n is the total number of queries and d is the dimension. This was following several kernel methods (such as kernel regression) which use a bandwidth on the order {a mathematical formula}O(n−c1c2+d)[9]. The constant 5 was hand tuned by experimenting with a series of independent synthetic experiments. The other GP hyper-parameters, {a mathematical formula}σf2 and {a mathematical formula}σn2 were set via cross validation every 20 iterations. When we tried setting the bandwidth via cross validation too we found that it had a tendency too choose a larger than required bandwidth in the early iterations and then get stuck without decreasing. The consequence of this behaviour is that our method might not sufficiently explore the space and hence miss out on certain regions of the likelihood. Such a phenomenon has also been observed in Bayesian Optimisation and hence the bandwidth is decreased artificially as a precautionary measure against insufficient exploration [30].</paragraph><section label="4.1"><section-title>Low dimensional synthetic experiments</section-title><paragraph>To illustrate our methods we have two simple yet instructive experiments. In the first, the parameters space is {a mathematical formula}Θ=(0,1) equipped with a {a mathematical formula}Beta(1.2,1) prior. We draw θ from the prior, and then draw 500 samples from a Bernoulli {a mathematical formula}(θ2+(1−θ)2) distribution: i.e. {a mathematical formula}Xobs∈{0,1}500. The ambiguity on the true value of θ creates a bimodal posterior. Fig. 7(a) compares NED/EV against the other methods as a function of the number of queries. For ABC, we rejected if {a mathematical formula}(∑iXobs(i)−∑iXsim(i))/∑iXobs(i)&gt;0.02.</paragraph><paragraph>The second experiment is a 2D problem with {a mathematical formula}Θ=(0,1)2. We artificially created a 3-modal log-joint posterior shown by green contours in Fig. 7(c). Fig. 7(b) compares all methods. Fig. 7(c) shows the points chosen by the NED query strategy in order. We have learned the high log joint probability regions well at the expense of being uncertain at low log joint probability areas. However, this does not affect the posterior significantly as they are very small after exponentiation. ABC does not apply here since we artificially constructed the log posterior and cannot sample from the likelihood.</paragraph><paragraph>Our methods outperform existing methods and other heuristics by orders of magnitude on these simple experiments. Both MCMC-DE and ABC require a large number of samples before being competitive with the methods using regression. This corroborates an earlier remark that using the evaluated likelihood values in the estimate can be useful when the queries are expensive. Note that the KL divergence for BO gets stuck without decreasing further. This is because after a certain stage, most evaluations are centred near the maximum. As a consequence, the heavy tails and other modes are not explored properly.</paragraph></section><section label="4.2"><section-title>Higher dimensional synthetic experiments</section-title><paragraph>We test in {a mathematical formula}d=5 and 15 dimensions. We construct an artificial log likelihood so that the resulting posterior is mixture of 2 Gaussians centred at 0 and 1. Both Gaussians had covariance {a mathematical formula}σ2Id where {a mathematical formula}σ=0.5d. We evaluate performance by the ability to estimate certain linear functionals. The exact value of these functionals can be evaluated analytically since we know the true posterior. We use a uniform prior. Our log-likelihood, functionals and their true values are{a mathematical formula} For MCMC-DE, we draw samples {a mathematical formula}Z1,Z2,… from the true likelihood. To estimate {a mathematical formula}Ti=E[ϕi(X)] we use the empirical estimator {a mathematical formula}Tˆi=1/N∑kϕi(Zk). Here {a mathematical formula}ϕ1=∑i=1dXi for {a mathematical formula}T1 etc. For MCMC-DE we experimented with Gaussian proposal distributions. For EV, MCMC-R and RAND we first use the queried points to obtain an estimate of the log-likelihood by regressing on the likelihood values as explained before. Then we run an MCMC chain on this estimate to collect samples and use the empirical estimator for the functionals. Note that evaluating the estimate, unlike the likelihood, is cheap. We did not try NED since numerical integration is intractable in high dimensions. ABC does not apply in this experiment as we cannot sample from the log likelihood. For the proposal distributions for MCMC-DE and MCMC-R methods we used a Gaussian with standard deviations {a mathematical formula}{0.25σ,0.5σ,σ,2σ,4σ} and report the one that performed best within the allotted queries. When applying MCMC on the regression estimates in EV, MCMC-R and RAND we used a Gaussian proposal with standard deviation σ. The results are shown in Fig. 8. They demonstrate the superiority of our query strategy over the alternatives.</paragraph></section><section label="4.3"><section-title>Type Ia supernovae</section-title><paragraph>We use supernovae data for inference on 3 cosmological parameters: Hubble Constant {a mathematical formula}(H0∈(60,80), Dark Matter Fraction {a mathematical formula}ΩM∈(0,1) and Dark Energy Fraction {a mathematical formula}ΩΛ∈(0,1). The likelihood for the experiment is given by the Robertson–Walker metric which models the distance to a supernova given the parameters and the observed red-shift. The dataset is taken from [5]. The parameter space is taken to be {a mathematical formula}Θ=(0,1)3 (For {a mathematical formula}H0 we map it to {a mathematical formula}(60,80) using an appropriate linear transform). We test NED/EV against MCMC-DE, ABC, MCMC-R, RAND and Emcee, a popular python package for affine invariant MCMC. For ABC, sampling from the likelihood is as expensive as computing the likelihood. Fig. 9(a) compares all methods. Fig. 9(b) shows the points queried by EV and the marginals of the true posterior. As expected, most of EV's queries are concentrated around the modes and heavy tails of the posterior. The KL for RAND decreases slowly since it accumulates points at the high likelihood region very slowly. MCMC-R performs poorly since it has only explored part of the high likelihood region. For NED/EV after an initial exploration phase, the error shoots down.</paragraph><paragraph>The likelihood evaluations in this experiment are quite cheap, taking only a fraction of a second for each query. Determining the next point is more expensive in EV than methods such as MCMC, ABC and RAND due to matrix inversion in GPs. However, we found that the latter methods required up to 20–30 times the number of likelihood evaluations to be competitive with EV in this experiment. Therefore, despite the fact that the EV query strategy is expensive it performs better than other methods on wall clock time. This illustrates that principled adaptive query strategies can reap great dividends in posterior estimation.</paragraph></section><section label="4.4"><section-title>Luminous red galaxies</section-title><paragraph>Here we used data on Luminous Red Galaxies (LRGs) for inference on 8 cosmological parameters: spatial curvature {a mathematical formula}Ωk∈(−1,0.9), dark energy fraction {a mathematical formula}ΩΛ∈(0,1), cold dark matter density {a mathematical formula}ωc∈(0,1.2), baryonic density {a mathematical formula}ωB∈(0.001,0.25), scalar spectral index {a mathematical formula}ns∈(0.5,1.7), scalar fluctuation amplitude {a mathematical formula}As∈(0.65,0.75), running of spectral index {a mathematical formula}α∈(−0.1,0.1) and galaxy bias {a mathematical formula}b∈(0,3). The likelihood is obtained via the Galaxy Power spectrum which measures the distribution of temperature fluctuations as a function of scale. We use software and data from [29]. Our parameter space is taken to be {a mathematical formula}(0,1)8 by appropriately linear transforming the range of the variables. Each query takes about 4–5 seconds. In EV, determining the next point takes about 0.5–1 seconds with ≈2000 points and about 10–15 seconds with ≈10000 points. In this regime, where the cost of the likelihood evaluation is more expensive or comparable to the cost of determining the next point in EV, we significantly outperforms other methods on wall clock time. We do not compare with NED due to the difficulty of high dimensional numerical integration. We do not compare with ABC since the software only permits evaluation of the likelihood but not sampling.</paragraph><paragraph>Fig. 10 shows points queried by MCMC, RAND and EV projected on the first 2 dimensions. MCMC has several high likelihood points but its queries are focused on a small region of the space. RAND does not have many points at high likelihood regions. EV has explored the space fairly well and at the same time has several queries at high likelihood regions. As numerical integration in 8 dimensions is difficult, we cannot obtain ground truth for this experiment. Therefore, we perform the following simple test. We queried 250,000 points uniformly at random from the parameter space to form a test set. We then run EV, MCMC-R and RAND for up to 12,000 queries to collect points and estimate the posterior. Performance is evaluated by the mean squared reconstruction error of the exponentiated log joint probabilities (joint probabilities). Fig. 11 shows the results. The error for RAND and MCMC-R stay the same throughout since the problem is difficult and they did not have sufficient number of high likelihood points throughout the space.</paragraph></section></section><section label="5"><section-title>Conclusions</section-title><paragraph>We proposed a framework for query efficient posterior estimation for expensive blackbox likelihood evaluations. Our methods use GPs and are based on popular ideas in Bayesian active learning. We demonstrate that our methods outperform natural alternatives in practice.</paragraph><paragraph>Note that in Machine Learning it is uncommon to treat posterior estimation in a regression setting. This is probably since the estimate will depend on the intricacies of the regression algorithm. Thus if likelihood evaluations are inexpensive, MCMC seems like a natural choice due to its theoretical guarantees in the large sample regime. However, our work demonstrates that when likelihood evaluations are expensive, such as in scientific simulations, treating posterior estimation in an active regression framework enables us to be significantly query efficient.</paragraph><paragraph>The proposed methods do not scale very well with dimension, which is a common problem with nonparametric methods. Going forward we wish to tackle active posterior estimation in several dozens of dimensions. A possible avenue would be to use ideas from some recent progress on high dimensional Bayesian Optimisation using additive models [11].</paragraph><section-title>Acknowledgement</section-title></section></content><acknowledgements><paragraph>This research was partly funded by DOE grant DESC0011114. An abridged version of this work appeared in Kandasamy et al. [10].</paragraph></acknowledgements><references><reference label="[1]"><authors>Ryan Prescott Adams,Iain Murray,David J.C. MacKay</authors><title>The Gaussian process density sampler</title><host>NIPS(2008)</host></reference><reference label="[2]">Eric Brochu, Vlad M. Cora, Nando de Freitas, A tutorial on bayesian optimization of expensive cost functions, with application to active user modeling and hierarchical reinforcement learning, CoRR (2010).</reference><reference label="[3]"><authors>Brent Bryan,Jeff Schneider,Robert Nichol,Christopher Miller,Christopher Genovese,Larry Wasserman</authors><title>Active learning for identifying function threshold boundaries</title><host>Advances in Neural Information Processing Systems(2006)MIT PressCambridge, MA</host></reference><reference label="[4]"><authors>Rui Castro,Rebecca Willett,Robert Nowak</authors><title>Faster rates in regression via active learning</title><host>NIPS(2005)</host></reference><reference label="[5]"><authors>T.M. Davis,</authors><title>Scrutinizing exotic cosmological models using ESSENCE supernova data combined with other cosmological probes</title><host>Astrophys. J. (2007) pp.716-725</host></reference><reference label="[6]">Daniel Foreman-Mackey, David W. Hogg, Dustin Lang, Jonathan Goodman, emcee: The MCMC Hammer, January 2013.</reference><reference label="[7]"><authors>Kenji Fukumizu,Le Song,Arthur Gretton</authors><title>Kernel Bayes' rule: Bayesian inference with positive definite kernels</title><host>J. Mach. Learn. Res. (2014)</host></reference><reference label="[8]"><authors>Alkis Gotovos,Nathalie Casati,Gregory Hitz,Andreas Krause</authors><title>Active learning for level set estimation</title><host>Proceedings of the 23rd International Joint Conference on Artificial IntelligenceIJCAI 2013, Beijing, China, August 3–9, 2013(2013)</host></reference><reference label="[9]"><authors>László Györfi,Micael Kohler,Adam Krzyzak,Harro Walk</authors><title>A Distribution Free Theory of Nonparametric Regression</title><host>Springer Series in Statistics (2002)</host></reference><reference label="[10]"><authors>Kirthevasan Kandasamy,Jeff Schneider,Barnabás Póczos</authors><title>Bayesian active learning for posterior estimation</title><host>International Joint Conference on Artificial Intelligence(2015)</host></reference><reference label="[11]"><authors>Kirthevasan Kandasamy,Jeff Schneider,Barnabás Póczos</authors><title>High dimensional Bayesian optimisation and bandits via additive models</title><host>International Conference on Machine Learning(2015)</host></reference><reference label="[12]"><authors>Andreas Krause,Ajit Singh,Carlos Guestrin</authors><title>Near-optimal sensor placements in gaussian processes: theory, efficient algorithms and empirical studies</title><host>J. Mach. Learn. Res. (2008)</host></reference><reference label="[13]"><authors>David Landau,Kurt Binder</authors><title>A Guide to Monte Carlo Simulations in Statistical Physics</title><host>(2005)Cambridge University Press</host></reference><reference label="[14]"><authors>Jun S. Liu</authors><title>Monte Carlo Strategies in Scientific Computing</title><host>(2001)Springer0387952306</host></reference><reference label="[15]"><authors>Yifei Ma,Roman Garnett,Jeff Schneider</authors><title>Active area search via Bayesian quadrature</title><host>International Conference on Artificial Intelligence and Statistics(2014)</host></reference><reference label="[16]"><authors>David J.C. MacKay</authors><title>Information Theory, Inference, and Learning Algorithms</title><host>(2003)Cambridge University Press</host></reference><reference label="[17]"><authors>Jean-Michel Marin,Pierre Pudlo,Christian P. Robert,Robin J. Ryder</authors><title>Approximate Bayesian computational methods</title><host>Stat. Comput. (2012)</host></reference><reference label="[18]"><authors>Paul Marjoram,John Molitor,Vincent Plagnol,Simon Tavaré</authors><title>Markov chain Monte Carlo without likelihoods</title><host>Proc. Natl. Acad. Sci. USA (2003)</host></reference><reference label="[19]"><authors>J.B. Mockus,L.J. Mockus</authors><title>Bayesian approach to global optimization and application to multiobjective and constrained problems</title><host>J. Optim. Theory Appl. (1991)</host></reference><reference label="[20]"><authors>M. Osborne,D. Duvenaud,R. Garnett,C. Rasmussen,S. Roberts,Z. Ghahramani</authors><title>Active learning of model evidence using Bayesian quadrature</title><host>Neural Information Processing Systems(2012)</host></reference><reference label="[21]"><authors>David Parkinson,Pia Mukherjee,Andrew R. Liddle</authors><title>A Bayesian model selection analysis of WMAP3</title><host>Phys. Rev. D, Part. Fields73 (2006)123523</host></reference><reference label="[22]"><authors>Gareth W. Peters,Y. Fan,Scott A. Sisson</authors><title>On sequential Monte Carlo, partial rejection control and approximate Bayesian computation</title><host>Stat. Comput. (2012)</host></reference><reference label="[23]"><authors>C.E. Rasmussen,C.K.I. Williams</authors><title>Gaussian Processes for Machine Learning</title><host>Adaptative Computation and Machine Learning Series (2006)University Press Group Limited</host></reference><reference label="[24]"><authors>Christian P. Robert,George Casella</authors><title>Monte Carlo Statistical Methods</title><host>Springer Texts in Statistics (2005)Springer-Verlag New York, Inc.</host></reference><reference label="[25]"><authors>Sambu Seo,Marko Wallat,Thore Graepel,Klaus Obermayer</authors><title>Gaussian process regression: active data selection and test point rejection</title><host>International Joint Conference on Neural Networks(2000)</host></reference><reference label="[26]">Burr SettlesActive Learning Literature SurveyTechnical report<host>(2010)University of Wisconsin-Madison</host></reference><reference label="[27]"><authors>John Skilling</authors><title>Nested sampling for general Bayesian computation</title><host>Bayesian Anal. (2006)</host></reference><reference label="[28]"><authors>Niranjan Srinivas,Andreas Krause,Sham Kakade,Matthias Seeger</authors><title>Gaussian process optimization in the bandit setting: no regret and experimental design</title><host>International Conference on Machine Learning(2010)</host></reference><reference label="[29]"><authors>M. Tegmark,</authors><title>Cosmological constraints from the SDSS luminous red galaxies</title><host>Phys. Rev. (December 2006)</host></reference><reference label="[30]"><authors>Ziyu Wang,Masrour Zoghi,Frank Hutter,David Matheson,Nando de Freitas</authors><title>Bayesian optimization in high dimensions via random embeddings</title><host>International Joint Conference on Artificial Intelligence(2013)</host></reference></references><footnote><note-para label="1">We work in the log joint probability space since log smoothes out a function and is more conducive to be modelled as a GP. We also avoid issues such as non-negativity of {a mathematical formula}PˆmA(θ|Xobs). Osborne et al. [20] also use a similar log-transform before applying a GP.</note-para></footnote></root>