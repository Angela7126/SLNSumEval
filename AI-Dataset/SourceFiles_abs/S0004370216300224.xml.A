<?xml version="1.0" encoding="utf-8"?>
<html>
 <body>
  <root>
   <title>
    The multifaceted impact of Ada Lovelace in the digital age.
   </title>
   <content>
    <paragraph>
     Robin Hammerman, Andrew L. Russell (Eds.), Ada's Legacy: Cultures of Computing from the Victorian to the Digital Age, Association for Computing Machinery and Morgan &amp; Claypool, New York, NY, USA, 2015.
    </paragraph>
    <paragraph>
     The book Ada's Legacy, published by ACM with Morgan &amp; Claypool to commemorate the bicentennial of Ada's{sup:1} birthday in December 1815, is an interdisciplinary edited book that celebrates the many achievements of Ada and the multifaceted and long-lasting impact of her life and work.
    </paragraph>
    <paragraph>
     Ada's work and her collaboration with Charles Babbage have been known starting from the second half of the 19th century. They have received new attention in the second half of the 20th century, mainly due to the book edited by Bowden in 1953, when, at the dawn of the digital era, Ada was recognized as one of the precursors [2]. The reputation of Ada was so high that she had the honor of a programming language named after her, a honor she shares with Blaise Pascal and few other giants in the history of science.
    </paragraph>
    <paragraph>
     In the last couple of decades, we have assisted to a renewed interest in Ada, thanks to the growing attention to the promotion of women in Science, Technology, Engineering, and Mathematics (STEM). Among other initiatives we mention the Ada Lovelace day; it was established in 2009 by Suw Charman-Anderson{sup:2} and is held worldwide on the second Tuesday of October of each year to celebrate the achievements of women in STEM. The Ada Initiative, a no profit organization with the aim to “serve the interests and needs of women in open technology and culture who are at the intersection of multiple forms of oppression”,{sup:3} was co-founded by Valerie Aurora and Mary Gardiner in January 2011 and unfortunately discontinued in October 2015.
    </paragraph>
    <paragraph>
     The book Ada's Legacy is an original and valuable contribution to the commemoration of the bicentennial. Here, the Editors Robin Hammerman and Andrew L. Russell (both Professors at the Stevens Institute of Technology in Hoboken, New Jersey, USA) collect papers by a number of prominent authors on quite a number of topics: Ada's collaboration with Babbage, the development of the Ada programming language, Ada's position in the Victorian and steampunk literature, her presence in contemporary art and comics, and her relevance in issues of gender and technology in the digital age. The book originated from the conference Ada Lovelace: An Interdisciplinary Conference Celebrating her Achievements and Legacy, which took place at the Stevens Institute of Technology on October 18th, 2013, under the auspices of the Institute's College of Arts and Letters. Many of the papers published in the book were presented at that conference.
    </paragraph>
    <paragraph>
     Before starting my description and comments on the book, I go through the most important aspects of Ada's work and short life. She was daughter to the Romantic poet Lord Byron and to Anna Isabelle Milbank, and grew in the exclusive noble circles of the Victorian society in the intellectually lively period of the industrial revolution. Her father went down to history for his poetry and for a very unconventional life, for which he separated from his wife a month after Ada was born and, four months later, he left England forever. Ada never met him, nevertheless she matured a strong interest in him and his poetry. The mother, an arid princess of parallelograms, as her husband used to dub her, associated poetry with dissolute life, so she did her best to keep Ada away from degeneration using discipline, hard study, and mathematics as antidotes. Ada received a very good and strict education, she had knowledgeable tutors, and even though women were not most welcome in the scientific male dominated circles of the titled society of the time, she happened to meet many mathematicians, logicians, physicists and engineers such as De Morgan, Faraday, Darwin, but she was also acquainted with Charles Dickens, the greatest novelist of the Victorian-era. The encounter that changed her life was that with Babbage. He had invented the Difference Engine, a special purpose mechanical calculator, and was working at the Analytic Engine, a general purpose mechanical calculator. The Analytic Engine accepted data and a program as input. The innovative idea was to punch data and program on cards like those used by Jacquard to mechanize textile looms. Ada was fascinated by Babbage's project and contributed in several ways, in particular she published the first program for the Analytic Engine [4]. The paper, known as the Notes, is reprinted in the book as Chapter 3 and is the only technical publication left by Ada, who died prematurely at the age of 36. Ada's health had been a problem since her childhood, she was often sick and for long periods; she married and delivered three kids, then started suffering from cancer. Her life was somehow extravagant, with alcool, drugs (often prescribed by doctors to relieve her from terrible pains), adultery, and gambling, which has certainly offered good arguments to her detractors.
    </paragraph>
    <paragraph>
     The book Ada's Legacy, after a thoughtful introduction by the Editors (Chapter 1), is organized in three parts. In the sequel, I shortly describe all the chapters of the book, often using and directly reporting the insightful syntheses contained in Chapter 1.
    </paragraph>
    <paragraph>
     The first part, Ada's legacy in Computing, consists of five chapters. The first two – Chapters 2 and 3 – are centered on Ada the scientist,{sup:4} the following three – Chapters 4, 5, and 6 – are centered on the programming language Ada developed by the Department of Defense (DoD) of the USA in the Eighties of last century.
    </paragraph>
    <paragraph>
     Chapter 2, Charles Babbage, Ada Lovelace, and the Bernoulli Numbers by Thomas J. Misa, introduces us to Ada and assesses her contribution to computing. Misa illustrates the historical debates around Ada's mathematical work and her collaboration with Babbage, inventor of the Difference Engine (1822) and Analytical Engine (1834). He points out the passion, even animosity, that emerged about the collaboration between Babbage and Ada, to distinguish who has to be credited for what. He puts forth a very wise observation: “the Lovelace–Babbage question is not a zero–sum game.” Attributing some contribution to one of them does not diminish the stature of the other.
    </paragraph>
    <paragraph>
     This chapter is very important as it gives many insights into Ada's work and contribution, into the environment in which they originated, and provides also hints on how difficult it was for a woman to be recognized for contributions to science or technology in the Victorian age (as in other ages, for that matter). For instance, Misa reports on De Morgan rating Ada “favorably with Maria Agnesi, the Italian author of a calculus textbook (1748), and far more highly than Mary Sommerville”. The British mathematician Mary Somerville had been a tutor and a good friend of Ada; she introduced Ada to Babbage in 1833. Actually the comparison performed by the famous De Morgan is a little discouraging: it is not clear why he would compare Ada only with female peers – even though at the International level – as in a modern context with quotas.
    </paragraph>
    <paragraph>
     In this chapter, we are also reminded that De Morgan in the same years “facilitated the mathematical work” of Boole,{sup:5} who in 1854 – after Ada had passed away – published his fundamental work on the nowadays universally known Boolean algebra [1]. Ada didn't read it, but certainly it was in the air when she dreamed of a mathematical formalization, an algebra, of operations.
    </paragraph>
    <paragraph>
     Chapter 3, Sketch of the Analytical Engine invented by Charles Babbage, Esq., reprints Ada's famous translation of Menabrea's Sketch that was first published in Taylor's Scientific Memoirs in 1843 [4]. Babbage presented his work in Turin, Italy, and Menabrea{sup:6} published the first known description of the Analytic Engine. Babbage reported in his autobiography to have encouraged Ada to perform the translation of Menabrea's article into English, and to add her notes. Then he explicitly praised her for the deep and thoughtful work she did. The accuracy and style of Ada's translation of Menabrea's words make the reading pleasing. The language and the style are fluid, light and very modern. The notes she added reflect her vision and creativity, and are the result of long and deep interactions with Babbage, as many details of the Analytic Engine had still to be cleared.
    </paragraph>
    <paragraph>
     Ada's notes (marked from A to G) were longer and more insightful than the original paper, there she put forth her own vision of how Babbage's machines could perform complex calculations. In these notes we may also appreciate the poetic vein of Ada: “We may say most aptly, that the Analytical Engine weaves algebraical patterns just as the Jacquard-loom weaves flowers and leaves”. Most importantly, we can read Ada's belief that “The Analytical Engine is an embodying of the science of operations, constructed with peculiar reference to abstract number as the subject of those operations.” This is maybe her deepest intuition: the Analytic engine can be programmed with cards that implement algorithms, which respond to a formalization of computations of operations that are relations between numbers. Hence computations can be made on anything that can be represented with numbers and operations (relations) among them. Hence for instance, Ada suggests that “the engine might compose elaborate and scientific pieces of music of any degree of complexity or extent.” The most famous of her mathematical works is however that presented in Note G where she describes an algorithm for the computation of Bernoulli numbers, and for it she is credited to be the first computer programmer. Curiously enough the first computer program never run, as the hardware was never completed during her life.
    </paragraph>
    <paragraph>
     Chapters 4, 5 and 6 are centered around the programming language Ada and make an interesting reading for whoever wants to open a window on the history of programming languages in the Eighties.
    </paragraph>
    <paragraph>
     Chapter 4, Ada: Past, Present, Future is the reprint of an interview first published in the Communications of the ACM in 1984 with Jean Ichbiah, the principal designer of the Ada programming language. The language, originally called DoD1, was designed on a request of the USA Department of Defense (DoD) where a new unifying language was an urgent need to overcome the difficulties and incompatibilities that arose with the proliferation of different programming languages in the 1960s and 1970s.
    </paragraph>
    <paragraph>
     Ichbiah in the interview tells how he was involved with Ada, which were the purposes of this new language, the strong requirements imposed by the criticality of the applications of interest of the DoD, and why his previous experience well qualified him for this endeavor. From the interview we appreciate the aims of this enormous effort, to facilitate maintenance, emphasize clarity, and to define and standardize the language through an inclusive and international process. Work on the Ada programming language began in 1977, was proposed as a standard in 1980, was published as an American standard in 1983, and as an international standard in 1987.
    </paragraph>
    <paragraph>
     Chapter 5, The Ada Programming Language, presents parts of a 2006 interview to Jean Sammet by Tim Bergin. Sammet was involved with the Ada programming language for over ten years, in the late Seventies and Eighties, as part of her work at IBM. Sammet describes the extraordinary complex process involved in the development of Ada. A process that, in addition to the technical aspects, also concerned the choice of an appealing name. The name Ada was chosen as Ada Lovelace was well known to the Computer Science community, mainly through the 1953 book “Faster than Thought” by Bowden [2]. A check for originality of the name Ada for a programming language was first performed, then a request for permission to name the new programming language after Ada was issued by DoD officials to Ada's descendants.
    </paragraph>
    <paragraph>
     Chapter 6, The Rise, Fall, and Persistence of Ada by Ricky Sward, describes the evolutions, the diffusion, and the usages of the Ada programming language, providing examples where the Ada language fell short of expectations, as well as examples of persistent niche uses for high integrity, safety critical systems such as avionics, air traffic control, and robotics. The language has never became universally used (in particular the AI community has largely ignored it), but it has been consistently used by the DoD, and has had three releases, the last one in 2012.
    </paragraph>
    <paragraph>
     The second part of the book, Ada's Legacy in Literature, illustrates how Ada participated in the literary environment of her time and how contemporary writers envision her. It consists of three chapters.
    </paragraph>
    <paragraph>
     Chapter 7, “I shall in due time be a poet”: Ada Lovelace's Poetical Science in Its Literary Context by Imogen Forbes-Macphail, situates Ada's contributions to mathematics within the literary context of her Romantic and Victorian contemporaries and explores ideas concerning the origin and use of language. We learn in this chapter that Ada's language was very accurate within her Notes and in the many letters she wrote. In one of them she speaks about becoming more famous than her father for literary merits, to which her merits as mathematician have to be added. Poetry and science were always intertwined in Ada's mind and visions, she had this feeling for a beautiful mathematical music, art, and poetry.
    </paragraph>
    <paragraph>
     The chapter goes on with an examination of the implications of Ada's thoughts concerning machines and poetic or artistic composition for both contemporary literary theory and current debates on Artificial Intelligence. There we learn that Ada had in mind to represent cerebral phenomena by putting them in the form of mathematical equations; in her words: “laws for the mutual actions of the molecules of brain (equivalent to the law of gravitation for the planetary &amp; sideral world).”
    </paragraph>
    <paragraph>
     Chapters 8 and 9 complete the second part. They explore the ways in which Ada has been represented in steampunk fiction, a sub-genre of science fiction that adapts past and future technologies powered by steam to Victorian-era themes and settings.
    </paragraph>
    <paragraph>
     Chapter 8, A different sort of bird, authored by Victoria Ludas Orlofsky, explains that the first Ada Lovelace Day in 2009 marks a significant turning point in steampunk representations of women. To this end, Orlofsky presents a trajectory of emblematic ways authors depict women in steampunk culture and novels from 1990 to the present. This change has influenced the way Ada is perceived and represented in the later steampunk novels. The author claims that the most balanced and positive view of Ada came from the only female author of a steampunk novel.
    </paragraph>
    <paragraph>
     In Chapter 9, Ada bright and dark, the author Catherine Siemann examines fictional depictions of Ada at the center of social concerns in two novels representatives of the first- and second-wave steampunk periods and published twenty years apart: The Difference Engine by Gibson and Sterling (Ballantine Books, 1991) and All man of Genius by Lev Rosen (Tor Books, 2011). Both novels echo their Victorian ancestors as social critiques of speculative science and the involvement of gender. Ultimately, Siemann argues, the novels reveal our own cautionary or optimistic preoccupations with gender and technology while demonstrating Ada's increasing importance as a cultural figure.
    </paragraph>
    <paragraph>
     The third part of the book, Ada's Legacy in the Digital Age, consists of three chapters which illustrate the depth and variety of scholarship, art, and activities that Ada has inspired. I here largely reproduce the illustration of the three chapters provided by the Editors Hammerman and Russell in the introduction, as my analysis doesn't bring any additional insight.
    </paragraph>
    <paragraph>
     In Chapter 10, Oracle: The Engine Weaves, Amy Cunningham describes and documents her Oracle project, a “video song cycle” which features a mix of soprano voice and high definition video. Inspired by the critical and analytical cadences of Ada's work, Oracle utilizes off-screen, disembodied singing that evokes an awareness of her position across the margins and boundaries that surrounded her.
    </paragraph>
    <paragraph>
     In Chapter 11, “Genderless” Online Discourse in the 1970s: Muted Group Theory in Early Social Computing, the author Jenny Ungbha Korn applies the conceptual tools of analytical feminism and muted group theory to explore how gender manifested within PLATO, a pioneering virtual community of the Seventies. Korn's discussion of the dynamics of online collaboration resonates with the collaborative group dynamics at work in the Ada programming language (Chapters 4–6), as well as in online communities that emerged with the adoption of the World Wide Web. In contrast to the earlier chapters, however, Korn utilizes a critical feminist approach to emphasize “the structural and patriarchal features of PLATO discourse that marginalized interactions by underrepresented populations.”
    </paragraph>
    <paragraph>
     Chapter 12 concludes Ada's Legacy with Valerie Aurora's Rebooting the Ada Lovelace Mythos. This chapter is an adaptation from Aurora's keynote lecture delivered at the 2013 conference held at Stevens Institute of Technology. Aurora recalls the many incarnations of Ada, from her identity as Byron's only legitimate child to her iconic status for women in STEM fields. Overall, Aurora suggests, the story of Ada as arguably the first computer programmer is more complex and multidimensional than it has been represented to date, a similar conclusion to that drawn by Misa in Chapter 2 of the book, to which it ideally reconnects.
    </paragraph>
    <paragraph>
     Aurora's purpose is not merely to comment (which she does with great insight) on the longstanding contest over Ada's depiction in popular culture and by biographers. Aurora also highlights two defining issues for Ada's legacy in the 21st century – the debate over Ada's contributions to computer programming and Ada's position as an icon for women in computing. She concludes by exhorting us to draw from Ada's life and legacy as inspiration for new stories of our own imaginations.
    </paragraph>
    <paragraph>
     In summary, the twelve chapters in the volume Ada's Legacy illustrate key aspects, which span from science to technology, literature and includes collaboration, feminism, technical excellence, creativity, and controversy. The topics covered in the book are indeed a large variety, so it is possible that Ada's Legacy doesn't hold the interest of each reader uniformly from the beginning to the end, but each reader will find chapters that allow him/her to deepen aspects of the complex phenomenon of Ada.
    </paragraph>
    <paragraph>
     Having read many critical appraisals of Ada's contributions and having refreshed my readings about Turing not long ago, in the occasion of the centennial of his birth (2012), I have read Ada's Legacy with two persistent questions in mind: 1) Did Ada contribute something to computing or was there a real “mismatch between her abilities and her ambitions”? (The quote is from Martin Davis article coauthored with Virginia Davis [3]); 2) What is the relation between Turing and Ada and their view of Artificial Intelligence?
    </paragraph>
    <paragraph>
     As for the first question: the authoritative opinion of an important logician, as Martin Davis undoubtedly is, had a strong impression on me. The article is an interesting reading. Certainly its authors were over-reacting to a very wrong position (of some steampunk author?) that associated modern computers with Jacquard looms and didn't catch the profound discontinuity between a loom and a digital computer. Discontinuity that is perfectly appreciated by Misa in Chapter 2. Unfortunately, in this counter attack they happened to over diminish the contribution of Babbage and the poor Ada to the point of titling a section of their article: “Two Sad Stories: Charles Babbage and Ada Lovelace”. In particular Ada is torn apart, and all her contributions are attributed instead to Babbage who, according to them, used Ada with the sole purpose of increasing his importance and the visibility of his project in the Victorian high society.
    </paragraph>
    <paragraph>
     As for my second curiosity, it is clear that Ada's work was known to Turing and his environment. In particular, Alan Turing – with Christopher Strachey and others – contributed Chapter 25 (Digital Computers applied to games) to the landmark book edited by Bowden [2].{sup:7} So, for sure Turing knew Ada's work very well when he wrote the paper where the Imitation Game, now known as Turing test, was introduced [5]; there he speaks about the possibility of building machines commonly accepted as “thinking machines” by the end of the twentieth century, and says: I believe that at the end of the century the use of words and general educated opinion will have altered so much that one will be able to speak of machines thinking without expecting to be contradicted.
    </paragraph>
    <paragraph>
     and lists the major objections that he expects to be moved to the idea of a Machine Intelligence.{sup:8} Ada plays a prominent role in this list with the Lady Lovelace's Objection. It is one of the most famous objections and states that computers are incapable of originality and of autonomous thinking. Turing says: Our most detailed information of Babbage's Analytical Engine comes from a memoir by Lady Lovelace (1842). In it she states, “The Analytical Engine has no pretensions to originate anything. It can do whatever we know how to order it to perform” (her italics).
    </paragraph>
    <paragraph>
     Being acquainted with Turing's paper [5] well before knowing enough about Ada and reading her Notes[4], I matured the position that Turing was a genius and Ada, after all, a little too rigid and not far sighted enough. After learning more about Ada, her cultural entourage and her work as the “software engineer of the Analytical Engine” it is easy to appreciate the different positions of Ada and Turing. The century of research in between the two has brought us from the computing model of the Analytical Engine to that of the Turing Machine. The first one is a general purpose computer and its power is achieved by a clear distinction between a mill (CPU, in modern terms) and a store.{sup:9} With the Analytical Engine we go from a task specific special purpose machine (the Difference Engine) to a general purpose programmable one: the big intuition consists in the separation of data and operations from the machinery, and the idea that the operations can be coded into cards that drive the behavior of the machinery. Babbage and Ada did not go further. Turing's proposal is for a universal machine (i.e., a machine that in addition to being general purpose guarantees to compute whichever function is computable), and the distinctive innovation of his model over the Analytic Engine is the uniform representation of data and operations with the addition that both of them are stored in the machine. The disruptive effect of a stored program machine where data and operations have the same representation is that operations can be treated as data and be transformed during computations. This feature opens up the possibility of machine learning. Learning, in the writings of Turing, is extensively and repeatedly described as instrumental to reach a Machine Intelligence.
    </paragraph>
    <paragraph>
     Ada was not limited or rigid: she worked a century before Turing, she envisioned the idea of software and had the intuition that we could develop formal mathematical theories of operations and implement them in programs that apply operations to symbols, let them be numbers to be used in calculations, words to generate poems, or musical notes to generate music. Ada envisioned symbolic processing and with a century of research in mathematics and logic Turing could look further more into the future of thinking machines.
    </paragraph>
   </content>
  </root>
 </body>
</html>