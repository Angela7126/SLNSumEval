<?xml version="1.0" encoding="utf-8"?>
<html>
 <body>
  <root>
   <title>
    Arbitrary arrow update logic.
   </title>
   <content>
    <section label="1">
     <section-title>
      Introduction
     </section-title>
     <paragraph>
      In dynamic epistemic logic [16] various information changing events can be modeled, from modest public announcements, to powerful action models that can change an epistemic model beyond recognition. Here, we study arrow updates, a type of information changing event that is more powerful than public announcements but less powerful than action models. Roughly speaking, in public announcement logic (PAL [28]) one specifies which states in the model will remain as a result of the announcement, in arrow update logic (AUL [22]) one puts constraints on pairs in relations that endure the update (while in action model logic, also new states and new pairs can emerge as a result of the action). Let us emphasize at this point that although such relations can denote indistinguishability for an agent between states, they can also denote any kind of transition between states, or a temporal relation, a preference, etc. In other words, arrow update logic is relevant for many logics that are used in Artificial Intelligence, whether these logics model epistemic, doxastic or other attitudes of agents, dynamics, strategic interaction, or systems of norms (see also Section 2).
     </paragraph>
     <paragraph>
      One line of dynamic epistemic logics adds quantifiers over information changing events, ranging from quantifiers over public announcements [10], [5], group announcements [2], to quantifiers over action models [5]. An overview of the literature on this topic is provided by [14]. These different “quantified operator” logics find their application in analyzing the concept of knowability [10], but also in, e.g., security where one can express properties like no information changing event can disclose certain information to some agent. Such logics with quantifiers over information change find an application in epistemic protocol logics [32], [15] that allow for protocol change or protocol declaration. For a different approach to quantification over information change see [8], where a first-order modal logic is used.
     </paragraph>
     <paragraph>
      In this paper we introduce arbitrary arrow update logic (AAUL), which allows quantification over arrow updates. Like the other quantified logics, we can use AAUL to reason about knowability and security. Additionally, AAUL can be used to reason about protocol and rule design, as we will show in Section 2.
     </paragraph>
     <paragraph>
      We establish three kinds of results concerning AAUL. The first concerns expressivity of the logic. We show that, under the usual assumptions that the set of agents is finite and the set of propositional variables is infinite, arbitrary public announcement logic and arbitrary arrow update logic are incomparable in expressivity over the class of all Kripke models. We also identify a case where AAUL is more expressive than APAL. Finally, we compare arbitrary arrow update logic to a number of other logics, and conclude that it is incomparable to epistemic logic with common knowledge and that it is more expressive than basic epistemic logic (and therefore also more expressive than arbitrary action model logic and refinement modal logic [12]). Secondly, we show that the model checking problem for AAUL is PSPACE-complete. Finally, we introduce a proof system for AAUL, and prove it to be sound and complete with respect to our set of intended models.
     </paragraph>
     <paragraph>
      To argue for the relevance of AAUL for Artificial Intelligence in general and knowledge representation in particular, it is helpful to also show why AUL is relevant, and to keep in mind that AAUL is to AUL what APAL is to PAL. Where in PAL, semantically (that is, on Kripke models), the object of study is the elimination of states that do not satisfy a given specification (the announcement), in APAL then the question is what kind of sets can be eliminated, and which properties are invariant under arbitrary elimination. As pointed out above, PAL and APAL are primarily studied in contexts where the states represent epistemic information of agents, so PAL and APAL are pre-dominantly used as formalisms to study dynamic epistemic phenomena, answering questions like what kind of information can be learned (‘for which φ is {a mathematical formula}[φ]□aφ true?’), and what kind of information is knowable (‘for which φ is there an announcement ψ such that {a mathematical formula}[ψ]□aφ?’). But elimination of states is also relevant in other contexts then epistemic ones, like for instance in deontic reasoning, where some states may be (morally, or deontically) better than other states. In this context, the PAL construct {a mathematical formula}[ψ]φ would be interpreted as ‘if a law guaranteeing ψ would be enforced, as a result, φ would be true’.
     </paragraph>
     <paragraph>
      Where PAL and APAL focus on the elimination of specified or arbitrary sets of states, respectively, the focus of attention of AUL and AAUL is on the elimination of specified or arbitrary sets of transitions. For instance, where the deontic interpretation of (A)PAL addresses ought-to-be norms (‘Sein Sollen’), a deontic interpretation of (A)AUL is about ought-to-do norms (‘Tun Sollen’), see e.g., the chapter ‘Deontic logic as I see it’, by the founder of deontic logic, von Wright, in [26] or [13] for a computer science perspective. So if the relations in the Kripke model represent transitions, AUL can be used to reason about social laws: is it the case that, by disallowing certain transitions, we can guarantee a particular property? Norms can relate to rationality for instance, and indeed, in AUL one can mimic backward induction in an extensive form game by requiring that all moves for agent i should be kept which do not affect his chances of winning the game. But then, under this perspective, AAUL is useful for the Syntheses problem in social laws, and the mechanism design problem in game theory, because it allows one to study questions like ‘is there a social law (in the sense that only certain transitions are allowed) that guarantees a certain outcome?’ Or, ‘is there a game (in the sense that only certain moves in the extensive form of it are allowed) that only leaves a specified set of outcomes?’. The application of AUL and AAUL to social laws and mechanism design in further studied in [25], [23]. We return to the normative interpretation of arrow updates in Section 2.2.
     </paragraph>
     <paragraph>
      Arrow updates also have epistemic interpretations, which reinforces their relevance for knowledge representation. As we will argue in Section 2.1, arrow updates are more general than public announcements, since one can model semi-private announcements. These are announcements where only a sub-group of all the agents learn certain information, while all agents are aware what the protocol is (like when all students in a class know that their teacher has sent their marks to the administration office). This implies that AAUL provides a formalism to reason about arbitrary semi-private announcements, making it possible to express properties that are relevant for epistemic planning, like ‘there is a private announcement, such that everybody in {a mathematical formula}Ag1 knows what the password to the system is, while everybody in {a mathematical formula}Ag2 remains ignorant about this password’. The application of (A)AUL to doxastic logic would have a similar taste as that to epistemic logic. To give a simple example, removing a reflexive arrow in doxastic logic would correspond to a situation where an agent's belief are not necessary correct any more.
     </paragraph>
     <paragraph>
      More generally, in every AI-context where Kripke models are used to represent information in a certain context, AUL and AAUL can be applied to reason about a dynamic representation of that context, where certain transitions between certain states can be removed. If the binary relations represent agents who can take moves, AUL enables us to reason about forbidding certain agents to act in certain situations, wheres AAUL can represent information about what can be achieved in principle, by restricting the moves that are available to the agents. If the accessibility relation represents the flow of time, AAUL can formulate questions of what is guaranteed to hold if certain transitions will not occur. The relation in a Kripke model could represent what the goals are of agents: AAUL in this case would provide a formalism to reason about agents dropping goals, which is considered to be an important aspect in agent programming languages (see for instance the programming language GOAL [21], [1]). Likewise AUL and AAUL provide tools to reason about intention revision [31] and hence, in principle for the dynamics of many agents' attitudes, including Beliefs, Desires and Intentions [29].
     </paragraph>
     <paragraph>
      The arbitrary arrow update operator in AAUL adds implicit quantification over arrow updates. Recently, [9] used the capacity in second order modal logic to explicitly quantify over propositions. This makes it possible to define arbitrary announcements within the object language: {a mathematical formula}∀p[p]φ. Additionally, this also makes it possible to express properties like preservation ({a mathematical formula}φ→∀p[p]φ) and knowability ({a mathematical formula}φ→∃p〈p〉□aφ) within the object language. It would of course be interesting to do something similar for arrow updates. If we represent an arrow update by U, the analogue of preservation would express a stability condition of the environment, and, likewise, knowability could be studied with respect to arrow updates. There would also interesting generalizations outside the scope of epistemic logic that would become expressible, like for instance in agent normative languages: {a mathematical formula}Ought(φ)→∃U〈U〉[π]φ (if φ ought to be the case, there is a social law such that, when implemented, the agent's program will achieve (or maintain) it). However, as will become clear from the next sections, updates U are not represented by a formula only, and hence quantifying over them in an object language would require much more than embedding it in second-order modal logic. We leave studying such extensions of the object language for future work.
     </paragraph>
     <paragraph>
      The rest of this paper is organized as follows. We start with an informal discussion of logics for arrow updates in Section 2. After that, in Section 3, we define arbitrary arrow update logic as well as the logics we want to compare AAUL to. Then, in Section 4 we prove a number of expressivity results related to AAUL. In Section 5 we show that the model checking problem for AAUL is PSPACE-complete. Finally, in Section 6 we provide a proof system for AAUL, and we show that it is sound and complete.
     </paragraph>
    </section>
    <section label="2">
     <section-title>
      The different meanings of arrow updates
     </section-title>
     <paragraph>
      Public announcements and arrow updates were originally introduced as types of dynamic epistemic logic. As such, they were intended to be interpreted as so-called “epistemic events,” which change the information state of one or more agents. But there are other interpretations of these operators that seem equally useful. We briefly discussed several of these interpretations in the Introduction. Here, we discuss two interpretations in more detail: the epistemic interpretation and the normative interpretation.{sup:1}
     </paragraph>
     <section label="2.1">
      <section-title>
       The epistemic interpretation
      </section-title>
      <paragraph>
       Consider the following situation: Alice and Bob are playing a simple card game. There are only two cards in play, the king of spades and the ace of spades. Both players are dealt one card, face down, so neither player knows which card they (or the other player) have been dealt. There are two possibilities: Alice has the king, which we denote by p, or Alice has the ace, which we denote by ¬p. Suppose that Alice has in fact been dealt the king, although neither Alice nor Bob knows this. We are interested in the information state of the two agents, which is usually represented as a Kripke model such as the model {a mathematical formula}MEp shown in Fig. 1. In this interpretation, arrows between worlds are used to represent the uncertainty of agents. There is an arrow labeled a from w to {a mathematical formula}w′ if and only if in world w agent a is uncertain about the state of the world and thinks it might be {a mathematical formula}w′ instead of w. In such a case we say that {a mathematical formula}w′ is epistemically accessible from w for a. We say that a knows in w that φ if and only if φ is true in every world {a mathematical formula}w′ that is epistemically accessible for a.
      </paragraph>
      <paragraph>
       Note that {a mathematical formula}MEp is an accurate representation of the simple card game. The case where Alice has the king is represented as world {a mathematical formula}w1 and the case where Alice has the ace is represented as world {a mathematical formula}w2. Regardless of who has which card, neither agent knows what card they have, so they consider both cases possible. But the agents do posses knowledge: in {a mathematical formula}w1 for instance, Alice knows that Bob does not know that Alice holds the king, written {a mathematical formula}MEp,w1⊨□a¬□bp. In our example Alice holds the king, so {a mathematical formula}w1 is the actual state of the world while {a mathematical formula}w2 is an alternative that the agents consider possible.
      </paragraph>
      <paragraph>
       In this setting, a public announcement represents any event that is publicly observed and that provides agents with more information. In particular, because it is publicly observed, all agents receive the same information. An example of a public announcement is a literal announcement that is made in public by a trusted source. Claire could walk in, look at both cards and state that “Alice has the king.” But there are also other events that, while not literally being announcements, have the same effect. For example, Alice could turn her card, and place it face up on the table. Note that when Alice does this, all agents receive the same information: they learn that p is true.
      </paragraph>
      <paragraph>
       In the model, the effect of a public announcement is quite simple: if φ is announced then all worlds that do not satisfy φ are removed, as well as all arrows that point to such worlds. In the example, if Alice turns her card face up the model {a mathematical formula}MEp is changed to the model {a mathematical formula}MEp⁎p, which is shown in Fig. 2. In this updated model only one world remains. In this world p holds, so both agents know that p. This makes sense: Alice just turned her card face up so obviously both agents now know that she has the king. We denote this by {a mathematical formula}MEp,w1⊨[p](□ap∧□bp), which can be read as “after p is announced, a and b know that p.”
      </paragraph>
      <paragraph>
       A formula φ holds after an arbitrary public announcement, written {a mathematical formula}[!]φ, if for every ψ, we have {a mathematical formula}[ψ]φ. The dual, {a mathematical formula}〈!〉φ, denotes that for some ψ, it holds that {a mathematical formula}[ψ]φ. In our example, we have for instance that after all announcements Bob considers it possible that Alice has the king of spades, and there is no announcement after which Alice learns her card while Bob does not:{a mathematical formula}
      </paragraph>
      <paragraph>
       Public announcements are very useful for modeling events that are observed by all agents. But they cannot model more complicated events. For these more complicated events we could instead turn to the extremely powerful action models [7]. Unfortunately, the great power of action models comes with a significant cost: the model checking problem for public announcement logic can be solved in polynomial time [11, Lemma 29], whereas the model checking problem for a logic with event models is PSPACE-complete [4].{sup:2} Additionally, the increased power of action models requires a more complicated syntax, making them harder for humans to read and understand. Arrow updates fit in between: they are capable of modeling more events than public announcements—if not as many as action models—but their model checking problem can still be solved in polynomial time, as shown in [25]. Switching from public announcements to arrow updates does, however, still come with some cost: arrow updates are harder for humans to read and understand than public announcements, even though they are still easier to read than action models.
      </paragraph>
      <paragraph>
       The kind of events that can be modeled by arrow updates are sometimes referred to as semi-private announcements. Like public announcements, semi-private announcements are events where agents learn new information. But unlike public announcements, this new information need not become available to all agents. However, while the new information can be private, the procedure or protocol through which the agents gain information is publicly known. It is this combination of private information and a public protocol that gives semi-private announcements their name.
      </paragraph>
      <paragraph>
       Returning to our card scenario, suppose that instead of turning her card face up, Alice openly looks at her card without showing it to Bob. By doing this, Alice learns that she holds the king. Her action cannot be modeled as a public announcement, because the new information is not given to all agents. It can, however, be modeled as a semi-private announcement: Alice looking at her card can be seen as a run of the protocol “if Alice holds the king then she learns she has the king, if Alice holds the ace she learns that she has the ace.” Bob does not learn that Alice holds the king, but he does know that the protocol has been executed. We can represent this semi-private announcement as the arrow update {a mathematical formula}UEp:=(p,a,p),(¬p,a,¬p),(⊤,b,⊤). The triples in the arrow update are called clauses. A clause has the form (source, agent, target), and can be interpreted as “if source holds then agent learns that target holds.”{sup:3} Or perhaps it might be better to say that the agent learns that the target used to hold, as in some cases the very fact that the agent learns the truth of the target can make it false. For example, if a learns that the Moore sentence {a mathematical formula}p∧¬□ap holds, then {a mathematical formula}p∧¬□ap becomes false.
      </paragraph>
      <paragraph label="Remark 1">
       There is another, more technical, difference between public announcements and arrow updates that is worth mentioning. Public announcements are usually assumed to be truthful. There is no such assumption for arrow updates. While the information contained in an arrow update can, of course, be truthful, there is no technical restriction on arrow updates that guarantees truthfulness. So arrow updates can be used to model events that, accidentally or by design, convey incorrect information to an agent.Knowledge is, traditionally, assumed to be truthful. It might therefore be slightly more accurate to say that we are modeling the effect that events have on the agent's beliefs, rather than their knowledge.
      </paragraph>
      <paragraph>
       Recall that in order to apply a public announcement {a mathematical formula}[φ] in a Kripke model we removed all worlds that did not satisfy φ. In order to apply an arrow update we do something similar: an arrow {a mathematical formula}(w1,w2)∈R(a)satisfies a clause{a mathematical formula}(φ1,b,φ2) if and only if {a mathematical formula}w1 satisfies {a mathematical formula}φ1, {a mathematical formula}a=b and {a mathematical formula}w2 satisfies {a mathematical formula}φ2. When applying an arrow update we remove all arrows that do not satisfy any of the clauses in the update.{sup:4} Let us return to our example. If we apply the update {a mathematical formula}UEp=(p,a,p),(¬p,a,¬p),(⊤,b,⊤) to the model {a mathematical formula}MEp we obtain the model shown in Fig. 3. All arrows for b are retained, because they satisfy {a mathematical formula}(⊤,b,⊤). The arrow for a from {a mathematical formula}w1 to itself satisfies {a mathematical formula}(p,a,p) and the arrow for a from {a mathematical formula}w2 to itself satisfies {a mathematical formula}(¬p,a,¬p), so both are retained. The arrows for a between {a mathematical formula}w1 and {a mathematical formula}w2 satisfy none of the clauses, so they are removed. Note that in {a mathematical formula}MEp⁎UEp Alice knows which card she holds and Bob knows that Alice knows this, but Bob does not know which card Alice holds. This is exactly as it should be, since Alice looked at her card openly but without showing it to Bob. Similar to public announcements, we use {a mathematical formula}MEp,w1⊨[UEp]ψ to denote “after {a mathematical formula}UEp has happened, ψ holds.” In our particular example, we have for instance {a mathematical formula}MEp,w1⊨[UEp](□ap∧¬□bp).
      </paragraph>
      <paragraph>
       It should now be clear how the quantified construct {a mathematical formula}[↕]φ reads, namely that φ holds for every arrow update U.{sup:5} We use {a mathematical formula}〈↕〉 as a dual of {a mathematical formula}[↕], so {a mathematical formula}〈↕〉φ holds if and only if there is some U such that {a mathematical formula}[U]φ. In the epistemic interpretation, {a mathematical formula}〈↕〉φ means “there is some semi-private announcement U that will make φ true.” A typical example is {a mathematical formula}〈↕〉(□ap∧¬□bp), which can be read as “it is possible to semi-privately inform a that p is true, without informing b.” Indeed, for our example we have:{a mathematical formula} The reader should compare (1) with (2). With public announcements and arbitrary public announcements, we can only remove access to a world for all agents at the same time, by removing the world entirely. Using arrow updates and arbitrary arrow updates, we can more subtly just remove access between two worlds for some agents, while leaving it intact for others. In words: using announcements in {a mathematical formula}MEp, the two agents that start out knowing the same will always know the same, while using arrow updates, it is possible to reach a situation in which the two agents have different knowledge.
      </paragraph>
     </section>
     <section label="2.2">
      <section-title>
       The normative interpretation
      </section-title>
      <paragraph>
       In the normative interpretation, we interpret arrows not as uncertainty but as the agents' ability to act; There is an a-arrow from {a mathematical formula}w1 to {a mathematical formula}w2 if and only if in {a mathematical formula}w1 there is some action agent a can take that would change the state of the world from {a mathematical formula}w1 to {a mathematical formula}w2. So we have {a mathematical formula}□aφ if and only if φ will be true after every (single) action by a. Let us consider an example. Alice and Bob are together in the office, working late. Both need to use the printer, but printer time is a limited resource: there is only enough time to print two files. At each point in time, either Alice has control of the printer (p) or Bob has control {a mathematical formula}(¬p). The person in control of the printer can choose to print their own file, or they can print the other agent's file. If they print the other's file, then by doing so they also transfer control. If Alice has finished printing her file we represent this by {a mathematical formula}fa, and if Bob has finished printing his file we represent that by {a mathematical formula}fb. This situation can be represented by the model {a mathematical formula}MNo shown in Fig. 4.
      </paragraph>
      <paragraph>
       In this example, like in most other situations, some of the available actions are more desirable than others. Ideally, both agents get the opportunity to print their files, so in {a mathematical formula}w2 Alice should not keep control of the printer to herself, and in {a mathematical formula}w3 Bob should not keep control to himself. The division of actions into “good” actions and “bad” actions can be referred to as a norm.{sup:6}
      </paragraph>
      <paragraph>
       In the normative interpretation, arrows in a Kripke model represent actions. Arrow updates allow us to specify a subset of the arrows, which we can interpret as those actions that are allowed. Returning to our example, the norm that agents should not keep the printer to themselves if they have finished printing their file can be represented by the arrow update {a mathematical formula}UNo:=(¬fa,a,⊤),(fa,a,fb),(¬fb,b,⊤),(fb,b,fa).{sup:7} If we apply {a mathematical formula}UNo to {a mathematical formula}MNo we get the model shown in Fig. 5. In the updated model we only consider those actions that are not only possible but also allowed. Writing □φ for {a mathematical formula}□aφ∧□bφ, we have {a mathematical formula}MNo⁎UNo,w1⊨□□(fa∧fb), which is equivalent to {a mathematical formula}MNo,w1⊨[UNo]□□(fa∧fb). The latter can be read as “if everyone obeys the norm {a mathematical formula}UNo then in two times steps {a mathematical formula}fa∧fb is guaranteed to hold.” Readers familiar with the literature on Normative Systems may also note that the normative interpretation of arrow updates is in some ways very similar to Normative Temporal Logic, see for example [3].
      </paragraph>
      <paragraph>
       In the normative interpretation, {a mathematical formula}[U]φ means “if everyone obeys the norm U, then φ will hold.” As such, {a mathematical formula}〈↕〉φ means “there is some norm/rule/protocol/law that, if obeyed, will guarantee the truth of φ.” Returning to the example given above, {a mathematical formula}〈↕〉□□(fa∧fb) means “there is some rule that, if followed, would guarantee that both files get printed. We saw that {a mathematical formula}[UNo]□□(fa∧fb) holds in {a mathematical formula}MNo,w1, so {a mathematical formula}〈↕〉□□(fa∧fb) holds there as well.
      </paragraph>
      <paragraph label="Remark 2">
       Recall that, in the epistemic interpretation, arrow updates are not necessarily truthful. Semantically, this means that there is no guarantee that an arrow from a state to itself will be retained. In the normative interpretation, this property means that a norm U does not necessarily allow agents to remain in the same state—i.e. to do nothing. So arrow updates can be used to formalize norms that require agents to take action.
      </paragraph>
      <paragraph>
       In sum, using logics for arrow updates, one can reason about the result of removing certain transitions from a model. This can be used to reason about ethics, rationality or planning. One interesting line of research (that we will not pursue further in this paper, but see [24] for some preliminary results), would be to enhance the capability of AAUL to reason about planning by adding more temporal operators. For example, we could use the CTL operators AG (“on every path, at all times in the future”) and AF (“on every path, at some time in the future”) to represent properties like liveness, fairness and safety in concurrent processes (see for instance [30]). Let good represent some kind of desirable state, bad an undesirable state, {a mathematical formula}eni the fact that agent i is enabled and {a mathematical formula}exi the fact that agent i is allowed to execute. Then we can define {a mathematical formula}live:=AGAFgood, {a mathematical formula}fair:=⋀i(AGAFeni→AGAF(eni∧exi)) and {a mathematical formula}safe:=AG¬bad. The formula {a mathematical formula}[U](live∧fair∧safe) then means “the protocol U guarantees liveness, fairness and safety.” As such, {a mathematical formula}〈↕〉(live∧fair∧safe) expresses that there is a way to constrain the overall system such that the desirable properties hold.
      </paragraph>
     </section>
    </section>
    <section label="3">
     <section-title>
      Language and semantics
     </section-title>
     <paragraph>
      In this paper we compare AAUL to a number of other logics. For the sake of brevity we only give full definitions for some of these logics. In addition to AAUL we give definitions for arbitrary public announcement logic (APAL), the fragments arrow update logic (AUL) and public announcement logic (PAL) of AAUL and APAL respectively and a basic epistemic logic (EL). For definitions of the other logics we refer to publications that do give a complete definition.
     </paragraph>
     <paragraph>
      This still leaves us with five logics to define. The most convenient way to do this is to consider them as fragments of one larger logic. This logic is a combination of APAL and AAUL, so we refer to it as APAUL. Let A be a nonempty finite set of agents and P a countably infinite set of propositional variables.
     </paragraph>
     <paragraph label="Definition 1">
      LanguagesThe language {a mathematical formula}L(A,P) of APAUL consists of all formulas and updates given by the following BNF:{a mathematical formula} where {a mathematical formula}p∈P and {a mathematical formula}a∈A. We write L for {a mathematical formula}L(A,P) where this should not cause confusion.The language {a mathematical formula}LEL of epistemic logic is the fragment of L that does not contain the operators {a mathematical formula}[φ], {a mathematical formula}[U], {a mathematical formula}[!] and {a mathematical formula}[↕]. The language {a mathematical formula}LPAL of public announcement logic is the fragment of L that does not contain the operators {a mathematical formula}[U], {a mathematical formula}[!] and {a mathematical formula}[↕]. The language {a mathematical formula}LAPAL of arbitrary public announcement logic is the fragment of L that does not contain the operators {a mathematical formula}[U] and {a mathematical formula}[↕]. The language {a mathematical formula}LAUL of arrow update logic is the fragment of L that does not contain the operators {a mathematical formula}[φ], {a mathematical formula}[!] and {a mathematical formula}[↕]. The language {a mathematical formula}LAAUL of arbitrary arrow update logic is the fragment of L that does not contain the operators {a mathematical formula}[φ] and {a mathematical formula}[!].
     </paragraph>
     <paragraph>
      We use {a mathematical formula}∨,→,↔,⊤,⊥,⋀ and ⋁ in the usual way as abbreviations, and we abuse notation slightly by identifying the list {a mathematical formula}U=(φ1,a1,ψ1),⋯,(φn,an,ψn) with the set {a mathematical formula}U={(φ1,a1,ψ1),⋯,(φn,an,ψn)}. Furthermore, we use {a mathematical formula}◊a, {a mathematical formula}〈φ〉, {a mathematical formula}〈U〉, {a mathematical formula}〈!〉 and {a mathematical formula}〈↕〉 as abbreviations for {a mathematical formula}¬□a¬, {a mathematical formula}¬[φ]¬, {a mathematical formula}¬[U]¬, {a mathematical formula}¬[!]¬ and {a mathematical formula}¬[↕]¬. Finally, if {a mathematical formula}B={a1,⋯,an} we write {a mathematical formula}(φ,B,ψ) for {a mathematical formula}(φ,a1,ψ),⋯,(φ,an,ψ).
     </paragraph>
     <paragraph>
      These languages are all interpreted on Kripke models.
     </paragraph>
     <paragraph label="Definition 2">
      A Kripke model M is a triple {a mathematical formula}(W,R,V) where
     </paragraph>
     <list>
      <list-item label="•">
       {a mathematical formula}W≠∅ is a set of worlds,
      </list-item>
      <list-item label="•">
       {a mathematical formula}R:A→℘(W×W) assigns an accessibility relation to each {a mathematical formula}a∈A and
      </list-item>
      <list-item label="•">
       {a mathematical formula}V:P→℘(W) is a valuation.
      </list-item>
     </list>
     <paragraph>
      We can now define the semantics of APAUL. The other logics simply inherit their semantics from APAUL.
     </paragraph>
     <paragraph label="Definition 3">
      Let {a mathematical formula}M=(W,R,V) be a Kripke model and let {a mathematical formula}w∈W. The satisfaction relation ⊨ is given inductively as follows.{a mathematical formula} where {a mathematical formula}(M⁎ψ) and {a mathematical formula}(M⁎U) are given by:{a mathematical formula} A formula φ is true on M, denoted {a mathematical formula}M⊨φ, if {a mathematical formula}M,w⊨φ for all {a mathematical formula}w∈W. A formula φ is valid, denoted ⊨φ, if {a mathematical formula}M⊨φ for every Kripke model M. A formula φ is valid on S5, denoted {a mathematical formula}⊨S5φ, if {a mathematical formula}M⊨φ for every S5 model M.
     </paragraph>
     <paragraph label="Remark 4">
      The main reason why arrow updates do not preserve S5 is that, as discussed above, they are not guaranteed to be truthful.
     </paragraph>
     <paragraph>
      Now that we have defined the semantics of AAUL, let us consider a few equivalences that will be useful later.
     </paragraph>
     <paragraph label="Lemma 1">
      For every pointed model{a mathematical formula}M,w, every{a mathematical formula}p∈P, every{a mathematical formula}a∈Aand every{a mathematical formula}φ,ψ,U,U′∈LAAULwe have{a mathematical formula}where{a mathematical formula}U×U′={(ψ1∧[U]ψ2,a,χ1∧[U]χ2)|(ψ1,a,χ1)∈U,(ψ2,a,χ2)∈U′}.
     </paragraph>
     <paragraph label="Proof">
      The first three statements are easy to prove. Arrow updates do not change the valuation of a model, so {a mathematical formula}M,w⊨[U]p if and only if {a mathematical formula}M,w⊨p. Arrow updates commute with negation because {a mathematical formula}M,w⊨[U]¬φ⇔(M⁎U),w⊨¬φ⇔(M⁎U),w⊭φ⇔M,w⊭[U]φ⇔M,w⊨¬[U]φ. Arrow updates distribute over conjunctions because {a mathematical formula}M,w⊨[U](φ∧ψ)⇔(M⁎U),w⊨φ∧ψ⇔(M⁎U),w⊨φ and M,w⊨ψ⇔M,w⊨[U]φ and M,w⊨[U]ψ⇔M,w⊨[U]φ∧[U]ψ.The last two statements require slightly more work to prove. We have {a mathematical formula}M,w⊨[U]□aφ⇔(M⁎U),w⊨□aφ⇔(M⁎U),w′⊨φ for all {a mathematical formula}w′ that are a-accessible from {a mathematical formula}w′ in {a mathematical formula}M⁎U. Note that we have {a mathematical formula}(M⁎U),w′⊨φ⇔M,w′⊨[U]φ. So {a mathematical formula}M,w⊨[U]□aφ⇔M,w′⊨[U]φ for all {a mathematical formula}w′ that are a-accessible from w in {a mathematical formula}M⁎U. The trick is now to determine which worlds {a mathematical formula}w′ are a-accessible from w in {a mathematical formula}M⁎U, so for which {a mathematical formula}w′ we must have {a mathematical formula}M,w′⊨[U]φ in order to have {a mathematical formula}M,w⊨[U]□aφ.Consider any clause {a mathematical formula}(ψ,a,χ)∈U. If {a mathematical formula}M,w⊨ψ then every a-successor {a mathematical formula}w′ of w that satisfies χ is an a-successor of w in {a mathematical formula}M⁎U. The formula {a mathematical formula}[U]φ holds in all these worlds if and only if {a mathematical formula}M,w⊨ψ→□a(χ→[U]φ). We then only have to repeat this for every {a mathematical formula}(ψ,a,χ)∈U: we have {a mathematical formula}M,w⊨[U]□aφ if and only if {a mathematical formula}M,w⊨⋀(ψ,a,χ)∈U(ψ→□a(χ→[U]φ)).Finally, in order to determine when we have {a mathematical formula}M,w⊨[U][U′]φ we must determine which arrows are retained if we apply {a mathematical formula}[U] and {a mathematical formula}[U′] after each other. An arrow is retained by the first update {a mathematical formula}[U] if and only if it satisfies some clause {a mathematical formula}(ψ1,a,χ1)∈U. In order for this arrow to be retained by {a mathematical formula}U′ as well, it must additionally satisfy some clause {a mathematical formula}(ψ2,a,χ2). But it must satisfy this {a mathematical formula}(ψ2,a,χ2) not in M but in {a mathematical formula}M⁎U. Such an arrow must therefore start in a {a mathematical formula}ψ1∧[U]ψ2 world, and go to a {a mathematical formula}χ1∧[U]χ2 world. In that case it satisfies the clause {a mathematical formula}(ψ1∧[U]ψ2,a,χ1∧[U]χ2). We have such a combined clause for every {a mathematical formula}(ψ1,a,χ1)∈U and every {a mathematical formula}(ψ2,a,χ2)∈U′, so {a mathematical formula}M,w⊨[U][U′]φ⇔M,w⊨[U×U′]φ where {a mathematical formula}U×U′={(ψ1∧[U]ψ2,a,χ1∧[U]χ2)|(ψ1,a,χ1)∈U,(ψ2,a,χ2)∈U′}.  □
     </paragraph>
     <paragraph>
      In later sections we will also use the notions of bisimulation and bisimulation contraction. The following definitions are as usual.
     </paragraph>
     <paragraph label="Definition 4">
      Let {a mathematical formula}M1=(W1,R1,V1) and {a mathematical formula}M2=(W2,R2,V2) be models and let B be a relation on {a mathematical formula}W1×W2. The relation B is a bisimulation on {a mathematical formula}M1 and {a mathematical formula}M2 if for all {a mathematical formula}(w1,w2)∈B, we have
      <list>
       for every {a mathematical formula}p∈P, {a mathematical formula}w1∈V1(p)⇔w2∈V2(p),for every {a mathematical formula}a∈A and every {a mathematical formula}w1′∈W1 such that {a mathematical formula}(w1,w1′)∈R1, there is a {a mathematical formula}w2′∈W2 such that {a mathematical formula}(w2,w2′)∈R2 and {a mathematical formula}(w1′,w2′)∈B andfor every {a mathematical formula}a∈A and every {a mathematical formula}w2′∈W2 such that {a mathematical formula}(w2,w2′)∈R2, there is a {a mathematical formula}w1′∈W1 such that {a mathematical formula}(w1,w1′)∈R2 and {a mathematical formula}(w1′,w2′)∈B.Two states
      </list>
      <paragraph>
       {a mathematical formula}w1∈W1 and {a mathematical formula}w2∈W2 are bisimilar, denoted {a mathematical formula}w1∼M1,M2w2, if there is a bisimulation B on {a mathematical formula}M1 and {a mathematical formula}M2 such that {a mathematical formula}(w1,w2)∈B.
      </paragraph>
     </paragraph>
     <paragraph label="Definition 5">
      We omit mentioning the models where this should not cause confusion, and write {a mathematical formula}w1∼w2 if the states are bisimilar. The following is a standard result, see any textbook or handbook on modal logic for details. Let{a mathematical formula}M1=(W1,R1,V1)and{a mathematical formula}M2=(W2,R2,V2)be models. The relation{a mathematical formula}∼⊆W1×W2is an equivalence relation, and it is a bisimulation on{a mathematical formula}M1and{a mathematical formula}M2. Furthermore, ∼ is the largest bisimulation on{a mathematical formula}M1and{a mathematical formula}M2.Let {a mathematical formula}M=(W,R,V) be a model. The bisimulation contraction of M is the model {a mathematical formula}MBC=(WBC,RBC,VBC) given by
     </paragraph>
     <list>
      <list-item label="•">
       {a mathematical formula}WBC:={[w]|w∈W}, where {a mathematical formula}[w]:={w′∈W|w∼w′},
      </list-item>
      <list-item label="•">
       for every {a mathematical formula}a∈A, {a mathematical formula}RBC(a)={([w],[w′])|(w,w′)∈R(a)} and
      </list-item>
      <list-item label="•">
       for every {a mathematical formula}p∈P, {a mathematical formula}VBC(p)={[w]|w∈V(p)}.
      </list-item>
     </list>
     <paragraph>
      It as another standard result that, for every {a mathematical formula}w∈W, we have {a mathematical formula}M,w∼M,MBCMBC,[w]. Furthermore, using the Paige–Tarjan algorithm{sup:9}[27], we can compute {a mathematical formula}MBC in polynomial time and linear space.
     </paragraph>
     <paragraph label="Proof">
      The relevance of bisimulation is that well-behaved modal logics tend to be invariant under bisimulation, i.e. if {a mathematical formula}w1∼w2 then any formula ϕ that holds in one of the states also hold in the other. AAUL is no exception. For every{a mathematical formula}ϕ∈LAAULand every{a mathematical formula}M1,w1and{a mathematical formula}M2,w2such that{a mathematical formula}w1∼w2, we have{a mathematical formula}M1,w1⊨ϕif and only if{a mathematical formula}M2,w2⊨ϕ.We first show that AUL is invariant under bisimulation. The proof is by induction on the construction of ϕ. The first clause of the definition of bisimilarity guarantees that {a mathematical formula}w1 and {a mathematical formula}w2 satisfy the same propositional variables. So if ϕ is atomic, we have {a mathematical formula}M1,w1⊨ϕ⇔M2,w2⊨ϕ. Suppose then as induction hypothesis that ϕ is not atomic and that the lemma holds for all strict subformulas of ϕ.We continue by case distinction on the main connective of ϕ. Most of the cases are as usual, so we do not discuss them in detail. The one relatively interesting case is {a mathematical formula}ϕ=[U]ϕ′.We first show that {a mathematical formula}∼M1,M2 is also a bisimulation relation on {a mathematical formula}M1⁎U and {a mathematical formula}M2⁎U. Take any {a mathematical formula}w1∈W1 and {a mathematical formula}w2∈W2 such that {a mathematical formula}w1∼M1,M2w2. The valuations of {a mathematical formula}M1⁎U and {a mathematical formula}M2⁎U are identical to that of {a mathematical formula}M1 and {a mathematical formula}M2, respectively, so {a mathematical formula}w1 and {a mathematical formula}w2 agree on propositional variables. Furthermore, take any {a mathematical formula}a∈A and any {a mathematical formula}w1′ such that {a mathematical formula}(w1,w1′)∈R1U(a). Then, in particular, {a mathematical formula}(w1,w1′)∈R1(a). Since {a mathematical formula}∼M1,M2 is a bisimulation, there is a {a mathematical formula}(w2,w2′)∈R1(a) such that {a mathematical formula}w1′∼M1,M2w2′.The arrow from {a mathematical formula}w1 to {a mathematical formula}w1′ is retained by the update U, so there is some clause {a mathematical formula}(ψ,a,ψ′)∈U such that {a mathematical formula}M1,w1⊨ψ and {a mathematical formula}M1,w1′⊨ψ′. By the induction hypothesis, and the facts that {a mathematical formula}w1∼M1,M2w2 and {a mathematical formula}w1′∼M1,M2w2′, it follows that {a mathematical formula}M2,w2⊨ψ and {a mathematical formula}M2,w2′⊨ψ′. So the arrow from {a mathematical formula}w2 to {a mathematical formula}w2′ matches the clause {a mathematical formula}(ψ,a,ψ′) is retained by U. It follows that {a mathematical formula}(w2,w2′)∈R2U(a) and {a mathematical formula}(w1′,w2′)∈∼M1,M2.By similar reasoning, for every {a mathematical formula}w2′ such that {a mathematical formula}(w2,w2′)∈R2⁎U(a) there is some {a mathematical formula}w1′ such that {a mathematical formula}(w1,w1′)∈R1⁎U(a) and {a mathematical formula}w1′∼M1,M2w2′. So {a mathematical formula}∼M1,M2 is a bisimulation not only on {a mathematical formula}M1 and {a mathematical formula}M2, but also on {a mathematical formula}M1⁎U and {a mathematical formula}M2⁎U. By the induction hypothesis it follows that {a mathematical formula}M1⁎U,w1⊨ϕ′ if and only if {a mathematical formula}M2⁎U,w2⊨ϕ′, and therefore {a mathematical formula}M1,w1⊨[U]ϕ′ if and only if {a mathematical formula}M2,w2⊨[U]ϕ′, which was to be shown.Now that we have shown that AUL is invariant under bisimulation, we can show that AAUL is also invariant under bisimulation. The proof is again by induction and by case distinction on the main connective. The only new case is {a mathematical formula}ϕ=[↕]ϕ′, so we omit the other cases.Let {a mathematical formula}w1∼w2. For every {a mathematical formula}U∈LAUL, we have {a mathematical formula}M1,w1⊨[U]ϕ′ if and only if {a mathematical formula}M2,w2⊨[U]ϕ′. It follows immediately that {a mathematical formula}M1,w1⊨[↕]ϕ′ if and only if {a mathematical formula}M2,w2⊨[↕]ϕ′.  □
     </paragraph>
     <paragraph>
      So bisimilar states are indistinguishable. In general it is not the case that every two non-bisimilar states are distinguishable, but for finite models it is the case.
     </paragraph>
     <paragraph label="Lemma 4">
      Let{a mathematical formula}M1=(W1,R1,V1)and{a mathematical formula}M2=(W2,R2,V2)be finite models. For any{a mathematical formula}w1∈W1and{a mathematical formula}w2∈W2such that{a mathematical formula}w1≁w2, there is a{a mathematical formula}ϕ∈LAULsuch that{a mathematical formula}M1,w1⊨ϕand{a mathematical formula}M2,w2⊭ϕ.
     </paragraph>
     <paragraph>
      It is a standard result that the above lemma holds for basic modal logic (which we referred to as EL here). Since {a mathematical formula}LEL⊆LAUL it follows immediately that the lemma holds for AUL as well.
     </paragraph>
    </section>
    <section label="4">
     <section-title>
      Expressivity
     </section-title>
     <paragraph>
      In this section we investigate the expressive power of the newly defined arbitrary arrow update logic relative to arbitrary public announcement logic and a number of other well-known logics in (dynamic) epistemic logic.
     </paragraph>
     <paragraph label="Definition 6">
      ExpressivityLet two logical languages {a mathematical formula}L1 and {a mathematical formula}L2 and a class of structures C be given. If for every formula {a mathematical formula}φ∈L1 there is a {a mathematical formula}ψ∈L2 such that φ and ψ are equivalent on C, we say that {a mathematical formula}L2 is at least as expressive as {a mathematical formula}L1 on C, notation: {a mathematical formula}L1⪯CL2 (and {a mathematical formula}L1⪯̸CL2 if this is not the case). If the converse also holds, {a mathematical formula}L1 and {a mathematical formula}L2 are equally expressive on C, notation {a mathematical formula}L1≡CL2. If the converse does not hold, {a mathematical formula}L2 is strictly more expressive than {a mathematical formula}L1, notation {a mathematical formula}L1≺CL2. When both {a mathematical formula}L1⪯̸CL2 and {a mathematical formula}L2⪯̸CL1 then {a mathematical formula}L1 and {a mathematical formula}L2 are expressively incomparable on C, notation: {a mathematical formula}L1∥CL2. We omit the subscript C if C is the class of all Kripke models.
     </paragraph>
     <section label="4.1">
      <section-title>
       APAL and AAUL are incomparable in expressivity
      </section-title>
      <paragraph>
       In this subsection we prove that {a mathematical formula}LAPAL∥LAAUL. This proof will be significantly easier to understand if we first describe the general structure of the proof, without considering most of the technical details.
      </paragraph>
      <paragraph>
       Let {a mathematical formula}Upd! and let {a mathematical formula}Upd↕ be the set of updates quantified over by {a mathematical formula}〈!〉 and {a mathematical formula}〈↕〉 respectively.{sup:10} Now take any {a mathematical formula}ψ∈Upd!. PAL and AUL are both equally expressive as EL [7], [22], so in particular PAL and AUL are equally expressive as each other. As such, there is a formula {a mathematical formula}ψ′∈LAUL that is equivalent to ψ. Let {a mathematical formula}Uψ:=(⊤,A,ψ′), and note that {a mathematical formula}Uψ∈Upd↕. The public announcement {a mathematical formula}〈ψ〉 removes all worlds that do not satisfy ψ. The arrow update {a mathematical formula}〈Uψ〉 does not remove any worlds, but does eliminate all arrows to worlds that do not satisfy {a mathematical formula}ψ′ (which is equivalent to ψ). Inaccessible worlds might as well not exist, so removing all arrows to a world has essentially the same effect as removing the world entirely: whenever {a mathematical formula}(M⁎ψ),w exists,{sup:11} it is bisimilar to {a mathematical formula}(M⁎Uψ),w.
      </paragraph>
      <paragraph>
       On the other hand, for some {a mathematical formula}U∈Upd↕ and {a mathematical formula}M,w there is no {a mathematical formula}ψ∈Upd! that makes {a mathematical formula}(M⁎U),w and {a mathematical formula}(M⁎ψ),w bisimilar.{sup:12} If we abuse notation by identifying ψ with {a mathematical formula}Uψ, we therefore have {a mathematical formula}Upd!⊂{a mathematical formula}Upd↕. In other words, {a mathematical formula}〈↕〉 quantifies over a strictly larger set than {a mathematical formula}〈!〉. Crucially, this quantification is “all or nothing”; in AAUL we can quantify over {a mathematical formula}Upd↕, by using {a mathematical formula}〈↕〉, but not over the smaller set {a mathematical formula}Upd!. For suitably chosen φ we would expect to find three kinds of pointed models:
      </paragraph>
      <list>
       <list-item label="1.">
        models {a mathematical formula}M1,w such that {a mathematical formula}M1,w⊭〈X〉φ for all {a mathematical formula}X∈Upd↕,
       </list-item>
       <list-item label="2.">
        models {a mathematical formula}M2,w such that {a mathematical formula}M2,w⊭〈X〉φ for all {a mathematical formula}X∈Upd! but {a mathematical formula}M2,w⊨〈X〉φ for some {a mathematical formula}X∈Upd↕,
       </list-item>
       <list-item label="3.">
        models {a mathematical formula}M3,w such that {a mathematical formula}M3,w⊨〈X〉φ for some {a mathematical formula}X∈Upd!.
       </list-item>
      </list>
      <paragraph>
       The AAUL formula {a mathematical formula}〈↕〉φ distinguishes between {a mathematical formula}M1,w and {a mathematical formula}M2,w, but not between {a mathematical formula}M2,w and {a mathematical formula}M3,w. The APAL formula {a mathematical formula}〈!〉φ on the other hand distinguishes between {a mathematical formula}M2,w and {a mathematical formula}M3,w, but not between {a mathematical formula}M1,w and {a mathematical formula}M2,w. At this point we cannot guarantee that there is no {a mathematical formula}ψ1∈LAAUL that distinguishes between {a mathematical formula}M2,w and {a mathematical formula}M3,w, or that there is no {a mathematical formula}ψ2∈LAPAL that distinguishes between {a mathematical formula}M1,w and {a mathematical formula}M2,w. But, because AAUL cannot quantify over {a mathematical formula}Upd! and APAL cannot quantify over {a mathematical formula}Upd↕, there is no reason to assume that such {a mathematical formula}ψ1 and/or {a mathematical formula}ψ2 exist. As such, we would expect there to be no APAL formula equivalent to {a mathematical formula}〈↕〉φ (which implies that {a mathematical formula}LAAUL⪯̸LAPAL) and no AAUL formula equivalent to {a mathematical formula}〈!〉φ (which implies that {a mathematical formula}LAPAL⪯̸LAAUL).
      </paragraph>
      <paragraph>
       The method we use to show that {a mathematical formula}LAPAL∥LAAUL is inspired by the considerations described above, but with one difference. Instead of three models {a mathematical formula}M1, {a mathematical formula}M2 and {a mathematical formula}M3, we use three sets {a mathematical formula}{M1x|x∈P∖{p}}, {a mathematical formula}{M2x|x∈P∖{p}} and {a mathematical formula}{M3x|x∈P∖{p}}.
      </paragraph>
      <paragraph label="Definition 7">
       For {a mathematical formula}x∈P∖{p} the model {a mathematical formula}M1x=(W1,R1,V1x) is given by
      </paragraph>
      <list>
       <list-item label="•">
        {a mathematical formula}W1={w1,w2},
       </list-item>
       <list-item label="•">
        {a mathematical formula}R1(a)={(w1,w2)}∪{(w1,w1)},
       </list-item>
       <list-item label="•">
        {a mathematical formula}R1(b)=∅ for all {a mathematical formula}b≠a,
       </list-item>
       <list-item label="•">
        {a mathematical formula}V1x(p)={w1},
       </list-item>
       <list-item label="•">
        {a mathematical formula}V1x(q)=∅ for all {a mathematical formula}q≠p.
       </list-item>
      </list>
      <paragraph label="Definition 8">
       For {a mathematical formula}x∈P∖{p}, the model {a mathematical formula}M2x=(W2,R2,V2x) is given by
      </paragraph>
      <list>
       <list-item label="•">
        {a mathematical formula}W2={w1,w2,w3},
       </list-item>
       <list-item label="•">
        {a mathematical formula}R1(a)={(w1,w2),(w3,w2),(w1,w3),(w3,w1)}∪{(w1,w1),(w3,w3)},
       </list-item>
       <list-item label="•">
        {a mathematical formula}R1(b)=∅ for all {a mathematical formula}b≠a,
       </list-item>
       <list-item label="•">
        {a mathematical formula}V2x(p)={w1,w3},
       </list-item>
       <list-item label="•">
        {a mathematical formula}V2x(x)={w3},
       </list-item>
       <list-item label="•">
        {a mathematical formula}V2x(q)=∅ for all {a mathematical formula}q∉{p,x}.
       </list-item>
      </list>
      <paragraph label="Definition 9">
       For {a mathematical formula}x∈P∖{p}, the model {a mathematical formula}M3x=(W3,R3,V3x) is given by
      </paragraph>
      <list>
       <list-item label="•">
        {a mathematical formula}W3={w1,w2,w3,w4},
       </list-item>
       <list-item label="•">
        {a mathematical formula}R1(a)={(w1,w2),(w3,w4),(w1,w3),(w3,w1)}∪{(w1,w1),(w3,w3)},
       </list-item>
       <list-item label="•">
        {a mathematical formula}R1(b)=∅ for all {a mathematical formula}b≠a,
       </list-item>
       <list-item label="•">
        {a mathematical formula}V3x(p)={w1,w3},
       </list-item>
       <list-item label="•">
        {a mathematical formula}V3x(x)={w3,w4},
       </list-item>
       <list-item label="•">
        {a mathematical formula}V3x(q)=∅ for all {a mathematical formula}q∉{p,x}.
       </list-item>
      </list>
      <paragraph>
       The reason for using {a mathematical formula}w3 as an alias for {a mathematical formula}w1 and {a mathematical formula}w4 as an alias for {a mathematical formula}w2 is that it allows us to succinctly point out the similarities between the models; there is an arrow from {a mathematical formula}wi to {a mathematical formula}wj ({a mathematical formula}i,j∈{1,2,3,4}) in one of the models if and only if there is such an arrow in the other models.
      </paragraph>
      <paragraph>
       Let {a mathematical formula}ϕ1:=□ap∧◊a¬□ap. We first show that {a mathematical formula}M1x,w1⊭〈↕〉ϕ1, {a mathematical formula}M2x,w1⊨〈↕〉ϕ1, {a mathematical formula}M2x,w1⊭〈!〉ϕ1 and {a mathematical formula}M3x,w1⊨〈!〉ϕ1 for all {a mathematical formula}x∈P∖{p}. After that, we show that there is no APAL formula that distinguishes between {a mathematical formula}M1x,w1 and {a mathematical formula}M2x,w1 for all {a mathematical formula}x∈P∖{p}, and that there is no AAUL formula that distinguishes between {a mathematical formula}M2x,w1 and {a mathematical formula}M3x,w1 for all {a mathematical formula}x∈P∖{p}. This suffices to show that there is no APAL formula equivalent to {a mathematical formula}〈↕〉ϕ1 and no AAUL formula equivalent to {a mathematical formula}〈!〉ϕ1, which implies that {a mathematical formula}LAPAL∥LAAUL.
      </paragraph>
      <paragraph label="Proof">
       For every{a mathematical formula}x∈P∖{p}we have{a mathematical formula}M1x,w1⊭〈↕〉ϕ1,{a mathematical formula}M2x,w1⊨〈↕〉ϕ1,{a mathematical formula}M2x,w1⊭〈!〉ϕ1and{a mathematical formula}M3x,w1⊨〈!〉ϕ1.Recall that {a mathematical formula}ϕ1=□ap∧◊a¬□ap. Let {a mathematical formula}Ux:=(p,a,p),(x∨¬p,a,⊤) and {a mathematical formula}ψx:=p∨x. Then {a mathematical formula}M2x⁎Ux and {a mathematical formula}M3x⁎ψx are as shown in Fig. 9. We have {a mathematical formula}(M2x⁎Ux),w1⊨ϕ1 and {a mathematical formula}(M3x⁎ψx),w1⊨ϕ1, which implies that {a mathematical formula}M2x,w1⊨〈Ux〉ϕ1 and {a mathematical formula}M3x,w1⊨〈ψx〉ϕ1. Because {a mathematical formula}Ux∈LAUL and {a mathematical formula}ψx∈LPAL this, in turn, implies that {a mathematical formula}M2x,w1⊨〈↕〉ϕ1 and {a mathematical formula}M3x,w1⊨〈!〉ϕ1.Left to show is that {a mathematical formula}M1x,w1⊭〈↕〉ϕ1 and {a mathematical formula}M2x,w1⊭〈!〉ϕ1. In order for any pointed model to satisfy {a mathematical formula}ϕ1 there must be at least two p-worlds in the model: one that satisfies {a mathematical formula}□ap and one that satisfies {a mathematical formula}¬□ap. The model {a mathematical formula}M1x has only one p-world and arrow updates cannot add worlds. So for every arrow update U we have {a mathematical formula}M1x,w1⊭〈U〉ϕ1. This implies that {a mathematical formula}M1x,w1⊭〈↕〉ϕ1.Now suppose towards a contradiction that there is some {a mathematical formula}ψ∈LPAL such that {a mathematical formula}M2x,w1⊨〈ψ〉ϕ1. In order for {a mathematical formula}ϕ1 to hold in {a mathematical formula}(M2x⁎ψ),w1 there must be at least two p-worlds in {a mathematical formula}M2x⁎ψ. This means that both {a mathematical formula}w1 and {a mathematical formula}w3 must be retained by the update {a mathematical formula}〈ψ〉. Furthermore, {a mathematical formula}w3 must satisfy {a mathematical formula}¬□ap so {a mathematical formula}w2 must also be retained. But then {a mathematical formula}(M2x⁎ψ),w1⊭□ap, contradicting the assumption that {a mathematical formula}M2x,w1⊨〈ψ〉ϕ1. We therefore have {a mathematical formula}M2x,w1⊭〈ψ〉ϕ1 for every {a mathematical formula}ψ∈LPAL, which implies that {a mathematical formula}M2x,w1⊭〈!〉ϕ1.  □
      </paragraph>
      <paragraph>
       It remains to be shown that APAL cannot distinguish between {a mathematical formula}M1x,w1 and {a mathematical formula}M2x,w1, and that AAUL cannot distinguish between {a mathematical formula}M2x,w1 and {a mathematical formula}M3x,w1. The proofs of these claims are by induction, but there is one complication: due to the update modalities our induction hypothesis has to apply not only to {a mathematical formula}Mi and {a mathematical formula}Mj, but also to certain submodels of {a mathematical formula}Mi and {a mathematical formula}Mj. We call these submodels APAL-equivalent and AAUL-equivalent.
      </paragraph>
      <paragraph label="Definition 10">
       Let {a mathematical formula}N1x=(WN1,RN1,VN1) and {a mathematical formula}N2x=(WN2,RN2,VN2) be submodels of {a mathematical formula}M1x and {a mathematical formula}M2x respectively. We say that {a mathematical formula}N1x and {a mathematical formula}N2x are APAL-equivalent if
      </paragraph>
      <list>
       <list-item label="•">
        {a mathematical formula}N1x and {a mathematical formula}N2x can be obtained from {a mathematical formula}M1x and {a mathematical formula}M2x respectively by a finite sequence of public announcements,
       </list-item>
       <list-item label="•">
        for every {a mathematical formula}i∈{1,2,3} we have {a mathematical formula}wi∈WN1 if and only if {a mathematical formula}wi∈WN2.
       </list-item>
      </list>
      <paragraph>
       Note that public announcements only remove arrows that go to or from a world that is removed. As a result, two APAL-equivalent models {a mathematical formula}N1x and {a mathematical formula}N2x also have the property that {a mathematical formula}(wi,wj)∈RN1 if and only if {a mathematical formula}(wi,wj)∈RN2 (for all {a mathematical formula}i,j∈{1,2,3}).
      </paragraph>
      <paragraph label="Proof">
       Let{a mathematical formula}N1x=(WN1,RN1,VN1)and{a mathematical formula}N2x=(WN2,RN2,VN2)be submodels of{a mathematical formula}M1xand{a mathematical formula}M2xrespectively that are APAL-equivalent, let{a mathematical formula}φ∈LAPALand suppose{a mathematical formula}x∈P∖{p}is a propositional variable that does not occur in φ. Then for every{a mathematical formula}i∈{1,2,3}, if{a mathematical formula}wi∈WN1then φ does not distinguish between{a mathematical formula}N1x,wiand{a mathematical formula}N2x,wi.Fix any {a mathematical formula}i∈{1,2,3} such that {a mathematical formula}wi∈WN1 (and therefore also {a mathematical formula}wi∈WN2). We show by induction that φ does not distinguish between {a mathematical formula}N1x,wi and {a mathematical formula}N2x,wi.As base case, suppose that {a mathematical formula}φ∈P. The pointed models {a mathematical formula}N1x,wi and {a mathematical formula}M2x,wi agree on all propositional variables other than x. By assumption φ does not contain x, so it does not distinguish between those worlds.As induction hypothesis, assume that {a mathematical formula}φ∉P and that the lemma holds for all subformulas of φ. If a Boolean combination distinguishes between two worlds then so does at least one of the combined formulas, so we can assume without loss of generality that the main connective of φ is not Boolean. Furthermore, there are only arrows for agent a so we can assume without loss of generality that every {a mathematical formula}□b operator has {a mathematical formula}a=b. This means that φ is of the form {a mathematical formula}□aφ′, {a mathematical formula}[φ′]φ″ or {a mathematical formula}[!]φ′ for some {a mathematical formula}φ′,φ″∈LAPAL.
      </paragraph>
      <list>
       <list-item label="•">
        Suppose {a mathematical formula}φ=□aφ′. The models {a mathematical formula}N1x,wi and {a mathematical formula}N2x,wi are APAL-equivalent, so a world {a mathematical formula}wj is accessible from {a mathematical formula}wi in {a mathematical formula}N1x if and only if it is accessible in {a mathematical formula}N2x. In order for φ to distinguish between {a mathematical formula}N1x,wi and {a mathematical formula}N2x,wi it is therefore necessary that {a mathematical formula}φ′ distinguishes between {a mathematical formula}N2x,wj and {a mathematical formula}N3x,wj for some {a mathematical formula}wj. That would contradict the induction hypothesis, so φ does not distinguish between {a mathematical formula}N1x,wi and {a mathematical formula}N2x,wi.
       </list-item>
       <list-item label="•">
        Suppose {a mathematical formula}φ=[φ′]φ″. We claim that {a mathematical formula}N1x⁎φ′ and {a mathematical formula}N2x⁎φ′ are APAL-equivalent. Suppose towards a contradiction that they are not APAL-equivalent. Then there is some world {a mathematical formula}wj from {a mathematical formula}N1x and {a mathematical formula}N2x that is retained in {a mathematical formula}N1x⁎φ′ but not in {a mathematical formula}N2x⁎φ′, or retained in {a mathematical formula}N2x⁎φ′ but not in {a mathematical formula}N1x⁎φ′. That means {a mathematical formula}φ′ must distinguish between {a mathematical formula}N1x,wj and {a mathematical formula}N2x,wj, contradicting the induction hypothesis. We have arrived at a contradiction, so our assumption that {a mathematical formula}N1x⁎φ′ and {a mathematical formula}N2x⁎φ′ are not APAL-equivalent must be wrong.It then follows from the induction hypothesis that {a mathematical formula}φ″ does not distinguish between {a mathematical formula}N1x⁎φ′,wi and {a mathematical formula}N2x⁎φ′,wi, which implies that φ does not distinguish between {a mathematical formula}N1x,wi and {a mathematical formula}N2x,wi.
       </list-item>
       <list-item label="•">
        Suppose {a mathematical formula}φ=[!]φ′. Every world in {a mathematical formula}N1x is uniquely identified by whether it satisfies p. Every world in {a mathematical formula}N2x is uniquely identified by whether it satisfies p and x: {a mathematical formula}w1 satisfies {a mathematical formula}p∧¬x, {a mathematical formula}w2 satisfies {a mathematical formula}¬p∧¬x and {a mathematical formula}w3 satisfies {a mathematical formula}p∧x. This means that for every formula {a mathematical formula}ψ∈LPAL there is some formula {a mathematical formula}ψ′∈LPAL such that, for every {a mathematical formula}j∈{1,2,3}, we have {a mathematical formula}N1x,wj⊨ψ if and only if {a mathematical formula}N2x,wj⊨ψ′. Likewise, for every formula {a mathematical formula}ψ′∈LPAL there is some {a mathematical formula}ψ∈LPAL such that, for every {a mathematical formula}j∈{1,2,3}, {a mathematical formula}N1x,wj⊨ψ if and only if {a mathematical formula}N2x,wj⊨ψ′.In either case, {a mathematical formula}N1x⁎ψ and {a mathematical formula}N2x⁎ψ′ are APAL-equivalent. By the induction hypothesis this implies that {a mathematical formula}φ′ cannot distinguish between {a mathematical formula}N1x⁎ψ,wi and {a mathematical formula}N2x⁎ψ′,wi. As a result, there is a formula {a mathematical formula}ψ∈LPAL such that {a mathematical formula}N1x,wi⊭[ψ]φ′ if and only if there is a formula {a mathematical formula}ψ′∈LPAL such that {a mathematical formula}N2x,wi⊭[ψ′]φ′. In other words, {a mathematical formula}N1x,wi⊭[!]φ′ if and only if {a mathematical formula}N2x,wi⊭[!]φ′.
       </list-item>
      </list>
      <paragraph>
       The proof that AAUL cannot distinguish between {a mathematical formula}N2x,w1 and {a mathematical formula}N3x,w1 is very similar to the preceding proof, so we omit some of the details.
      </paragraph>
      <paragraph label="Definition 11">
       Let {a mathematical formula}N2x=(WN2,RN2,VN2) and {a mathematical formula}N3x=(WN3,RN3,VN3) be submodels of {a mathematical formula}M2x and {a mathematical formula}M3x respectively. We say that {a mathematical formula}N2x and {a mathematical formula}N3x are AAUL-equivalent if
      </paragraph>
      <list>
       <list-item label="•">
        {a mathematical formula}N2x and {a mathematical formula}N3x can be obtained from {a mathematical formula}M2x and {a mathematical formula}M3x respectively by a finite sequence of arrow updates,
       </list-item>
       <list-item label="•">
        for every {a mathematical formula}i,j∈{1,2,3,4} we have {a mathematical formula}(wi,wj)∈RN2 if and only if {a mathematical formula}(wi,wj)∈RN3.
       </list-item>
      </list>
      <paragraph label="Proof">
       Let{a mathematical formula}N2x=(WN2,RN2,VN2)and{a mathematical formula}N3x=(WN2,RN2,VN2)be submodels of{a mathematical formula}M2xand{a mathematical formula}M3xrespectively that are AAUL-equivalent, let{a mathematical formula}φ∈LAAULand suppose{a mathematical formula}x∈P∖{p}is a propositional variable that does not occur in φ. Then for every{a mathematical formula}i∈{1,2,3,4}, φ does not distinguish between{a mathematical formula}N2x,wiand{a mathematical formula}N3x,wi.Fix any {a mathematical formula}i∈{1,2,3,4}. We show by induction that φ does not distinguish between {a mathematical formula}N2x,wi and {a mathematical formula}N3x,wi. As base case, suppose that {a mathematical formula}φ∈P. The models agree on all propositional variables other than x, so φ does not distinguish between them.As induction hypothesis, assume that {a mathematical formula}φ∉P and that the lemma holds for all subformulas of φ. We can assume without loss of generality that φ is of the form {a mathematical formula}□aφ′, {a mathematical formula}[U]φ′ or {a mathematical formula}[↕]φ′ for some {a mathematical formula}U∈LAAUL and {a mathematical formula}φ′∈LAAUL.
      </paragraph>
      <list>
       <list-item label="•">
        Suppose {a mathematical formula}φ=□aφ′. The models {a mathematical formula}N2x and {a mathematical formula}N3x are AAUL-equivalent so a world {a mathematical formula}wj is accessible from {a mathematical formula}wi in one of the models if and only if it is accessible in the other model. By the induction hypothesis {a mathematical formula}φ′ does not distinguish between {a mathematical formula}N2x,wj and {a mathematical formula}N3x,wj, so φ does not distinguish between {a mathematical formula}N2x,wi and {a mathematical formula}N3x,wi.
       </list-item>
       <list-item label="•">
        Suppose {a mathematical formula}φ=[U]φ′. We claim that {a mathematical formula}N2x⁎U and {a mathematical formula}N3x⁎U are AAUL-equivalent. In order for any arrow {a mathematical formula}(wj,wk) to be retained in one of the models but not the other, there would have to be a clause {a mathematical formula}(ψ,a,ψ′)∈U such that ψ distinguishes between {a mathematical formula}N2x,wj and {a mathematical formula}N3x,wj or {a mathematical formula}ψ′ distinguishes between {a mathematical formula}N2x,wk and {a mathematical formula}N3x,wk. This would contradict the induction hypothesis, so the models are AAUL-equivalent.It then follows from the induction hypothesis that {a mathematical formula}φ′ does not distinguish between {a mathematical formula}N2x⁎U,wi and {a mathematical formula}N3x⁎U,wi, which implies that φ does not distinguish between {a mathematical formula}N2x,wi and {a mathematical formula}N3x,wi.
       </list-item>
       <list-item label="•">
        Suppose {a mathematical formula}φ=[↕]φ′. Every world in {a mathematical formula}N2x can be uniquely identified by a combination of p and x, as can every world in {a mathematical formula}N3x. This implies that for every {a mathematical formula}U∈LAUL there is some {a mathematical formula}U′∈LAUL such that {a mathematical formula}N2x⁎U and {a mathematical formula}N3x⁎U′ are AAUL-equivalent, and that for every {a mathematical formula}U′∈LAUL there is some {a mathematical formula}U∈LAUL such that {a mathematical formula}N2x⁎U and {a mathematical formula}N3x⁎U′ are AAUL-equivalent.By the induction hypotheses {a mathematical formula}φ′ cannot distinguish between {a mathematical formula}N2x⁎U,wi and {a mathematical formula}N3x⁎U′,wi if {a mathematical formula}N2x⁎U and {a mathematical formula}N3x⁎U′ are AAUL-equivalent. This means that {a mathematical formula}N2x,wi⊭[↕]φ′ if and only if {a mathematical formula}N3x,wi⊭[↕]φ′.
       </list-item>
      </list>
      <paragraph>
       Using the three lemmas we can easily show that APAL and AAUL are incomparable in expressivity.
      </paragraph>
      <paragraph label="Proof">
       {a mathematical formula}LAPAL∥LAAUL.Recall that {a mathematical formula}ϕ1=□ap∧◊a¬□ap. Suppose towards a contradiction that there is some {a mathematical formula}ψ∈LAPAL that is equivalent to {a mathematical formula}〈↕〉ϕ1. This ψ contains a finite number of propositional variables and P is infinite, so take an {a mathematical formula}x∈P∖{p} that does not occur in ψ.By Lemma 5 we know that {a mathematical formula}〈↕〉ϕ1 distinguishes between {a mathematical formula}M1x,w1 and {a mathematical formula}M2x,w1. By Lemma 6 we know that ψ does not distinguish between {a mathematical formula}M1x,w1 and {a mathematical formula}M2x,w1. This contradicts the assumption that ψ is equivalent to {a mathematical formula}〈↕〉ϕ1. It follows that there is no {a mathematical formula}ψ∈LAPAL that is equivalent to {a mathematical formula}〈↕〉ϕ1 and therefore that {a mathematical formula}LAAUL⪯̸LAPAL.Now suppose towards a contradiction that there is some {a mathematical formula}ψ∈LAAUL that is equivalent to {a mathematical formula}〈!〉ϕ1. Again, take an {a mathematical formula}x∈P∖{p} that does not occur in ψ. By Lemma 5 we know that {a mathematical formula}〈!〉ϕ1 distinguishes between {a mathematical formula}M2x,w1 and {a mathematical formula}M3x,w1 and by Lemma 7 we know that ψ does not. This contradicts our assumption, so there is no {a mathematical formula}ψ∈LAAUL that is equivalent to {a mathematical formula}〈!〉ϕ1. We therefore have {a mathematical formula}LAPAL⪯̸LAAUL, which together with the previous conclusion {a mathematical formula}LAAUL⪯̸LAPAL shows that {a mathematical formula}LAPAL∥LAAUL.  □
      </paragraph>
      <paragraph label="Corollary 1">
       Because {a mathematical formula}LEL⊂LAPAL and {a mathematical formula}LEL⊂LAAUL we also get the following, rather unsurprising, corollary. {a mathematical formula}LEL≺LAPALand{a mathematical formula}LEL≺LAAUL.
      </paragraph>
     </section>
     <section label="4.2">
      <section-title>
       Expressivity on smaller classes of models
      </section-title>
      <paragraph>
       Above we chose a finite set A of agents and a countably infinite set P of propositional variables. Furthermore, we allowed all Kripke models. We consider these choices to be reasonable: if we model a real-life situation we expect the number of agents (represented by A) that are involved to be finite,{sup:13} whereas the number of potential facts (represented by P) might be infinite. Furthermore, the class of all Kripke models seems to be the “natural habitat” or arrow updates, since most of the smaller classes (such as S4, KD45 and S5) are not preserved under arrow updates.
      </paragraph>
      <paragraph>
       Still, it is interesting to know the relative expressivity of APAL and AAUL if we use smaller A and P, or a smaller class of models. There are a lot of different combinations of A, P and a class of models. So we cannot feasibly give expressivity results for every one of them. Instead we only present a few salient results. Furthermore, for reasons of brevity, we only sketch most of the proofs.
      </paragraph>
      <paragraph label="Definition 12">
       First, let us consider the case where {a mathematical formula}A={a} is a singleton, P is infinite and we use the class of S5 models. Let {a mathematical formula}x∈P. Consider the one-world one-agent model {a mathematical formula}M4x=(W4,R4,V4x) given by
      </paragraph>
      <list>
       <list-item label="•">
        {a mathematical formula}W4={w1},
       </list-item>
       <list-item label="•">
        {a mathematical formula}R4(a)=W4×W4,
       </list-item>
       <list-item label="•">
        {a mathematical formula}V4x(x)={w1},
       </list-item>
       <list-item label="•">
        {a mathematical formula}V4x(p)=∅ for {a mathematical formula}p≠x.
       </list-item>
      </list>
      <paragraph label="Definition 13">
       Let {a mathematical formula}x∈P. Consider the two-world one-agent model {a mathematical formula}M5x=(W5,R5,V5x), given by
      </paragraph>
      <list>
       <list-item label="•">
        {a mathematical formula}W5={w1,w2},
       </list-item>
       <list-item label="•">
        {a mathematical formula}R5(a)=W5×W5,
       </list-item>
       <list-item label="•">
        {a mathematical formula}V5x(x)={w1},
       </list-item>
       <list-item label="•">
        {a mathematical formula}V5x(p)=∅ for {a mathematical formula}p≠x.
       </list-item>
      </list>
      <paragraph label="Theorem 2">
       If{a mathematical formula}A={a}and P is countable infinite, then{a mathematical formula}LEL(A,P)≺S5LAAUL(A,P).
      </paragraph>
      <paragraph label="Sketch of proof">
       No formula in the language of EL distinguishes {a mathematical formula}M4x,w from {a mathematical formula}M5x,w for all {a mathematical formula}x∈P, since any epistemic formula only involves finitely many propositional variables.If we execute the arrow update {a mathematical formula}(x,a,¬x) in {a mathematical formula}M5x, the result is a model where the only remaining arrow is from {a mathematical formula}w1 to {a mathematical formula}w2. A picture of the updated model is given in Fig. 12. The AAUL formula {a mathematical formula}〈↕〉◊a□a⊥ therefore holds in {a mathematical formula}M5x,w1. It clearly does not hold in {a mathematical formula}M4x,w, so {a mathematical formula}〈↕〉◊a□a⊥ can distinguish between {a mathematical formula}M4x,w and {a mathematical formula}M5x,w for all {a mathematical formula}x∈P.This implies that there is no single EL formula that is equivalent to the AAUL formula {a mathematical formula}〈↕〉◊a□a⊥, so {a mathematical formula}LAAUL(A,P)⪯̸LEL(A,P). We trivially have {a mathematical formula}LEL(A,P)⪯LAAUL(A,P), so it follows that {a mathematical formula}LEL(A,P)≺S5LAAUL(A,P).  □
      </paragraph>
      <paragraph label="Corollary 2">
       If{a mathematical formula}A={a}and P is countably infinite, then{a mathematical formula}LAPAL(A,P)≺S5LAAUL(A,P).
      </paragraph>
      <paragraph label="Proof">
       In [5, Proposition 3.12], it is proven that single-agent arbitrary announcement logic is equally expressive as epistemic logic over S5, irrespective of the size of P. Hence the corollary follows.  □
      </paragraph>
      <paragraph>
       The difference in expressivity for one-agent S5 relies on the set of propositional variables being infinite. When this set is finite it is in fact the case that quantifying over arrow updates does not add any expressivity.
      </paragraph>
      <paragraph label="Proof">
       If{a mathematical formula}A={a}and P is finite, then{a mathematical formula}LEL(A,P)≡S5LAAUL(A,P).In single agent S5 with a finite number of atoms, we can use a finite set {a mathematical formula}Φ⊂LEL of characteristic formulas to identify each model up to bisimilarity. AAUL is invariant under bisimulation, so for each AAUL formula ψ and every {a mathematical formula}χ∈Φ we have either {a mathematical formula}⊨S5χ→ψ or {a mathematical formula}⊨S5χ→¬ψ. As a result, {a mathematical formula}⊨S5ψ↔⋀χ∈Φχ→δχ, where {a mathematical formula}δχ=⊤ if {a mathematical formula}⊨S5χ→ψ and {a mathematical formula}δχ=⊥ if {a mathematical formula}⊨S5χ→¬ψ.  □
      </paragraph>
      <paragraph label="Definition 14">
       But now suppose that we have not one agent but two. We show that then arbitrary arrow updates add expressivity, even if P is a singleton. Consider the following set of models: Let {a mathematical formula}m,n∈N∖{0} be two positive integers. We now define the model {a mathematical formula}Mmn=(Wmn,Rmn,Vmn) as follows:
      </paragraph>
      <list>
       <list-item label="•">
        {a mathematical formula}Wmn={si|0≤i≤m}∪{ti|0≤i≤n},
       </list-item>
       <list-item label="•">
        {a mathematical formula}Rmn(a)=({(s0,t0)}∪{(si,si+1)|i is odd}∪{(ti,ti+1)|i is odd})⁎,
       </list-item>
       <list-item label="•">
        {a mathematical formula}Rmn(b)=({(si,si+1)|i is even}∪{(si,si+1)|i is even})⁎,
       </list-item>
       <list-item label="•">
        {a mathematical formula}Vmn(p)={sm,sn},
       </list-item>
      </list>
      <paragraph label="Sketch of proof">
       If{a mathematical formula}A={a,b}and{a mathematical formula}P={p}, then{a mathematical formula}LEL≺S5LAAUL.Let {a mathematical formula}χ:=◊a□a⊥, {a mathematical formula}ξ0:=¬p and {a mathematical formula}ξk+1=□aξk∧□bξk for every {a mathematical formula}k∈N∖{0}. So {a mathematical formula}ξk means that there is no p world reachable in k or fewer steps.Take any {a mathematical formula}m,n∈N∖{0} such that {a mathematical formula}m≠n. If {a mathematical formula}m&gt;n, then {a mathematical formula}Mmn,s0⊨〈(ξn,a,⊤)〉χ. Likewise, if {a mathematical formula}m&lt;n, then {a mathematical formula}Mmn,s0⊨〈(¬ξm,a,⊤)〉χ. So if {a mathematical formula}m≠n we have {a mathematical formula}Mmn,s0⊨〈↕〉χ.If {a mathematical formula}m=n on the other hand, then there is no way to distinguish between {a mathematical formula}s0 and {a mathematical formula}t0. This implies that {a mathematical formula}Mmn,s0⊭〈↕〉χ. So {a mathematical formula}〈↕〉χ distinguishes between the models with {a mathematical formula}m=n and the models with {a mathematical formula}m≠n.Every {a mathematical formula}ψ∈LEL is of finite modal depth {a mathematical formula}dψ. If m and n are both greater than {a mathematical formula}dψ, then ψ cannot distinguish between the cases {a mathematical formula}m=n and {a mathematical formula}m≠n. This implies that {a mathematical formula}LEL(A,P)⪯̸LAAUL(A,P).  □
      </paragraph>
      <paragraph>
       APAL with two agents is more expressive than EL [5, Proposition 3.14], so Theorem 4 does not give us a counterpart to Corollary 2. We can, however, use a separate proof to show that, if {a mathematical formula}A={a,b} and {a mathematical formula}P={p}, then {a mathematical formula}LAAUL(A,P)⪯̸S5LAPAL(A,P).
      </paragraph>
      <paragraph label="Sketch of proof">
       If{a mathematical formula}A={a,b}and{a mathematical formula}P={p}, then{a mathematical formula}LAAUL(A,P)⪯̸S5LAPAL(A,P).Recall that {a mathematical formula}〈↕〉χ∈LAAUL distinguishes between the models {a mathematical formula}Mmn with {a mathematical formula}m=n and those with {a mathematical formula}m≠n.Now suppose there is a formula {a mathematical formula}ψ∈LAPAL that distinguishes those models where {a mathematical formula}m=n from those where {a mathematical formula}m≠n. This formula ψ is of depth {a mathematical formula}dψ. Take m and n to be larger than {a mathematical formula}dψ. It is clear that no epistemic formula will reach {a mathematical formula}sm or {a mathematical formula}tn, and after a public announcement that changes the model this remains the case, since public announcements preserve S5. Hence ψ will not be able to distinguish the cases above {a mathematical formula}dψ where {a mathematical formula}m=n from {a mathematical formula}m≠n. This implies that ψ is not equivalent to {a mathematical formula}〈↕〉χ, since that formula does distinguish the models with {a mathematical formula}m=n from those with {a mathematical formula}m≠n. This is true for any {a mathematical formula}ψ∈LAPAL, so {a mathematical formula}LAAUL(A,P)⪯̸S5LAPAL(A,P).  □
      </paragraph>
      <paragraph>
       The question whether {a mathematical formula}LAPAL(A,P)≺S5LAPAL(A,P) or {a mathematical formula}LAPAL(A,P)∥S5LAPAL(A,P) if {a mathematical formula}A={a,b} and {a mathematical formula}P={p} remains open, although we suspect the latter to be the case.
      </paragraph>
     </section>
     <section label="4.3">
      <section-title>
       Comparisons to other logics
      </section-title>
      <paragraph>
       In the preceding sections we compared {a mathematical formula}LEL, {a mathematical formula}LAPAL and {a mathematical formula}LAAUL to each other. In this section we compare {a mathematical formula}LAAUL to three different logics.
      </paragraph>
      <paragraph>
       From a technical perspective the comparisons made in this section are rather trivial. Our reason for presenting the results anyway is that they point to interesting differences between different types of quantification. For reasons of brevity we do not give full definitions of the logics considered here; instead we provide references to publications that do contain definitions.
      </paragraph>
      <paragraph>
       First, let us compare {a mathematical formula}LAAUL to epistemic logic with common knowledge (ELC).{sup:14} In AAUL the operator {a mathematical formula}[↕] quantifies over an infinite number of updates. As a result, {a mathematical formula}[↕]φ could be seen as an infinite conjunction {a mathematical formula}⋀U∈LAUL[U]φ. In ELC the operator {a mathematical formula}CA likewise represents an infinite quantification; a formula {a mathematical formula}CAφ can be seen as an infinite conjunction {a mathematical formula}⋀i∈NEAiφ (where {a mathematical formula}EA is an “everybody knows” operator).
      </paragraph>
      <paragraph label="Theorem 6">
       We can use the models {a mathematical formula}Mmn to show that {a mathematical formula}LAAUL∥S5LELC. As can be seen in Fig. 13 at {a mathematical formula}sm and {a mathematical formula}tn either {a mathematical formula}□ap is true or {a mathematical formula}□bp is true. Using a common knowledge formula one can express what happens at the end, yet there is no formula in AAUL (or APAL for that matter) that is able to express this. {a mathematical formula}LAAUL∥S5LELC.
      </paragraph>
      <paragraph label="Sketch of proof">
       Like {a mathematical formula}LEL, the language {a mathematical formula}LELC cannot distinguish those pointed models {a mathematical formula}Mmn,s0 where {a mathematical formula}m=n from those where {a mathematical formula}m≠n.{sup:15} This can be seen with model comparison games as they are for instance discussed in [16]. For any depth d, one can choose m and n sufficiently large, such that any C-move in such a game by spoiler can be matched by duplicator by choosing a world that is equivalent up to depth d. Hence ELC is not at least as expressive as AAUL.Consider the formula {a mathematical formula}Cˆab□ap. This formula is true in all models {a mathematical formula}Mmn where either m or n is odd and false in all models where both m and n are even. Yet, there is no formula in AAUL that distinguishes these. The quantifier in AAUL cannot distinguish between updates with formulas that depend on {a mathematical formula}□ap being true at the final worlds or any other formula.  □
      </paragraph>
      <paragraph label="Sketch of proof">
       {a mathematical formula}LAPAL∥S5LELC.The proof of Theorem 6 can be adapted to show that the APAL is not comparable to ELC by slightly adapting the valuation of p in the models {a mathematical formula}Mmn to include {a mathematical formula}s0 and {a mathematical formula}t0. If {a mathematical formula}m≠n, there is some public announcement that detects the difference in length between the two sides. This announcement can then be used to remove one of {a mathematical formula}s1 and {a mathematical formula}t1 but not the other. If {a mathematical formula}m=n, on the other hand, then {a mathematical formula}s0 and {a mathematical formula}t0 are bisimilar and so are {a mathematical formula}s1 and {a mathematical formula}t1. The formula {a mathematical formula}〈!〉(□bp∧◊a¬□bp) therefore distinguishes the cases where {a mathematical formula}m=n from those where {a mathematical formula}m≠n. ELC still cannot distinguish between {a mathematical formula}m=n and {a mathematical formula}m≠n, so {a mathematical formula}LAPAL⪯̸LELC.Like AAUL, APAL cannot distinguish the cases where m and n are even from those where they are not. ELC can do this, so {a mathematical formula}LELC⪯̸LAPAL, completing the proof.  □
      </paragraph>
      <paragraph>
       Let us consider two more logics, refinement modal logic (RML) [12] and arbitrary action model logic (AAML) [19].
      </paragraph>
      <paragraph label="Corollary 4">
       {a mathematical formula}LRML≺S5LAAUL.
      </paragraph>
      <paragraph label="Proof">
       RML is equally expressive as EL (see [12, Proposition 36]). It therefore follows from {a mathematical formula}LEL≺S5LAAUL that {a mathematical formula}LRML≺S5LAAUL.  □
      </paragraph>
      <paragraph label="Corollary 5">
       {a mathematical formula}LAAML≺S5LAAUL.
      </paragraph>
      <paragraph label="Proof">
       [19, Corollary IV.5] shows that AAML is equally expressive as EL. It follows that {a mathematical formula}LAAML≺S5LAAUL.  □
      </paragraph>
      <paragraph>
       An overview of the expressivity results discussed so far can be seen in Fig. 14. The interesting thing about these different expressivity results is that they show that changing the scope of quantification can have wildly different effects. Let X and Y be two different operators that quantify over some sets {a mathematical formula}SX and {a mathematical formula}SY. Then, in general, we would expect that logics using X to be incomparable to logics using Y (unless {a mathematical formula}SX=SY).
      </paragraph>
      <paragraph>
       After all, if {a mathematical formula}SX⊈SY and {a mathematical formula}SY⊈SX then X and Y seem unrelated so we should expect logics using them to be incomparable. But if {a mathematical formula}SX⊂SY then, by the reasoning presented in Section 4.1 we expect there to be worlds that can be distinguished by Xφ but not Yφ as well as worlds that can be distinguished by Yφ but not Xφ.
      </paragraph>
      <paragraph>
       Some of the logics studied and mentioned in this paper follow this expected pattern. The logics ELC, APAL and AAUL are indeed incomparable in expressivity. But, somewhat surprisingly, RML and AAML are equally expressive as EL and therefore less expressive than ELC, APAL and AAUL.
      </paragraph>
      <paragraph>
       It therefore seems an interesting question for further research to ask why going from APAL to AAUL is so different to going from AAUL to AAML. Additionally, we could wonder whether there is any interesting set S larger than the set of arrow updates but smaller than the set of action models, with the property that quantification over S adds expressivity to EL.
      </paragraph>
     </section>
    </section>
    <section label="5">
     <section-title>
      Model checking for AAUL
     </section-title>
     <paragraph>
      Here we show that the model checking problem for AAUL is PSPACE-complete. This is as expected, considering that the model checking problems for APAL and Group Announcement Logic are known to be PSPACE-complete as well [2]. Indeed, the proofs presented in this section are inspired by the ones given in [2]. Recall that, as shown in [25], the model checking for AUL is in PTIME. So the {a mathematical formula}[↕] operator significantly increases the complexity of model checking.
     </paragraph>
     <paragraph>
      In order to show that the model checking problem for AAUL is PSPACE-complete we have to show that it is PSPACE-hard and that it is in PSPACE. We start by proving that it is PSPACE-hard.
     </paragraph>
     <section label="5.1">
      <section-title>
       Model checking for AAUL is PSPACE hard
      </section-title>
      <paragraph>
       We show that the QBF-SAT problem can be reduced to the model checking problem for AAUL. Since QBF-SAT is known to be PSPACE-complete, this shows that AAUL model checking is PSPACE-hard.
      </paragraph>
      <paragraph>
       Let us start by very briefly describing the QBF-SAT problem. Let {a mathematical formula}n∈N be given, as well as {a mathematical formula}Q1,⋯,Qn∈{∀,∃} and let {a mathematical formula}Φ=Φ(p1,⋯,pn) be a Boolean formula containing n propositional variables. The QBF-SAT problem for {a mathematical formula}n,Q1,⋯,Qn and Φ is to determine whether {a mathematical formula}Q1p1⋯Qnpn:Φ(p1,⋯,pn) is true.{sup:16} A simple instance of the problem would be {a mathematical formula}∀p1∃p2:(p2→p1). The propositional variables are considered as Boolean variables here, so this instance could also be denoted {a mathematical formula}∀p1∈{⊤,⊥}∃p2∈{⊤,⊥}:(p2→p1), which happens to be true.
      </paragraph>
      <paragraph>
       In order to reduce QBF-SAT to the model checking of AAUL, we need to create a corresponding model and an AAUL formula for each instance of QBF-SAT, with both this model and the formula having size polynomial in that of the instance. We start by constructing the model. The model, {a mathematical formula}MHan, depends only on n, and is shown in Fig. 15. The idea is that we will force a number of arbitrary arrow updates to choose between a world {a mathematical formula}wi+ (corresponding to the choice {a mathematical formula}pi=⊤) and a world {a mathematical formula}wi− (corresponding to the choice {a mathematical formula}pi=⊥).
      </paragraph>
      <paragraph label="Proof">
       We will now define the formula corresponding to a QBF-SAT instance. First, in order to force the arbitrary arrow updates to choose one of the worlds, let us define a number of useful subformulas. For {a mathematical formula}1≤m≤n let{a mathematical formula} In other words, {a mathematical formula}γm holds if and only if for every {a mathematical formula}1≤i≤m the arrow to exactly one of {a mathematical formula}wi+ and {a mathematical formula}wi− is eliminated, while for every {a mathematical formula}m&lt;j≤n both {a mathematical formula}wj+ and {a mathematical formula}wj− are still reachable. This means that the values of all {a mathematical formula}pi with {a mathematical formula}i≤m have been chosen, but the values of all {a mathematical formula}pj with {a mathematical formula}j&gt;m have not. Now, consider the following, recursively defined, formula.{a mathematical formula} For our example formula {a mathematical formula}∀p1∃p2:(p2→p1) we obtain, writing {a mathematical formula}◊pi↔¬◊qi for {a mathematical formula}(◊pi∨◊qi)∧¬(◊pi∧◊qi) the following formula Ψ:{a mathematical formula} We leave it to the reader to verify that Ψ holds in {a mathematical formula}MHa2,w. {a mathematical formula}MHan,w⊨Ψiff{a mathematical formula}Q1p1⋯Qnpn:Φ(p1,⋯,pn)is true.Recall that {a mathematical formula}γm holds at w in any submodel of {a mathematical formula}MHan if and only if for all {a mathematical formula}1≤i≤m exactly one of {a mathematical formula}wi+ and {a mathematical formula}wi− remains reachable, and for every {a mathematical formula}m&lt;i≤n both {a mathematical formula}wi+ and {a mathematical formula}wi− remain reachable. This means we can interpret any submodel satisfying {a mathematical formula}γm as a choice for the values of {a mathematical formula}p1,⋯,pm, where {a mathematical formula}pi takes value ⊤ if and only if the arrow to {a mathematical formula}wi+ is retained (so if and only if {a mathematical formula}◊pi holds in w). The arbitrary updates {a mathematical formula}[↕] and {a mathematical formula}〈↕〉 can therefore be seen as universal and existential quantifiers for the choice of {a mathematical formula}pi. Finally, {a mathematical formula}Ψn+1 checks whether {a mathematical formula}Q(p1,⋯,pn) holds for the chosen values of the {a mathematical formula}pi.  □
      </paragraph>
      <paragraph label="Corollary 6">
       The model checking problem for AAUL is PSPACE-hard.
      </paragraph>
     </section>
     <section label="5.2">
      <section-title>
       Model checking for AAUL is in PSPACE
      </section-title>
      <paragraph>
       Left to show is that the model checking problem for AAUL is in PSPACE. We do this by presenting an algorithm MCheck({a mathematical formula}M,w,φ) that returns true if and only if {a mathematical formula}M,w⊨φ and false if and only if {a mathematical formula}M,w⊭φ. MCheck({a mathematical formula}M,w,φ) works by a case distinction on the main connective of φ. Most cases are exactly as one would expect; MCheck({a mathematical formula}M,w,φ1∨φ2) returns true if either MCheck({a mathematical formula}M,w,φ1) or MCheck({a mathematical formula}M,w,φ1) does, and so on. For reasons of brevity we only consider the interesting cases, and omit the trivial ones. Let {a mathematical formula}M=(W,R,V) and {a mathematical formula}w∈W.
      </paragraph>
      <paragraph>
       The two cases that we consider in detail are {a mathematical formula}φ=[U]χ and {a mathematical formula}φ=[↕]χ. We start with the case {a mathematical formula}φ=[U]χ, where {a mathematical formula}U=(φ1,a1,ψ1),⋯,(φn,an,ψn). In order to solve MCheck({a mathematical formula}M,w,φ) we simply have to call MCheck({a mathematical formula}M⁎U,w,χ); the difficult part is to compute {a mathematical formula}M⁎U. We can do so as follows.
      </paragraph>
      <list>
       <list-item label="1.">
        For every {a mathematical formula}w′∈W and {a mathematical formula}1≤i≤n, label {a mathematical formula}w′ with {a mathematical formula}φi iff MCheck({a mathematical formula}M,w′,φi) returns true, and with {a mathematical formula}ψi iff MCheck({a mathematical formula}M,w′,ψi) does.
       </list-item>
       <list-item label="2.">
        For every {a mathematical formula}a∈A, {a mathematical formula}(w1,w2)∈R(a) and {a mathematical formula}(φi,a,ψi)∈U, if {a mathematical formula}w1 is labeled {a mathematical formula}φi and {a mathematical formula}w2 is labeled {a mathematical formula}ψi, then label {a mathematical formula}(w1,w2) with “keep.”
       </list-item>
       <list-item label="3.">
        For every {a mathematical formula}a∈A and {a mathematical formula}(w1,w2)∈R(a), if {a mathematical formula}(w1,w2) is not labeled “keep,” then remove it.
       </list-item>
      </list>
      <paragraph>
       The other non-trivial case is {a mathematical formula}φ=[↕]χ. We would like to solve this using “brute force,” so for every U we would like to check whether {a mathematical formula}[U]χ holds. Unfortunately, there are infinitely many different arrow updates, so we cannot check them all. But while there are infinitely many different updates U, there are only finitely many different updated models {a mathematical formula}M⁎U. So instead of running MCheck({a mathematical formula}M,w,[U]χ) for every U, we run MCheck({a mathematical formula}M⁎U,w,χ) for all different {a mathematical formula}M⁎U.
      </paragraph>
      <paragraph>
       It is not the case that every submodel of M is of the form {a mathematical formula}M⁎U for some U, so we need to determine which submodels can be represented as {a mathematical formula}M⁎U. In order to do this, we use the definitions and results about bisimilarity that were introduced in Section 3. In particular, we use the bisimulation contraction {a mathematical formula}MBC of M (see Definition 5).
      </paragraph>
      <paragraph>
       For any state w, the pointed model {a mathematical formula}M,w is bisimilar to {a mathematical formula}MBC,[w] and AAUL is bisimulation invariant, as discussed in Section 3, so we are free to work with {a mathematical formula}MBC instead of M. In {a mathematical formula}MBC no two different worlds are bisimilar, which, because we are working with finite models, means that every two sets of worlds are distinguishable. As such, every submodel {a mathematical formula}(WBC,R′,VBC) of {a mathematical formula}MBC is of the form {a mathematical formula}MBC⁎U for some U. The {a mathematical formula}[↕]χ case in MCheck({a mathematical formula}M,w,φ) is therefore as follows.
      </paragraph>
      <list>
       <list-item label="1.">
        Compute {a mathematical formula}MBC=(WBC,RBC,VBC).
       </list-item>
       <list-item label="2.">
        For every submodel {a mathematical formula}M′=(WBC,R′,VBC), if MCheck({a mathematical formula}M′,[w],χ) returns false, then return false.
       </list-item>
       <list-item label="3.">
        Return true.
       </list-item>
      </list>
      <paragraph>
       We consider the correctness of MCheck({a mathematical formula}M,w,φ) to be immediately clear, but it remains to show that it requires at most polynomial space. So let us do some complexity analysis. In the {a mathematical formula}[U]χ case we need to run MCheck({a mathematical formula}M,w′,φi) and MCheck({a mathematical formula}M,w′,ψi) for all {a mathematical formula}w′∈W, but we can do those one at a time, so we need to keep only one in memory. We do need to keep {a mathematical formula}O(|U|⋅|M|)≤O(|φ|⋅|M|) different labels in memory, as well as the submodel {a mathematical formula}M⁎U which is of size at most {a mathematical formula}O(|M|). The total space requirement for MCheck({a mathematical formula}M,w,[U]χ) is therefore {a mathematical formula}O(|φ|⋅|M|) plus the maximum space requirement of MCheck({a mathematical formula}M⁎U,w,χ), MCheck({a mathematical formula}M,w′,φi) and MCheck({a mathematical formula}M,w′,ψi) for every {a mathematical formula}i,w′.
      </paragraph>
      <paragraph>
       In the {a mathematical formula}[↕]χ case we first need to compute {a mathematical formula}MBC. This can be done in polynomial time and {a mathematical formula}O(|M|) space, by using the Paige–Tarjan algorithm [27]. If we use depth-first search we need to store only two additional models at a time, namely {a mathematical formula}MBC and {a mathematical formula}M′. Both are of size at most {a mathematical formula}O(|M|). Finally, we need the space required to run MCheck({a mathematical formula}M′,[w],χ).
      </paragraph>
      <paragraph>
       So the {a mathematical formula}[U]χ and {a mathematical formula}[↕]χ cases take at most {a mathematical formula}O(|φ|⋅|M|) space, plus whatever is required to do the model checking for their subformulas. All other cases take less space. This means that every connective adds at most {a mathematical formula}O(|φ|⋅|M|) to the space requirement. There are at most {a mathematical formula}O(|φ|) connectives in φ, so MCheck({a mathematical formula}M,w,φ) requires at most {a mathematical formula}O(|φ|2⋅|M|) space. This means we have the following lemma.
      </paragraph>
      <paragraph label="Lemma 9">
       Model checking for AAUL is in PSPACE.
      </paragraph>
      <paragraph label="Corollary 7">
       Model checking for AAUL is PSPACE-complete.
      </paragraph>
     </section>
    </section>
    <section label="6">
     <section-title>
      Proof system
     </section-title>
     <paragraph label="Proof">
      In this section we introduce an infinitary proof system for AAUL. This system is a conservative extension of the proof system for AUL given in [22]. The axiom and rule for the arbitrary arrow update are very similar to the axiom and rule for APAL given in [6]. The completeness proof we give for it, is very closely related to the proof system for APAL given in [6]. Before introducing the proof system, we need an auxiliary definition. Let {a mathematical formula}x∉P be a new atom. The set NF of formulas that are in necessity form is generated by the following normal form:{a mathematical formula} where {a mathematical formula}φ∈LAAUL and {a mathematical formula}U∈LAAUL. Given a formula ψ and a formula {a mathematical formula}ξ(x)∈NF in necessity form, we use {a mathematical formula}ξ(ψ) to denote the result of replacing the unique occurrence of x in {a mathematical formula}ξ(x) by ψ.If{a mathematical formula}φ=ξ([↕]ψ)for some{a mathematical formula}ξ(x)∈NFthen this representation of φ is unique, i.e. if{a mathematical formula}φ=ξ′([↕]ψ′)then{a mathematical formula}ξ′(x)=ξ(x)and{a mathematical formula}ψ′=ψ.For given {a mathematical formula}χ,U∈LAAUL, we can consider χ→, {a mathematical formula}□a and {a mathematical formula}[U] to be unary operators. The symbol x can only occur inside the scope of such unary operators. These three operators do not include {a mathematical formula}[↕], so the {a mathematical formula}[↕] operators in {a mathematical formula}ξ([↕]ψ) and {a mathematical formula}ξ′([↕]ψ′) must both be the outermost {a mathematical formula}[↕] operator.  □
     </paragraph>
     <paragraph>
      Now, we can consider the proof system {a mathematical formula}LAAUL.
     </paragraph>
     <paragraph label="Definition 16">
      The proof system {a mathematical formula}LAAUL is given by the following eight axiom schemata and four rules.
     </paragraph>
     <list>
      <list-item label="(A1)">
       All instances of propositional tautologies
      </list-item>
      <list-item label="(A2)">
       {a mathematical formula}□a(φ→ψ)→(□aφ→□aψ)
      </list-item>
      <list-item label="(A3)">
       {a mathematical formula}[U]p↔p
      </list-item>
      <list-item label="(A4)">
       {a mathematical formula}[U]¬φ↔¬[U]φ
      </list-item>
      <list-item label="(A5)">
       {a mathematical formula}[U](φ∧ψ)↔([U]φ∧[U]ψ)
      </list-item>
      <list-item label="(A6)">
       {a mathematical formula}[U]□aφ↔⋀(ψ,a,χ)∈U(ψ→□a(χ→[U]φ))
      </list-item>
      <list-item label="(A7)">
       {a mathematical formula}[U][U′]φ↔[U×U′]φ where {a mathematical formula}U×U′={(ψ1∧[U]ψ2,a,χ1∧[U]χ2)|(ψ1,a,χ1)∈U,(ψ2,a,χ2)∈U′}
      </list-item>
      <list-item label="(A8)">
       {a mathematical formula}[↕]φ→[U0]φ where {a mathematical formula}U0∈LAUL
      </list-item>
      <list-item label="(R1)">
       From {a mathematical formula}φ→ψ and φ, infer ψ
      </list-item>
      <list-item label="(R2)">
       From φ, infer {a mathematical formula}□aφ
      </list-item>
      <list-item label="(R3)">
       From φ, infer {a mathematical formula}[U]φ
      </list-item>
      <list-item label="(R4)">
       From {a mathematical formula}{ξ([U0]φ)|U0∈LAUL}, infer {a mathematical formula}ξ([↕]φ), where {a mathematical formula}ξ(x)∈NF.
      </list-item>
     </list>
     <paragraph>
      Axioms (A1), (A2) and rules (R1) and (R2) together are the basic multi-agent modal system K. Axioms (A3), …, (A7) are all so-called reduction axioms for the arrow update, i.e. going from left to right the number of arrow updates reduces ((A3) and (A7)) or the complexity of the formulas to which the arrow update is applied reduces ((A4), (A5) and (A6)). This means one can effectively translate any formula without arbitrary arrow updates to a provably equivalent formula of multi-agent modal logic, as was shown in [22]. Axioms (A8) and rule (R4) deal with arbitrary arrow updates, and given their presence in the proof system, one also needs (R3) for completeness. Note that while a rule “From φ, infer {a mathematical formula}[↕]φ” is not included in the proof system, it is derivable. After all, if ⊢φ then (R3) allows us to derive {a mathematical formula}[U]φ for all {a mathematical formula}U∈LAUL. Since {a mathematical formula}x∈NF, this allows us to derive {a mathematical formula}[↕]φ by (R4). Before proving the soundness of {a mathematical formula}LAAUL, let us consider one lemma.
     </paragraph>
     <paragraph label="Proof">
      Rule (R4) is truth preserving. That is, if{a mathematical formula}ξ(x)∈NF,{a mathematical formula}φ∈LAAULand{a mathematical formula}M,ware such that{a mathematical formula}M,w⊨ξ([U0]φ)for all{a mathematical formula}U0∈LAUL, then we have{a mathematical formula}M,w⊨ξ([↕]φ).By induction on the construction of {a mathematical formula}ξ(x). As base case, suppose {a mathematical formula}ξ(x)=x. If {a mathematical formula}M,w⊨[U0]φ for all {a mathematical formula}U0∈LAUL it follows immediately from the semantics of AAUL that {a mathematical formula}M,w⊨[↕]φ. So (R4) is sound for {a mathematical formula}ξ(x)=x.Suppose then as induction hypothesis that {a mathematical formula}ξ(x)≠x and that the lemma holds for every {a mathematical formula}ξ′(x) that precedes {a mathematical formula}ξ(x) in the recursive definition of NF. There are three possibilities for the form of {a mathematical formula}ξ(x).The first possibility is that {a mathematical formula}ξ(x)=ψ→ξ′(x). Fix any {a mathematical formula}M,w and φ, and suppose that {a mathematical formula}M,w⊨ψ→ξ′([U0]φ) for all {a mathematical formula}U0∈LAUL. If {a mathematical formula}M,w⊭ψ then, trivially, {a mathematical formula}M,w⊨ψ→ξ′([↕]φ). If, on the other hand, {a mathematical formula}M,w⊨ψ then {a mathematical formula}M,w⊨ξ′([U0]φ) for all {a mathematical formula}U0∈LAUL and therefore, by the induction hypothesis, {a mathematical formula}M,w⊨ξ′([↕]φ). This implies that {a mathematical formula}M,w⊨ψ→ξ′([↕]φ). In either case, from {a mathematical formula}M,w⊨ξ([U0]φ) for all {a mathematical formula}U0∈LAUL it follows that {a mathematical formula}M,w⊨ξ([↕]φ).The second possibility is that {a mathematical formula}ξ(x)=□aξ′(x). Fix any {a mathematical formula}M,w and φ, and suppose that {a mathematical formula}M,w⊨□aξ′([U0]φ) for all {a mathematical formula}U0∈LAUL. Let {a mathematical formula}w′ be any world that is a-accessible from w in M. We have {a mathematical formula}M,w′⊨ξ′([U0]φ) for all {a mathematical formula}U0∈LAUL and therefore, by the induction hypothesis, {a mathematical formula}M,w′⊨ξ′([↕]φ). This holds for every a-successor of w, so {a mathematical formula}M,w⊨□aξ′([↕]φ).The third and final possibility is that {a mathematical formula}ξ(x)=[U]ξ′(x). Again, fix any {a mathematical formula}M,w and φ, and suppose that {a mathematical formula}M,w⊨[U]ξ′([U0]φ) for all {a mathematical formula}U0∈LAUL. Then {a mathematical formula}(M⁎U),w⊨ξ′([U0]φ) for all {a mathematical formula}U0∈LAUL and therefore, by the induction hypothesis, {a mathematical formula}(M⁎U),w⊨ξ′([↕]φ). This, in turn, implies that {a mathematical formula}M,w⊨[U]ξ′([↕]φ).We have treated all possible forms of {a mathematical formula}ξ(x). This completes the induction step and thereby the proof.  □
     </paragraph>
     <paragraph label="Proof">
      Soundness of {a mathematical formula}LAAULLet{a mathematical formula}φ∈LAAUL. If ⊢φ, then ⊨φ.The soundness of the axioms (A1)–(A5) and (A8) follows immediately from the semantics of AAUL, as does the soundness of the rules (R1)–(R3). The soundness of the non-straightforward axioms (A6) and (A7) follows from Lemma 1. The soundness of (R4) follows from Lemma 11.  □
     </paragraph>
     <section label="6.1">
      Completeness of {a mathematical formula}LAAUL: preliminaries
      <paragraph>
       The completeness of ⊢ is, unfortunately but not unusually, harder to prove than the soundness. Before getting to the main proof we will need a number of definitions and lemmas. Firstly, we need definitions for the depth and size of formulas.
      </paragraph>
      <paragraph label="Definition 17">
       Let {a mathematical formula}φ∈LAAUL. The {a mathematical formula}[↕]-depth {a mathematical formula}d(φ) of φ is given inductively by{a mathematical formula} The size {a mathematical formula}s(φ) of φ is a more complicated measure, given inductively by{a mathematical formula} We write {a mathematical formula}φ1&lt;dsφ2 if either {a mathematical formula}d(φ1)&lt;d(φ2) or {a mathematical formula}d(φ1)=d(φ2) and {a mathematical formula}s(φ1)&lt;s(φ2).
      </paragraph>
      <paragraph>
       The measure {a mathematical formula}d(φ) is simply the nesting depth of {a mathematical formula}[↕] in φ. The measure {a mathematical formula}s(φ) does not have such a simple description, it is designed purely to provide us with a well-ordering we can do induction on. Specifically, we need it for the following lemma.
      </paragraph>
      <paragraph label="Lemma 12">
       Let{a mathematical formula}φ,ψ,U,U′∈LAAUL. Then{a mathematical formula}
      </paragraph>
      <paragraph label="Proof">
       In all five cases, the formulas on the left and right side of the inequality have the same {a mathematical formula}[↕]-depth. It therefore suffices to show a difference in size. The first three cases are relatively easy to prove.Every U contains at least one clause (see Definition 1), so {a mathematical formula}|U|≥1 and {a mathematical formula}smax(U)≥1. We therefore have{a mathematical formula} It follows that{a mathematical formula} and{a mathematical formula} Furthermore, for every {a mathematical formula}x1≥2 and {a mathematical formula}x2,x3≥1, we have {a mathematical formula}x1x2+x1x3+1&lt;x1x2⋅x1x3⋅x1=x1x2+x3+1. This implies that{a mathematical formula} Proving the inequality for the last two cases is simple but requires a lot of bookkeeping. Recall that {a mathematical formula}ψ1→ψ2 is an abbreviation for {a mathematical formula}¬(ψ1∧¬ψ2), so {a mathematical formula}s(ψ→□a(χ→[U]φ))=s(ψ)+s(χ)+3+3+1+s([U]φ). Furthermore, ⋀ represents a number of conjunction symbols equal to its number of conjuncts minus one. We therefore have{a mathematical formula} Furthermore, for every {a mathematical formula}x1,x2≥2 we have {a mathematical formula}x1+x2≤x1⋅x2. So {a mathematical formula}2⋅smax(U)+s([U]φ)≤2s([U]φ)⋅smax(U). Additionally, {a mathematical formula}8&lt;9s([U]φ). As a result,{a mathematical formula} Left to show is that {a mathematical formula}[U×U′]φ&lt;ds[U][U′]φ. Recall that {a mathematical formula}U×U′ is an abbreviation for{a mathematical formula} This gives us {a mathematical formula}|U×U′|=|U|⋅|U′|. Furthermore, since {a mathematical formula}s(ψ1∧[U]ψ2)=s(ψ1)+s(U)s(ψ2)+1, we also have {a mathematical formula}smax(U×U′)≤smax(U)+s(U)smax(U′)+1. We now want to compare {a mathematical formula}s(U×U′) to {a mathematical formula}s(U)s(U′). On the one hand,{a mathematical formula} On the other hand, we have{a mathematical formula} Putting these inequalities together, we get {a mathematical formula}s(U×U′)s(φ)&lt;(s(U)s(U′))s(φ), and therefore{a mathematical formula} □
      </paragraph>
      <paragraph>
       The relevance of Lemma 12 is that, for each of (A3)–(A7), the formula on the right side of the equivalence is smaller than the formula on the left side.
      </paragraph>
     </section>
     <section label="6.2">
      Completeness of {a mathematical formula}LAAUL: Lindenbaum lemma
      <paragraph>
       We will now define theories, and work towards a Lindenbaum lemma, which states that every theory can be extended to a maximal consistent theory.
      </paragraph>
      <paragraph label="Definition 18">
       A set {a mathematical formula}Φ⊆LAAUL of formulas is a theory if it contains all theorems and is closed under rules (R1) and (R4).
      </paragraph>
      <paragraph>
       We do not require Φ to be closed under (R2) and (R3) because, unlike (R1) and (R4), these rules preserve only validity, not truth. For example, {a mathematical formula}M,w⊨φ does not guarantee {a mathematical formula}M,w⊨[U]φ, but {a mathematical formula}M,w⊨φ→ψ and {a mathematical formula}M,w⊨φ do guarantee that {a mathematical formula}M,w⊨ψ.
      </paragraph>
      <paragraph label="Lemma 13">
       A theory Φ is consistent if there is a {a mathematical formula}φ∈LAAUL such that {a mathematical formula}φ∉Φ. A theory Φ is maximal if for every formula {a mathematical formula}φ∈LAAUL either {a mathematical formula}φ∈Φ or {a mathematical formula}¬φ∈Φ.Fix any{a mathematical formula}ψ∈Φ. The following are equivalent:
      </paragraph>
      <list>
       <list-item label="1.">
        Φ is inconsistent,
       </list-item>
       <list-item label="2.">
        there is a φ such that{a mathematical formula}φ∈Φand{a mathematical formula}¬φ∈Φ,
       </list-item>
       <list-item label="3.">
        {a mathematical formula}ψ∧¬ψ∈Φ.
       </list-item>
      </list>
      <paragraph>
       The proof is trivial and left to the reader. We also need some more notation to define sets of formulas.
      </paragraph>
      <paragraph label="Definition 20">
       Let Φ be a theory and {a mathematical formula}φ,U∈LAAUL. Then{a mathematical formula}
      </paragraph>
      <paragraph label="Proof">
       First, let us show that {a mathematical formula}Φ+φ is an appropriate notation for {a mathematical formula}{ψ|φ→ψ∈Φ}. If Φ is a theory, then{a mathematical formula}φ∈Φ+φand{a mathematical formula}Φ⊆Φ+φ.Firstly, we have {a mathematical formula}⊢φ→φ and therefore {a mathematical formula}φ→φ∈Φ. This implies that {a mathematical formula}φ∈Φ+φ. Now, note that {a mathematical formula}⊢ψ→(φ→ψ) and therefore {a mathematical formula}ψ→(φ→ψ)∈Φ. Since Φ is closed under (R1), this implies that if {a mathematical formula}ψ∈Φ, then {a mathematical formula}φ→ψ∈Φ. We therefore have {a mathematical formula}ψ∈Φ+φ for all {a mathematical formula}ψ∈Φ.  □
      </paragraph>
      <paragraph label="Proof">
       Next, we need two relatively simple lemmas about theories. If Φ is a theory, then so are{a mathematical formula}Φ+φ,{a mathematical formula}KaΦand{a mathematical formula}[U]Φ.If ⊢ψ then also {a mathematical formula}⊢φ→ψ, {a mathematical formula}⊢□aψ and {a mathematical formula}⊢[U]ψ. The set of theorems is therefore a subset of {a mathematical formula}Φ+φ, {a mathematical formula}□aΦ and {a mathematical formula}[U]Φ. It remains to be shown that the three sets are closed under (R1) and (R4).Suppose {a mathematical formula}ψ→χ∈Φ+φ and {a mathematical formula}ψ∈Φ+φ. Then, by definition, {a mathematical formula}φ→(ψ→χ)∈Φ and {a mathematical formula}φ→ψ∈Φ. By (A1) and (R1) this implies that {a mathematical formula}φ→χ∈Φ and therefore {a mathematical formula}χ∈Φ+φ. So {a mathematical formula}Φ+φ is closed under (R1).Similarly, (A2) and (R1) guarantee that if {a mathematical formula}□a(ψ→χ)∈Φ and {a mathematical formula}□aψ∈Φ then {a mathematical formula}□aχ∈Φ. Furthermore, (A4), (A5) and (R1) guarantee that if {a mathematical formula}[U](ψ→χ),[U]ψ∈Φ then {a mathematical formula}[U]χ∈Φ. The sets {a mathematical formula}□aΦ and {a mathematical formula}[U]Φ are therefore also closed under (R1).Now suppose that for some {a mathematical formula}ξ(x)∈NF, we have {a mathematical formula}{ξ([U]ψ)|[U]∈LAUL}⊆Φ+φ. By the definition of {a mathematical formula}Φ+φ, we have {a mathematical formula}{φ→ξ([U]ψ)|[U]∈LAUL}⊆Φ, which implies that {a mathematical formula}φ→ξ([↕]ψ)∈Φ, since {a mathematical formula}φ→ξ(x)∈NF and Φ is closed under (R4). Similarly, from {a mathematical formula}□aξ(x)∈NF and {a mathematical formula}[U]ξ(x)∈NF it follows that {a mathematical formula}□aΦ and {a mathematical formula}[U]Φ are closed under (R4).  □
      </paragraph>
      <paragraph label="Proof">
       {a mathematical formula}Φ+φis consistent if and only if{a mathematical formula}¬φ∉Φ.We prove that if {a mathematical formula}¬φ∈Φ then {a mathematical formula}Φ+φ is inconsistent and that if {a mathematical formula}Φ+φ is inconsistent then {a mathematical formula}¬φ∈Φ.Suppose {a mathematical formula}¬φ∈Φ. Then, by Lemma 14 we have {a mathematical formula}¬φ∈Φ+φ and {a mathematical formula}φ∈Φ+φ. So {a mathematical formula}Φ+φ is inconsistent.Suppose then that {a mathematical formula}Φ+φ is inconsistent. Then {a mathematical formula}Φ+φ contains all AAUL formulas, so in particular {a mathematical formula}p∧¬p∈Φ+φ. This implies that {a mathematical formula}φ→(p∧¬p)∈Φ. Since {a mathematical formula}(φ→(p∧¬p))→¬φ is a propositional tautology and Φ is closed under modus ponens this implies that {a mathematical formula}¬φ∈Φ.  □
      </paragraph>
      <paragraph label="Proof">
       We now have all we need to prove our Lindenbaum lemma. Lindenbaum lemmaEvery consistent theory can be extended to a maximal consistent theory.Let Φ be a consistent theory. The set of all AAUL formulas is countably infinite, so we can enumerate it as {a mathematical formula}{φ0,φ1,⋯}. Define the sequence {a mathematical formula}Φn of theories inductively as follows.{a mathematical formula} where {a mathematical formula}φj is the lowest numbered formula that is of the form {a mathematical formula}φj=¬ξ([U]ψ) with {a mathematical formula}U∈LAUL, and such that {a mathematical formula}¬¬ξ([U]ψ)∉Φn.First, let us show that such {a mathematical formula}φj is well defined. The first important observation here is that, by Lemma 10, the representation {a mathematical formula}ξ([↕]ψ) is unique. The second important observation is that (assuming that it is defined) each {a mathematical formula}Φn+1 is a consistent theory, since they are of the form {a mathematical formula}Φn+ψ with {a mathematical formula}¬ψ∉Φn. So if {a mathematical formula}¬ξ([↕]ψ)∈Φn then there must be some {a mathematical formula}ξ([U]ψ)∉Φn, as otherwise closure under (R4) would imply that {a mathematical formula}ξ([↕]ψ)∈Φn. If {a mathematical formula}ξ([U]ψ)∉Φn then also {a mathematical formula}¬¬ξ([U]ψ)∉Φn. The lowest numbered formula with this property is {a mathematical formula}φj.Now let {a mathematical formula}Ψ=⋃n=0∞Φn. We claim that Ψ is a maximal consistent theory that contains Φ. To this end, first note that {a mathematical formula}{Φn} is an increasing sequence: {a mathematical formula}Φn⊆Φn+1 for all {a mathematical formula}n∈N. Now, consider the following.
      </paragraph>
      <list>
       <list-item label="1.">
        Ψ contains the theory Φ, so it contains all theorems.
       </list-item>
       <list-item label="2.">
        Take any {a mathematical formula}φn∈LAAUL. We have either {a mathematical formula}¬φn∈Φn⊆Ψ or {a mathematical formula}¬φn∉Φn and therefore {a mathematical formula}φn∈Φn+φn=Φn+1⊆Ψ.
       </list-item>
       <list-item label="3.">
        If {a mathematical formula}φ→ψ∈Ψ and {a mathematical formula}φ∈Ψ then there is some {a mathematical formula}n∈N such that {a mathematical formula}φ→ψ∈Φn and {a mathematical formula}φ∈Φn. This implies that {a mathematical formula}ψ∈Φn, and therefore also {a mathematical formula}ψ∈Ψ.
       </list-item>
       <list-item label="4.">
        If {a mathematical formula}φ∈Ψ then {a mathematical formula}¬φ∉Ψ. By contradiction: suppose {a mathematical formula}φ,¬φ∈Ψ. Then there is an {a mathematical formula}n∈N such that {a mathematical formula}φ,¬φ∈Φn. That contradicts {a mathematical formula}Φn being a consistent theory.
       </list-item>
       <list-item label="5.">
        Ψ is closed under (R4). Proof: suppose {a mathematical formula}φn is of the right form to be a conclusion of (R4), so {a mathematical formula}φn=ξ([↕]ψ). If {a mathematical formula}¬φn∉Φn then {a mathematical formula}φn∈Φn+1⊆Ψ, so Ψ is closed with respect to this instance of (R4). Suppose then that {a mathematical formula}¬φn∈Φn. Then {a mathematical formula}φj=¬ξ([U]ψ)∈Φn+1⊆Ψ. By point 4, this implies that {a mathematical formula}ξ([U]ψ)∉Ψ, so one of the premises of (R4) is not satisfied. Again, Ψ is closed with respect to this instance of (R4).
       </list-item>
      </list>
     </section>
     <section label="6.3">
      Completeness of {a mathematical formula}LAAUL: truth lemma
      <paragraph label="Definition 21">
       We can now define the canonical model, and prove a truth lemma for this model. Canonical modelThe canonical model {a mathematical formula}Mc=(Wc,Rc,Vc) is given as follows:{a mathematical formula}
      </paragraph>
      <paragraph label="Proof">
       Before considering the truth lemma, let us consider two more small lemmas. Let Φ be a theory. If{a mathematical formula}□aφ∉Φ, then there is a maximal consistent theory Ψ such that{a mathematical formula}□aΦ⊆Ψand{a mathematical formula}φ∉Ψ.By assumption, {a mathematical formula}□aφ∉Φ and therefore {a mathematical formula}φ∉□aΦ. This implies that {a mathematical formula}¬¬φ∉□aΦ, since {a mathematical formula}□aΦ contains the tautology {a mathematical formula}¬¬φ→φ and is closed under (R1). As such, {a mathematical formula}□aΦ+¬φ is a consistent theory, which can be extended to a maximal consistent theory Ψ. This Ψ contains ¬φ and is consistent, so in particular {a mathematical formula}φ∉Ψ.  □
      </paragraph>
      <paragraph label="Proof">
       Let Φ be a maximal consistent theory. Then{a mathematical formula}[U]Φis also a maximal consistent theory.We know from Lemma 15 that {a mathematical formula}[U]Φ is a theory. Suppose towards a contradiction that {a mathematical formula}[U]Φ is inconsistent. Then {a mathematical formula}p,¬p∈[U]Φ and therefore {a mathematical formula}[U]p,[U]¬p∈Φ. But then, using (A4), we have {a mathematical formula}¬[U]p∈Φ. So Φ is inconsistent, contradicting our assumptions. The theory {a mathematical formula}[U]Φ must therefore be consistent.Suppose then, towards a contradiction, for some φ we have {a mathematical formula}φ∉[U]Φ and {a mathematical formula}¬φ∉[U]Φ. Then {a mathematical formula}[U]φ∉Φ and {a mathematical formula}[U]¬φ∉Φ. By (A4), this implies that {a mathematical formula}¬[U]φ∉Φ. But then Φ is not complete, contradicting out assumptions. The theory {a mathematical formula}[U]Φ must therefore be complete.  □
      </paragraph>
      <paragraph>
       Now, finally, we arrive at the truth lemma.
      </paragraph>
      <paragraph label="Proof">
       Truth lemmaFor every maximal consistent theory Φ and every{a mathematical formula}φ∈LAAUL, we have{a mathematical formula}φ∈Φif and only if{a mathematical formula}Mc,Φ⊨φ.The proof is by induction on {a mathematical formula}&lt;ds. As base case, suppose {a mathematical formula}d(φ)=0 and {a mathematical formula}s(φ)=1. Then {a mathematical formula}φ=p for some {a mathematical formula}p∈P, so it follows immediately from the definition of {a mathematical formula}Vc(p) that {a mathematical formula}Mc,Φ⊨φ if and only if {a mathematical formula}p∈Φ.Suppose then as induction hypothesis that {a mathematical formula}d(φ)&gt;0 or {a mathematical formula}s(φ)&gt;1, and that the lemma holds for all ψ with {a mathematical formula}ψ&lt;dsφ. The proof continues with a case distinction. Note that for every strict subformula ψ of φ we have {a mathematical formula}ψ&lt;dsφ. Case 1.Suppose {a mathematical formula}φ=¬ψ. By the induction hypothesis, {a mathematical formula}ψ∉Φ⇔Mc,Φ⊭ψ. By the semantics of AAUL we have {a mathematical formula}Mc,Φ⊭ψ⇔Mc,Φ⊨¬ψ. By maximality and consistency of Φ we have {a mathematical formula}ψ∉Φ⇔¬ψ∈Φ. The three equivalences together show that {a mathematical formula}φ∈Φ⇔Mc,Φ⊨φ.Case 2.Suppose {a mathematical formula}φ=ψ1∧ψ2. By the induction hypothesis we have {a mathematical formula}Mc,Φ⊨ψi⇔ψi∈Φ, {a mathematical formula}i∈{1,2}. By the semantics of AAUL we have {a mathematical formula}Mc,Φ⊨ψ1∧ψ2⇔Mc,Φ⊨ψ1 and Mc,Φ⊨ψ2. Finally, because Φ is a maximal consistent theory we have {a mathematical formula}ψ1∧ψ2∈Φ⇔ψ1∈Φ and ψ2∈Φ. Together, these equivalences show that {a mathematical formula}φ∈Φ⇔Mc,Φ⊨φ.Case 3.Suppose {a mathematical formula}φ=□aψ. We have {a mathematical formula}Mc,Φ⊨□aψ⇔Mc,Ψ⊨ψ for all Ψ such that {a mathematical formula}□aΦ⊆Ψ. By the induction hypothesis, the latter is equivalent to {a mathematical formula}ψ∈Ψ for all Ψ such that {a mathematical formula}□aΦ⊆Ψ.If {a mathematical formula}□aψ∈Φ then {a mathematical formula}ψ∈Ψ for all Ψ such that {a mathematical formula}□aΦ⊆Ψ. So {a mathematical formula}□aψ∈Φ⇒Mc,Φ⊨□aψ. Furthermore, by Lemma 18, if {a mathematical formula}□aψ∉Φ then there is some maximal consistent theory Ψ such that {a mathematical formula}ψ∉Ψ and {a mathematical formula}□aΦ⊆Ψ. By contraposition, this implies that if {a mathematical formula}ψ∈Ψ for all Ψ such that {a mathematical formula}□aΦ⊆Ψ then {a mathematical formula}□aψ∈Φ. So {a mathematical formula}Mx,Φ⊨□aψ⇒□aψ∈Φ.Case 4.Suppose φ is of the form {a mathematical formula}[U]p,[U]¬ψ,[U](ψ1∧ψ2), {a mathematical formula}[U]□aψ or {a mathematical formula}[U][U′]ψ. Then φ occurs on the left side of one of the axioms (A3)–(A7). Let {a mathematical formula}φ′ be the corresponding formula on the right side.The set Φ is a theory, so it contains (A3)–(A7) and is closed under modus ponens. So {a mathematical formula}φ∈Φ⇔φ′∈Φ. Furthermore, by the semantics of AAUL (see Lemma 1), we have {a mathematical formula}Mc,Φ⊨φ⇔Mc,Φ⊨φ′. Finally, {a mathematical formula}φ′&lt;dsφ (see Lemma 12), so by the induction hypothesis {a mathematical formula}φ′∈Φ⇔Mc,Φ⊨φ′. Together, these three equivalences imply that {a mathematical formula}φ∈Φ⇔Mc,Φ⊨φ.Case 5.Suppose {a mathematical formula}φ=[U][↕]ψ. We treat the two directions of the bi-implication separately. Firstly, suppose that {a mathematical formula}[U][↕]ψ∈Φ. Observe that {a mathematical formula}[U]([↕]ψ→[U0]ψ)∈Φ and {a mathematical formula}[U]([↕]ψ→[U0]ψ)→([U][↕]ψ→[U][U0]ψ) for every {a mathematical formula}U0∈LAUL, since both formulas are derivable in {a mathematical formula}LAAUL. Furthermore, Φ is closed under (R1), so {a mathematical formula}[U][U0]ψ∈Φ.The update {a mathematical formula}U0, being an element of {a mathematical formula}LAUL, does not contain any {a mathematical formula}[↕] operators. As such, the {a mathematical formula}[↕]-depth of {a mathematical formula}[U][U0]ψ is strictly lower than that of {a mathematical formula}[U][↕]ψ. We therefore have {a mathematical formula}[U][U0]ψ&lt;ds[U][↕]ψ, so by the induction hypothesis our assumption that {a mathematical formula}[U][U0]ψ∈Φ yields the conclusion that {a mathematical formula}Mc,Φ⊨[U][U0]ψ. By the semantics of AAUL, the latter is equivalent to {a mathematical formula}Mc⁎U,Φ⊨[U0]ψ. Note that this holds for all {a mathematical formula}U0∈LAUL, so {a mathematical formula}Mc⁎U,Φ⊨[↕]ψ and therefore {a mathematical formula}Mc,Φ⊨[U][↕]ψ. We have shown that {a mathematical formula}[U][↕]ψ∈Φ⇒Mc,Φ⊨[U][↕]ψ.Suppose then that {a mathematical formula}Mc,Φ⊨[U][↕]ψ. By the induction hypothesis, this implies that {a mathematical formula}[U][U0]ψ∈Φ for all {a mathematical formula}U0∈LAUL. Taking {a mathematical formula}ξ=[U]x∈NF we have {a mathematical formula}{ξ([U0]ψ)|U0∈LAUL}⊆Φ which, since Φ is closed under (R4), gives us {a mathematical formula}ξ([↕]ψ)=[U][↕]ψ∈Φ. We have now shown that {a mathematical formula}Mc,Φ⊨[U][↕]ψ⇒[U][↕]ψ∈Φ. Together with our previous conclusion, this shows that {a mathematical formula}[U][↕]ψ∈Φ⇔Mc,Φ⊨[U][↕]ψ.Case 6.Suppose {a mathematical formula}φ=[↕]ψ. We have {a mathematical formula}[↕]ψ∈Φ⇔([U0]ψ∈Φ for all U0∈LAUL); where ⇒ is due to (A8) and ⇐ is due to (R4). Furthermore, since {a mathematical formula}[U0]ψ&lt;ds[↕]ψ, so we can use the induction hypothesis to obtain {a mathematical formula}[U0]ψ∈Φ⇔Mc,Φ⊨[U0]ψ. Finally, by the semantics of AAUL, we have {a mathematical formula}(Mc,Φ⊨[U0]ψ for all U0∈LAUL)⇔Mc,Φ⊨[↕]ψ. Together, these equivalences imply that {a mathematical formula}[↕]ψ∈Φ⇔Mc,Φ⊨[↕]ψ. Cases 1–6 are exhaustive, and in each case {a mathematical formula}φ∈Φ⇔Mc,Φ⊨φ. This completes the induction step and thereby the proof.  □
      </paragraph>
     </section>
     <section label="6.4">
      {a mathematical formula}LAAUL is sound and complete for ⊨
      <paragraph label="Proof">
       The hard parts of the proof are done, now we can quickly prove that {a mathematical formula}LAAUL is complete. Completeness of {a mathematical formula}LAAULFor all{a mathematical formula}φ∈LAAUL, if ⊨φ then ⊢φ.By contraposition. Suppose ⊬φ. Let Φ be the set of theorems, and note that we have {a mathematical formula}φ∉Φ and, since Φ is a theory, {a mathematical formula}¬¬φ∉Φ. This means {a mathematical formula}Φ+¬φ is a consistent theory, so there is a maximal consistent theory Ψ that contains {a mathematical formula}Φ+¬φ. We have {a mathematical formula}φ∉Ψ and therefore, by Lemma 20, {a mathematical formula}Mc,Ψ⊭φ. As such, ⊭φ.  □
      </paragraph>
      <paragraph>
       Together with the soundness Theorem 7 this shows that the proof system {a mathematical formula}LAAUL is sound and complete for arbitrary arrow update logic.
      </paragraph>
      <paragraph>
       If a finitary axiomatization of a logic exists, it follows that the set of validities of that logic is recursively enumerable. The axiomatization of AAUL is infinitary, however, so no such conclusion can be drawn. In fact, it is not currently known whether the set of validities of AAUL is RE, and therefore whether the satisfiability problem for AAUL is co-RE. It was shown in [17] that the satisfiability problem of AAUL, like that of APAL [18], can encode the tiling problem. So while we do not know whether the satisfiability problem of AAUL is co-RE, we do know that it is not RE. In particular, this means that the satisfiability problem of AAUL is undecidable.
      </paragraph>
     </section>
    </section>
    <section label="7">
     <section-title>
      Conclusion
     </section-title>
     <paragraph>
      In this paper we introduced arbitrary arrow update logic where one can quantify over arrow updates. We investigated its expressivity relative to other logics in the family of dynamic epistemic logics, including epistemic logic with common knowledge. For a finite set of agents and a countably infinite set of propositional variables we managed to completely chart the expressivity landscape over the class of all Kripke models. For one agent and countably many propositional variable we also completely charted the landscape, mostly because in S5 all related systems boil down to epistemic logic. For two agents and one propositional variable, there is only one question remaining and that is one half of the relative expressivity of APAL and AAUL, and we conjecture that the logics have non-comparable expressivity.
     </paragraph>
     <paragraph>
      We also showed that the model checking problem for arbitrary arrow update logic is PSPACE-complete, and we introduced a sound and complete infinitary axiomatization for arbitrary arrow update logic.
     </paragraph>
     <paragraph>
      As far as future research is concerned there are other arbitrary variants of dynamic modal logics to consider and investigate their relative expressivity to AAUL, moreover we can further develop variants of APAL present in the literature and investigate what happens if we replace public announcements by arrow updates.
     </paragraph>
     <paragraph>
      Another interesting question for future research is whether we can characterize for which dynamic operators “arbitrary version” are incomparable in expressivity. As mentioned in Section 4.3, we would generally expect any two logics using different “arbitrary operators” to be incomparable in expressivity. Yet the logics RML and AAML turn out to be only as expressive as basic epistemic logic, and therefore less expressive than the logics APAL and AAUL. It would be interesting to know exactly why RML and AAML deviate from the expected pattern.
     </paragraph>
     <paragraph>
      Finally, we could add more temporal connectives to AAUL, and study their interaction with the {a mathematical formula}[↕] operator. In particular, if we add CTL-connectives like AG and AE we could use AAUL (with the normative interpretation) to study concepts like liveness, fairness and safety.
     </paragraph>
    </section>
   </content>
  </root>
 </body>
</html>