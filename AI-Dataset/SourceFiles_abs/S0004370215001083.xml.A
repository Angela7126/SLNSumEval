<?xml version="1.0" encoding="utf-8"?>
<html>
 <body>
  <root>
   <title>
    Revision in networks of ontologies.
   </title>
   <content>
    <section label="1">
     <section-title>
      Introduction
     </section-title>
     <paragraph>
      Knowledge may be organised in a distributed way in which independent theories are related by correspondences between theory features (formulas, predicates). Relations between different theories may have different nature: refinement, competing theories, complementary theories, etc. We call a set of theories related by such relations a network of ontologies. The notion of networks of ontologies relies on minimal assumptions regarding ontologies and alignments: their semantics must define a consequence relation which is a closure relation. Alignments independently express constraints on acceptable models of ontologies.
     </paragraph>
     <paragraph>
      One motivation and inspiration for this work is the management of networks of ontologies in the semantic web. The semantic web relies on knowledge deployed and connected over the web. This knowledge is based on ontologies expressed in logical languages, such as RDF, RDF Schema and OWL [27], [2]. Because of the multiplicity of ontologies, they may be connected through alignments expressing correspondences between their concepts. This allows for translating assertions across ontologies or merging them.
     </paragraph>
     <paragraph>
      Problems arise when a modification in an ontology or an alignment leads to inconsistency. For instance, it happens everyday that new objects occur and are reported, such as a particular building in a given city. Such a building may belong to a category in an ontology for civil engineering, for instance, glass-walled building. Glass-walled buildings in this ontology may be considered by a particular ontology alignment as subsumed by energy-inefficient buildings in an energy saving ontology. But because this building is engineered with particular active components, it is in fact assigned to the energy-efficient buildings in that same ontology. However, energy-efficient and energy-inefficient buildings are considered exclusive. Hence, this small network of (two) ontologies may be interpreted as inconsistent, because the same building belongs to two disjoint classes. Something has to be done for restoring consistency and still accommodating this new building. It may consist of modifying the ontologies (the two classes are not exclusive), the data (this building is not to be considered as a glass-walled building) or the alignment (not all glass-walled buildings are energy-inefficient).
     </paragraph>
     <paragraph>
      Belief and knowledge revision have been introduced for dealing with such problems in logical theories. They provide operators to modify a theory in a way which is consistent and as minimal as possible.
     </paragraph>
     <paragraph>
      This work investigates the design of belief revision operators for networks of ontologies and considers the problems specific to this broader context. There may be several ways to achieve this:
     </paragraph>
     <list>
      <list-item label="•">
       Combine local revision operators to achieve global revision. We show that, already for the reasonable case of partial meet revision, this is not a viable strategy.
      </list-item>
      <list-item label="•">
       Consider a network of ontologies as a single “regular” theory to which classical belief revision is applied. Although this is in theory possible, this does not preserve the structure of the network of ontologies.
      </list-item>
     </list>
     <paragraph>
      Instead, we show how belief revision operators, constrained by the structure of networks of ontologies, may be defined. This preserves the opportunity to ground operators on the structure of these networks. Moreover, this does not require encoding the problem in a classical revision problem, and decoding it into a revised network of ontologies.
     </paragraph>
     <paragraph>
      From the standpoint of belief revision, we thus introduce a novel way to consider several independently managed theories (loosely) related by constraints which helps exploiting them together.
     </paragraph>
     <paragraph>
      In particular, we consider what are revision operators in a network of ontologies, how to define postulates governing the behaviour of such operators and how to design them. We raise issues specific to networked ontologies and show how differences between ontologies and alignments can be used for designing specific operators. Although we go as far as providing concrete revision operators, this work primarily aims at highlighting the principles and issues of applying revision to networks of ontologies.
     </paragraph>
     <paragraph>
      For dealing with this problem, we first introduce networks of ontologies and alignments through their syntax and semantics (Section 2) and recall the principles of knowledge revision and update (Section 3). We then introduce two revision operators, based on alignments and ontologies, as well as associated consequences and two notions of consistency (Section 4). We provide revision postulates for these operators mirroring the basic Alchourrón–Gärdenfors–Makinson (AGM) postulates and show that such operators generalise local operators (Section 5). We discuss the use of these local operators for defining global operators and provide definitions of partial meet revision for networks of ontologies (Section 6). Finally, we provide several minimality criteria specific to networks of ontologies (Section 7). Relation to other work is discussed (Section 8) before concluding.
     </paragraph>
    </section>
    <section label="2">
     <section-title>
      Networks of ontologies
     </section-title>
     <paragraph>
      We first precisely define what alignments and networks of ontologies are through their syntax (Section 2.1) before addressing their semantics (Section 2.2). There is no “standard” semantics for networks of ontologies, so we provide here an abstract view that aims at covering those which have been proposed so far. Based on this framework, we define the notions of closure from this semantics (Section 2.3) and we set constraints that must be satisfied by such a semantics to support the results of this paper (Section 2.4).
     </paragraph>
     <paragraph>
      We consider ontologies as logical theories. The semantics of an ontology o is only considered in this paper through its set of models ({a mathematical formula}M(o)) and its induced consequence relation (⊨). Such a relation satisfies three properties (o, {a mathematical formula}o′ are ontologies, i.e., sets of assertions, δ and γ are assertions): extensivity{a mathematical formula}{δ}⊨δmonotonyif {a mathematical formula}o⊨δ then {a mathematical formula}o∪o′⊨δidempotencyif {a mathematical formula}o⊨δ and {a mathematical formula}o∪{δ}⊨γ then {a mathematical formula}o⊨γ
     </paragraph>
     <paragraph>
      We assume a consequence closure function {a mathematical formula}Cnω(o)={δ|o⊨δ}.
     </paragraph>
     <paragraph>
      Although the word ontology is used here and examples are given with respect to a minimal ontology language. Results in this paper rely only on the consequence relation induced by model theory. They apply to many types of logical theories. In particular, the remainder will use classical revision operators in ontologies.
     </paragraph>
     <section label="2.1">
      <section-title>
       Alignments and networks of ontologies
      </section-title>
      <paragraph>
       Alignments express the correspondences between entities of different ontologies [17]. Given an ontology o in a language L, we use an entity language ({a mathematical formula}QL(o)) for characterising those entities that will be put in correspondence. The entity language can be simply made of all the terms or formulas of the ontology language based on the ontology vocabulary. It can restrict them to the named terms or, on the contrary, extend them to all the queries that may be expressed on this vocabulary. Alignments express relations between such entities through a finite set Θ of relations which are independent from ontology relations.
      </paragraph>
      <paragraph label="Definition 1">
       Alignment, correspondenceGiven two ontologies o and {a mathematical formula}o′ with associated entity languages {a mathematical formula}QL and {a mathematical formula}QL′′ and a set of alignment relations Θ, a correspondence is a triple: {a mathematical formula}〈e,e′,r〉∈QL(o)×QL′′(o′)×Θ expressing that the relation r holds between entity e and {a mathematical formula}e′. An alignment is a set of correspondences between two ontologies.
      </paragraph>
      <paragraph>
       For the sake of examples, we will consider that ontologies are description logic theories (T-box and A-box) and their entities are named classes and individuals. Classes are denoted by lower case letters, sometimes subscripted by an integer referring to their ontology, and individuals are denoted by i. In the examples, we will only consider =, ≤, ≥ and ⊥ for relations of Θ. They will be interpreted as relations expressing equivalence, subsumption and disjointness between classes. This simple language suffices to exhibit the problems considered in this paper. However, results are not restricted to such languages and relations.
      </paragraph>
      <paragraph label="Example 1">
       AlignmentThe alignment {a mathematical formula}A1,3 of Fig. 1 is described by:{a mathematical formula} also described as:{a mathematical formula}
      </paragraph>
      <paragraph>
       The above definition can be generalised to an arbitrary number of alignments and ontologies captured in the concept of a network of ontologies (or distributed system [24], [21]), i.e., sets of ontologies and alignments.
      </paragraph>
      <paragraph label="Definition 2">
       Network of ontologiesA network of ontologies {a mathematical formula}〈Ω,Λ〉 is made of a finite set Ω of ontologies and a set Λ of alignments between these ontologies. We denote by {a mathematical formula}Λ(o,o′) the set of alignments in Λ between o and {a mathematical formula}o′.
      </paragraph>
      <paragraph label="Example 2">
       Network of ontologiesFig. 1 presents three ontologies (in all examples, {a mathematical formula}c⊑c′ denotes subsumption between concepts c and {a mathematical formula}c′, {a mathematical formula}c⊥c′ denotes disjointness between concepts c and {a mathematical formula}c′, and {a mathematical formula}i{an inline-figure}c denotes membership of individual i to concept c):{a mathematical formula}{a mathematical formula}{a mathematical formula} together with three alignments {a mathematical formula}A1,2, {a mathematical formula}A2,3, and {a mathematical formula}A1,3. These alignments can be described as follows:{a mathematical formula}{a mathematical formula}{a mathematical formula}
      </paragraph>
      <paragraph>
       Hereafter, we consider normalised networks of ontologies, i.e., networks with exactly one alignment between each pair of ontologies.
      </paragraph>
      <paragraph label="Definition 3">
       Normalised network of ontologiesA network of ontologies {a mathematical formula}〈Ω,Λ〉 is said normalised if and only if for any two ontologies o and {a mathematical formula}o′, {a mathematical formula}|Λ(o,o′)|=1.
      </paragraph>
      <paragraph>
       In a normalised network of ontologies, we denote by {a mathematical formula}λ(o,o′) the unique alignment between o and {a mathematical formula}o′.
      </paragraph>
      <paragraph>
       Comparing networks of ontologies and their models is not in general simple. We define syntactic subsumption between unrestricted networks of ontologies.
      </paragraph>
      <paragraph label="Definition 4">
       Syntactic subsumption between networks of ontologiesGiven two networks of ontologies, {a mathematical formula}〈Ω,Λ〉 and {a mathematical formula}〈Ω′,Λ′〉, {a mathematical formula}〈Ω,Λ〉 is syntactically subsumed by {a mathematical formula}〈Ω′,Λ′〉, denoted by {a mathematical formula}〈Ω,Λ〉⊑〈Ω′,Λ′〉, iff {a mathematical formula}∃〈h,k〉, a pair of morphisms: {a mathematical formula}h:Ω⟶Ω′ and {a mathematical formula}k:Λ⟶Λ′ such that {a mathematical formula}∀o∈Ω, {a mathematical formula}∃h(o)∈Ω′ and {a mathematical formula}o⊆h(o) and {a mathematical formula}∀A∈Λ(o,o′), {a mathematical formula}∃k(A)∈Λ′(h(o),h(o′)) and {a mathematical formula}A⊆k(A).
      </paragraph>
      <paragraph>
       We note: {a mathematical formula}〈Ω,Λ〉≡〈Ω′,Λ′〉 iff {a mathematical formula}〈Ω,Λ〉⊑〈Ω′,Λ′〉 and {a mathematical formula}〈Ω′,Λ′〉⊑〈Ω,Λ〉; {a mathematical formula}〈Ω,Λ〉⊏〈Ω′,Λ′〉 iff {a mathematical formula}〈Ω,Λ〉⊑〈Ω′,Λ′〉 and {a mathematical formula}〈Ω′,Λ′〉⋢〈Ω,Λ〉.
      </paragraph>
      <paragraph>
       A network of ontologies is syntactically subsumed by another network if any ontology (respectively any alignment) of the former has a counterpart in the latter one which contains at least all of its axioms (respectively correspondences) and the graph structure of the former network is preserved in the latter. It is possible that several ontologies have the same counterpart as long as these conditions are met.
      </paragraph>
      <paragraph>
       This definition is purely syntactic because semantically equivalent networks may not be syntactically subsumed (it suffices to use one ontology whose axioms are equivalent but different).
      </paragraph>
      <paragraph>
       The empty network of ontologies {a mathematical formula}〈∅,∅〉 (containing no ontology and no alignment) is subsumed by any other network of ontologies.
      </paragraph>
     </section>
     <section label="2.2">
      <section-title>
       Semantics of networks of ontologies
      </section-title>
      <paragraph>
       The semantics of aligned ontologies, or networks of ontologies, must remain compatible with the classical semantics of ontologies: connecting ontologies to other ontologies should not radically change the manner to interpret them.
      </paragraph>
      <paragraph>
       When ontologies are independent, i.e., not related with alignments, it is natural that their semantics is the classical semantics for these ontologies, i.e., a set of models {a mathematical formula}M(o). A model is a map m from the entities of an ontology to a particular domain D. Such models have to apply to all the elements of the entity language {a mathematical formula}QL(o) (when it is larger than the ontology language, this is usually defined inductively on the structure of its elements).
      </paragraph>
      <paragraph>
       Different semantics provide alternative ways to record the constraints imposed by alignments: through relations between domains of interpretation [24], [6], through equalising functions [45], [43], by imposing equal [32] or disjoint [10] domains. These models have been compared elsewhere [45]; we provide an informal unified view of these semantics.
      </paragraph>
      <paragraph>
       For that purpose, each correspondence is interpreted with respect to three features: a model for each ontology and a semantic structure, denoted by Δ [44]. This loosely defined semantic structure has two purposes:
      </paragraph>
      <list>
       <list-item label="•">
        providing an interpretation to the correspondence relations in Θ (which are independent from the ontology semantics);
       </list-item>
       <list-item label="•">
        memorising the constraints imposed on models by the alignments.
       </list-item>
      </list>
      <paragraph>
       In this work, it can simply be considered that Δ is used, in each semantics, to define the satisfaction of a correspondence μ by two ontology models o and {a mathematical formula}o′ (which is denoted by {a mathematical formula}mo,mo′⊨Δμ).
      </paragraph>
      <paragraph>
       Such a simple notion of satisfaction is provided by Example 3.
      </paragraph>
      <paragraph label="Example 3">
       Interpretation of correspondencesIn the language used as example, c and {a mathematical formula}c′ stand for classes and i and {a mathematical formula}i′ for individuals. If {a mathematical formula}mo and {a mathematical formula}mo′ are respective models of o and {a mathematical formula}o′:{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}
      </paragraph>
      <paragraph>
       Hence, the semantics of two aligned ontologies may be given as a set of models which are pairs of compatible models.
      </paragraph>
      <paragraph label="Definition 5">
       Models of alignmentsGiven two ontologies o and {a mathematical formula}o′ and an alignment A between these ontologies, a model of this alignment is a triple {a mathematical formula}〈mo,mo′,Δ〉 with {a mathematical formula}mo∈M(o), {a mathematical formula}mo′∈M(o′), and Δ a semantic structure, such that {a mathematical formula}∀μ∈A, {a mathematical formula}mo,mo′⊨Δμ (denoted by {a mathematical formula}mo,mo′⊨ΔA).
      </paragraph>
      <paragraph>
       We note {a mathematical formula}A⊨μ iff {a mathematical formula}∀〈mo,mo′,Δ〉 such that {a mathematical formula}mo,mo′⊨ΔA, {a mathematical formula}mo,mo′⊨Δμ. Similarly as for ontologies, the semantics of alignments can be given by the relation ⊨ such that (A and {a mathematical formula}A′ are alignments and μ and ν are correspondences all between the same pair of ontologies): extensivity{a mathematical formula}{μ}⊨μmonotonyif {a mathematical formula}A⊨μ then {a mathematical formula}A∪A′⊨μidempotencyif {a mathematical formula}A⊨μ and {a mathematical formula}A∪{μ}⊨ν then {a mathematical formula}A⊨ν Similarly, we assume a consequence closure function {a mathematical formula}Cnα(A)={μ|A⊨μ}.
      </paragraph>
      <paragraph>
       Models of networks of ontologies extend models of alignments. They select compatible models for each ontology in the network [23]. Compatibility consists of satisfying all the alignments of the network.
      </paragraph>
      <paragraph label="Definition 6">
       Models of networks of ontologiesGiven a network of ontologies {a mathematical formula}〈Ω,Λ〉, a model of {a mathematical formula}〈Ω,Λ〉 is a pair {a mathematical formula}〈m,Δ〉 with m a family of models indexed by Ω with {a mathematical formula}∀o∈Ω, {a mathematical formula}mo∈M(o) such that for each alignment {a mathematical formula}A∈Λ(o,o′), {a mathematical formula}mo,mo′⊨ΔA. The set of models of {a mathematical formula}〈Ω,Λ〉 is denoted by {a mathematical formula}M(〈Ω,Λ〉).
      </paragraph>
      <paragraph>
       In this respect, alignments act as model filters for the ontologies. They select the ontology interpretations which are coherent with the alignments. This allows for transferring information from one ontology to another since reducing the set of models entails more consequences in each aligned ontology.
      </paragraph>
      <paragraph label="Example 4">
       Model of a network of ontologiesHence, a model for the network of ontologies of Fig. 1 with Δ as defined in Example 3, is {a mathematical formula}〈{m1,m2,m3},Δ〉 built on any models {a mathematical formula}m1, {a mathematical formula}m2 and {a mathematical formula}m3 of ontology {a mathematical formula}o1, {a mathematical formula}o2 and {a mathematical formula}o3 such that {a mathematical formula}m3(e3)⊆m1(b1)⊆m2(d2), {a mathematical formula}m2(c2)⊆m3(b3) and {a mathematical formula}m3(f3)⊆m1(e1).
      </paragraph>
     </section>
     <section label="2.3">
      <section-title>
       Consistency, consequence and closure
      </section-title>
      <paragraph>
       A network of ontologies is consistent if it has a model. By extension, an ontology or an alignment is consistent within a network of ontologies if the network of ontologies is consistent. Hence even if an ontology is consistent when taken in isolation, it may be inconsistent when inserted in a network of ontologies. Moreover, if one of the ontologies in the network is inconsistent, then the network as a whole is inconsistent.
      </paragraph>
      <paragraph label="Example 5">
       InconsistencyA model of the network of ontologies presented in Example 2 according to the interpretation of correspondence of Example 3, retains families of models {a mathematical formula}{m1,m2,m3} satisfying all alignments, i.e., in particular, satisfying:{a mathematical formula}{a mathematical formula}{a mathematical formula} But, all models {a mathematical formula}m3 of {a mathematical formula}o3 must satisfy {a mathematical formula}m3(b3)∩m3(c3)=∅, {a mathematical formula}m3(i)∈m3(e3), and {a mathematical formula}m3(i)∈m3(c3). Moreover, all models {a mathematical formula}m2 of {a mathematical formula}o2 must satisfy {a mathematical formula}m2(d2)⊆m2(c2). Hence, {a mathematical formula}m3(b3)⊇m1(b1), {a mathematical formula}m3(b3)⊇m3(e3) and then {a mathematical formula}m3(i)∈m3(b3), which is contradictory with previous assertions. Thus, there cannot exist such a family of models and there is no model for this network of ontologies.In this example, taking any of the ontologies with only the alignments which involve them, e.g., {a mathematical formula}〈Ω,{A1,3,A2,3}〉, is a consistent network of ontologies. The following examples will also consider the network of ontologies {a mathematical formula}〈Ω′,Λ〉=〈{o1,o2,o3′}, {a mathematical formula}{A1,2,A1,3,A2,3}〉 such that {a mathematical formula}o3′ is {a mathematical formula}o3∖{i{an inline-figure}e3}.
      </paragraph>
      <paragraph>
       So far, we have not defined what it means for a formula to be the consequence of a network. There are two notions of consequences called ω-consequence and α-consequence.
      </paragraph>
      <paragraph>
       α-Consequences are correspondences which are consequences of networks of ontologies [14].
      </paragraph>
      <paragraph label="Definition 7">
       α-Consequence of networks of ontologiesGiven a finite set of ontologies Ω and a finite set of alignments Λ between pairs of ontologies in Ω, a correspondence μ between two ontologies o and {a mathematical formula}o′ in Ω is an α-consequence of {a mathematical formula}〈Ω,Λ〉 (denoted by {a mathematical formula}⊨Ω,Λμ or {a mathematical formula}〈Ω,Λ〉⊨μ) if and only if for all models {a mathematical formula}〈m,Δ〉 of {a mathematical formula}〈Ω,Λ〉, {a mathematical formula}mo,mo′⊨Δμ.
      </paragraph>
      <paragraph>
       The set of α-consequences between o and {a mathematical formula}o′ is denoted by {a mathematical formula}CnΩ,Λα(o,o′). For homogeneity of notation, we will use {a mathematical formula}CnΩ,Λα(A) for denoting {a mathematical formula}CnΩ,Λα(o,o′) when {a mathematical formula}A∈Λ(o,o′). The α-closure of a network of ontologies is its set of α-consequences: the correspondences which are satisfied in all models of the network of ontologies.
      </paragraph>
      <paragraph>
       From the alignment semantics, it is possible to decide if an alignment is a consequence of another or if the alignment makes the set of ontologies and alignments inconsistent.
      </paragraph>
      <paragraph label="Example 6">
       α-ConsequencesThe closure of {a mathematical formula}A1,3 in the network of ontologies {a mathematical formula}〈Ω′,Λ〉 of Example 5 is:{a mathematical formula} but, if the network is reduced to the two involved ontologies ({a mathematical formula}o1 and {a mathematical formula}o3′) only, the closure would be:{a mathematical formula} It is thus clear that connecting more ontologies provides more information.
      </paragraph>
      <paragraph>
       According to these definitions, {a mathematical formula}Cnα(A)=Cn〈{o,o′},{A}〉α(A) when {a mathematical formula}A∈Λ(o,o′). α-Consequences of an alignment are defined as the α-consequences of the network made of this alignment and the two ontologies it connects. The α-consequences of a particular alignment are usually larger than the alignment ({a mathematical formula}∀A∈Λ,A⊆Cnα(A)⊆CnΩ,Λα(A)). If the alignment is not satisfiable, then any correspondence is one of its α-consequences.
      </paragraph>
      <paragraph>
       Similarly, the ω-consequences of an ontology in a network are formulas that are satisfied in all models of the ontology selected by the network.
      </paragraph>
      <paragraph label="Definition 8">
       ω-Consequence of an ontology in a network of ontologiesGiven a finite set of ontologies Ω and a finite set of alignments Λ between pairs of ontologies in Ω, a formula δ in the ontology language of {a mathematical formula}o∈Ω is an ω-consequence of o in {a mathematical formula}〈Ω,Λ〉 (denoted by {a mathematical formula}o⊨Ω,Λδ) if and only if for all models {a mathematical formula}〈m,Δ〉 of {a mathematical formula}〈Ω,Λ〉, {a mathematical formula}mo⊨δ (the set of ω-consequences of o is denoted by {a mathematical formula}CnΩ,Λω(o)).
      </paragraph>
      <paragraph>
       The ω-closure of an ontology is the set of its ω-consequences. According to these definitions, {a mathematical formula}Cnω(o)=Cn〈{o},∅〉ω(o). These ω-consequences are larger than the classical consequences of the ontology ({a mathematical formula}∀o∈Ω,o⊆Cnω(o)⊆CnΩ,Λω(o)) because they rely on a smaller set of models.
      </paragraph>
      <paragraph label="Example 7">
       ω-ConsequencesThe simple consequences of the ontology {a mathematical formula}o3′ are:{a mathematical formula} while within {a mathematical formula}〈Ω′,Λ〉 of Example 5, there are even more consequences:{a mathematical formula}
      </paragraph>
      <paragraph>
       We also use the notation {a mathematical formula}Cn〈Ω,Λ〉α for {a mathematical formula}CnΩ,Λα and {a mathematical formula}Cn〈Ω,Λ〉ω for {a mathematical formula}CnΩ,Λω.
      </paragraph>
      <paragraph>
       We can now define the closure of a network of ontologies by the network of ontologies which replaces each ontology by its ω-closure and each alignment by its α-closure:{a mathematical formula}
      </paragraph>
      <paragraph label="Example 8">
       Full network closureHere is the closure of the network of ontologies {a mathematical formula}〈Ω′,Λ〉 of Example 5 (the first set is the syntactic form corresponding to the alignment or ontology, the second set is what is added by the local closure and the last set what is added by the ω-closure or α-closure):{a mathematical formula}{a mathematical formula}{a mathematical formula} The network does not introduce new assertions in the first two ontologies, but the last one receives a new assertion. Similarly, for alignments, their local closure does not provide new correspondences, but the α-closure becomes larger. These alignment closures are:{a mathematical formula}{a mathematical formula}{a mathematical formula} Such a representation is highly redundant as closures usually are.
      </paragraph>
      <paragraph>
       The closure of a network of ontologies may introduce non-empty alignments between ontologies which were not previously connected or empty. This is possible because constraints do not come locally from the alignment but from the whole network of ontologies. Such a formalism contributes to the definition of the meaning of alignments: it describes what are the consequences of ontologies with alignments.
      </paragraph>
     </section>
     <section label="2.4">
      <section-title>
       Semantic constraints
      </section-title>
      <paragraph>
       There has been many semantics proposed for alignments and networks of ontologies. For the sake of simplicity, we will only rely on the abstract framework given in Section 2.2 as long as the semantics satisfies the three following properties: There exists a sound normalisation,i.e., each network of ontologies can be represented as a normalised network having exactly the same set of models:
       <list>
        {a mathematical formula}∀〈Ω,Λ〉, {a mathematical formula}∃〈Ω,Λ′〉 such that {a mathematical formula}∀o,o′∈Ω, {a mathematical formula}|Λ′(o,o′)|=1 and {a mathematical formula}M(〈Ω,Λ〉)=M(〈Ω,Λ′〉);Downward consistency preservationon normalised networks, so that if a network is subsumed by a consistent network, then it is consistent:
       </list>
       <list>
        <list-item label="2.">
         If {a mathematical formula}〈Ω,Λ〉⊑〈Ω′,Λ′〉 and {a mathematical formula}〈Ω′,Λ′〉 is consistent, then {a mathematical formula}〈Ω,Λ〉 is consistent;
        </list-item>
       </list>
       <paragraph>
        Cn is a closure operationon normalised networks:
       </paragraph>
       <list>
        <list-item label="3.">
         {a mathematical formula}〈Ω,Λ〉⊑Cn(〈Ω,Λ〉),
        </list-item>
        <list-item label="4.">
         {a mathematical formula}Cn(〈Ω,Λ〉)⊑Cn(Cn(〈Ω,Λ〉)),
        </list-item>
        <list-item label="5.">
         {a mathematical formula}〈Ω,Λ〉⊑〈Ω′,Λ′〉⇒Cn(〈Ω,Λ〉)⊑Cn(〈Ω′,Λ′〉).
        </list-item>
       </list>
      </paragraph>
     </section>
    </section>
    <section label="3">
     <section-title>
      Belief revision
     </section-title>
     <paragraph>
      We study the design of belief revision operators for networks of ontologies. Our goal is to show how such an operator can be designed and what issues this raises. Hence, for the sake of simplicity and focus (on issues raised specifically by networks of ontologies), we concentrate on classical belief revision.
     </paragraph>
     <paragraph>
      Revision [1] considers a logical language and a consequence operation Cn which is a closure operator over sets of formulas in this language. In this work, we will take a semantic point of view and deal with semantic consequence. These notions are equivalent when the syntactic Cn is complete with respect to the semantics.
     </paragraph>
     <paragraph>
      Revision defines operators for modifying a theory (K) in the logic when some action occurs, like the knowledge that an assertion (ϕ) must be believed (revision), must not be believed (retraction), or does hold after a change (update). These operators are constrained by several postulates.
     </paragraph>
     <paragraph>
      We follow the 6 basic AGM postulates for revision [1] as reformulated by Bernhard Nebel [36] with, in parenthesis, the labels of the classification of Sven Ove Hansson [26], [18]. In these postulates, K is a deductively closed theory and {a mathematical formula}K+ϕ denotes {a mathematical formula}Cnω(K∪{ϕ}). {a mathematical formula}K+˙ϕ is the theory resulting from revising K with a new belief ϕ: {a mathematical formula}+˙1 (closure){a mathematical formula}K+˙ϕ⊇Cnω(K+˙ϕ), i.e., the result is deductively closed;{a mathematical formula}+˙2 (success){a mathematical formula}ϕ∈K+˙ϕ, i.e., the new formula should be believed;{a mathematical formula}+˙3 (inclusion){a mathematical formula}K+˙ϕ⊆K+ϕ, i.e., it should not provide more knowledge than the mere addition of the formula;{a mathematical formula}+˙4 (vacuity)If {a mathematical formula}K+ϕ is consistent, then {a mathematical formula}K+˙ϕ⊇K+ϕ, i.e., if the formula is compatible with current beliefs, then simply add it;{a mathematical formula}+˙5 (consistency)If {a mathematical formula}K+˙ϕ is inconsistent, then ϕ is inconsistent, i.e., revision should not bring inconsistency;{a mathematical formula}+˙6 (extensionality)If {a mathematical formula}ϕ≡ψ, then {a mathematical formula}K+˙ϕ≡K+˙ψ, i.e., revision should be semantically neutral. The main alteration brought by the semantic rewriting is that consistency is mentioned explicitly.
     </paragraph>
     <paragraph>
      In addition to these six basic postulates, the AGM framework comprises two supplementary postulates which are dependent on the logical language used: they express the relation between revision and conjunction. They can be expressed in this way: {a mathematical formula}+˙7 (superexpansion){a mathematical formula}K+˙(ϕ∧ψ)⊆(K+˙ϕ)+ψ;{a mathematical formula}+˙8 (subexpansion)if {a mathematical formula}(K+˙ϕ)+ψ consistent, then {a mathematical formula}K+˙(ϕ∧ψ)⊇(K+˙ϕ)+ψ; Since we are relying on ontology languages which may not have explicit conjunction, only the basic postulates will be considered.
     </paragraph>
     <paragraph>
      This framework has been criticised and improved by other authors, and many other operators have been proposed in different contexts [22]. However, the original idea has remained because its simple definition in a few independent postulates is very appealing.
     </paragraph>
     <paragraph>
      The same kind of framework has been introduced for defining an update operator ({a mathematical formula}K×˙ϕ) [31]. Revision and update can be contrasted by the following: revision operators change beliefs when knowledge about the domain has changed; update operators change beliefs when the modelled domain has changed.
     </paragraph>
     <paragraph>
      Another operator, contraction, is often considered ({a mathematical formula}K−˙ϕ, i.e., what happens when removing an assertion if one wants to guarantee that it is not deducible anymore). It is straightforward to express contraction axioms semantically, like revision axioms: {a mathematical formula}−˙1 (closure){a mathematical formula}K−˙ϕ⊇Cnω(K−˙ϕ), i.e., the result is deductively closed;{a mathematical formula}−˙2 (success)if {a mathematical formula}ϕ∉Cnω(∅), then {a mathematical formula}ϕ∉K−˙ϕ, i.e., unless a tautology, the retracted formula should not be believed;{a mathematical formula}−˙3 (inclusion){a mathematical formula}K−˙ϕ⊆K, i.e., it should not provide more knowledge than the initial theory;{a mathematical formula}−˙4 (vacuity)If {a mathematical formula}ϕ∉K then {a mathematical formula}K−˙ϕ⊇K, i.e., if the formula is not entailed by current beliefs, then they do not change;{a mathematical formula}−˙5 (recovery){a mathematical formula}K⊆(K−˙ϕ)+ϕ, i.e., contraction should not suppress more than can be recovered;{a mathematical formula}−˙6 (extensionality)If {a mathematical formula}ϕ≡ψ, then {a mathematical formula}K−˙ϕ≡K−˙ψ, i.e., contraction should be semantically neutral.
     </paragraph>
     <paragraph>
      It has been found that revision and contraction are inter-definable through the Lévi identity:{a mathematical formula} and its converse, the Harper identity:{a mathematical formula} However, this relies on a language with statement negation, so it is not directly usable with all logics, such as description logics [20].
     </paragraph>
     <paragraph>
      We focus on revision because, in the context of open systems like the semantic web, the main problem is to accumulate knowledge rather than contract it. For the same reason, we consider revision instead of update. Such operators still have their utility and could certainly be developed along the methodology presented here. We do not discuss these extensions further, instead we consider applying the most standard theory to networks of ontologies.
     </paragraph>
     <paragraph>
      Related principles have been proposed to account for belief base revision [36] which, contrary to belief revision, does not apply to closed sets of formulas but sets of axioms. Belief base revision has the advantage of being more practical (because users do not manipulate closures), however it takes the risk to be syntax-dependent. On the opposite, semantic revision [11] is syntax independent. In this paper, we consider plain revision, i.e., revision applied to closed sets instead of base revision. However, while the reasoning applies to closed sets, examples are always provided on bases (because closed sets would be too large).
     </paragraph>
    </section>
    <section label="4">
     <section-title>
      Revision in networks of ontologies
     </section-title>
     <paragraph>
      In the context of networks of ontologies, it is natural to define what must happen when an ontology is revised and what are the consequences for the other parts of the network. In addition, a network may be revised by an alignment.
     </paragraph>
     <paragraph>
      Revision may be needed at two different occasions:
     </paragraph>
     <list>
      <list-item label="•">
       When adding a formula ϕ in an ontology o, or
      </list-item>
      <list-item label="•">
       When adding a correspondence μ in an alignment A.
      </list-item>
     </list>
     <paragraph>
      Revision of a network by adding ontologies and alignments can also be considered. However, adding new ontologies does not bring new problems if they are consistent. Since they are not yet connected to other ontologies, they will be considered as connected through empty alignments. We do not consider the operations of adding new ontologies or alignments, because it is always possible to introduce empty ontologies and alignments, which do not create inconsistency and to add axioms and correspondences with the corresponding operators. Then adding alignments will be like revising by modifying these initially empty alignments.
     </paragraph>
     <paragraph>
      Hence, we only have to consider two operators:
     </paragraph>
     <list>
      <list-item label="•">
       {a mathematical formula}〈Ω,Λ〉⊞˙ϕ/o: revising the ontology o by adding the formula ϕ;
      </list-item>
      <list-item label="•">
       {a mathematical formula}〈Ω,Λ〉⊞˙μ/A: revising the alignment A by adding the correspondence μ;
      </list-item>
     </list>
     <paragraph>
      with {a mathematical formula}o∈Ω and {a mathematical formula}A∈Λ.
     </paragraph>
     <paragraph>
      Because there is no model combination that satisfies all the alignments. An operation can only trigger global inconsistency and one kind of local inconsistency.
     </paragraph>
     <paragraph>
      Finally, revision can be achieved by two means:
     </paragraph>
     <list>
      <list-item label="•">
       By retracting and adding axioms ({a mathematical formula}〈Ω±ϕ′/o′,Λ〉) for global and ω-local inconsistency;
      </list-item>
      <list-item label="•">
       By retracting and adding correspondences ({a mathematical formula}〈Ω,Λ±μ′/A′〉) for global and α-local inconsistency.
      </list-item>
     </list>
     <paragraph>
      We consider addition of axioms and correspondences within revision, because in base revision, it may be useful to complete the base so that it looses as little information as possible. However, in regular (not base) revision, addition is useless because theories are closed. Obviously, additions alone do not make a revision operator.
     </paragraph>
     <paragraph label="Example 9">
      Inconsistency and recoveryIn the following examples, we will consider {a mathematical formula}Λ′={A1,2,A1,3′={e1≥f3},A2,3}, {a mathematical formula}Ω′={o1,o2,o3′=o3∖{i{an inline-figure}e3}}, {a mathematical formula}Ω″={o1,o2″=o2∖{d2⊑c2},o3}, {a mathematical formula}Λ″={A1,2,A1,3,A2,3″=∅}, and {a mathematical formula}Ω‴={o1,o2,o3‴=o3∖{b3⊥c3}}.Starting from the network of ontologies of Example 2, several situations may be illustrated:
     </paragraph>
     <list>
      <list-item label="0.">
       {a mathematical formula}〈Ω,Λ′〉⊞˙(i{an inline-figure}b3)/o3 is an ontology revision that raises an ω-local inconsistency, which may be solved by removing {a mathematical formula}b3⊥c3 (and {a mathematical formula}b3⊥e3) or {a mathematical formula}i{an inline-figure}e3 (and {a mathematical formula}i{an inline-figure}c3) or {a mathematical formula}e3⊑c3 from {a mathematical formula}o3, but cannot be solved by removing anything from the other ontologies or alignments;
      </list-item>
      <list-item label="•">
       Pure α-local inconsistency is more difficult to encounter due to the little expressiveness of alignments. However, Fig. 2 illustrates this situation: the ontologies contain no assertions (beside that there are classes and individuals) and the alignment imposes constraints that can be satisfied by no pair of models. Hence, reducing this alignment to any three of its correspondences yields a consistent alignment which, when adding the fourth one, results in an inconsistent alignment. Consistency may be recovered by removing any of the four initial correspondences and only in this way.
      </list-item>
      <list-item label="1.">
       {a mathematical formula}〈Ω′,Λ〉⊞˙(i{an inline-figure}e3)/o3′ is an ontology revision that raises a global inconsistency, which may be solved locally by removing {a mathematical formula}b3⊥c3 (and {a mathematical formula}b3⊥e3) or {a mathematical formula}e3⊑c3 from {a mathematical formula}o3′, but can also be solved more globally, for instance, by removing {a mathematical formula}(b1≤d2) from {a mathematical formula}A1,2 (and several other assertions including {a mathematical formula}i{an inline-figure}b3 from {a mathematical formula}o3′);
      </list-item>
      <list-item label="2.">
       {a mathematical formula}〈Ω,Λ′〉⊞˙(b1≥e3)/A1,3′ is an alignment revision that raises a global inconsistency that may be solved, for instance, by removing {a mathematical formula}d2≥b1 from {a mathematical formula}A1,2 or {a mathematical formula}d2⊑c2 from {a mathematical formula}o2, but cannot be solved by modifying {a mathematical formula}A1,3 itself;
      </list-item>
      <list-item label="3.">
       {a mathematical formula}〈Ω″,Λ〉⊞˙(d2⊑c2)/o2″ is an ontology revision that raises a global inconsistency ({a mathematical formula}o2 is consistent) which may be solved, for instance, by removing {a mathematical formula}b3⊥c3 (and {a mathematical formula}b3⊥e3) from {a mathematical formula}o3 or {a mathematical formula}b1≥e3 from {a mathematical formula}A1,3, but cannot be solved by modifying anything in {a mathematical formula}o2 itself.
      </list-item>
     </list>
     <paragraph>
      A summary of the situation is presented in Fig. 3: the two possible operators (ontology or alignment revision) may entail three different types of inconsistency (two local and one global inconsistency). These three types of inconsistency can be resolved by two types of modifications (in ontologies and/or alignments). Local inconsistencies may only be raised by revision of the concerned ontology or alignment and only be solved by applying change to this ontology or alignment. Global inconsistency may be raised and solved by both operations, independently.
     </paragraph>
     <paragraph>
      The question that we consider is: can AGM revision postulates be applied to networks of ontologies?
     </paragraph>
    </section>
    <section label="5">
     <section-title>
      Revision postulates for networks of ontologies
     </section-title>
     <paragraph>
      We first provide postulates for revising alignments which should be the counterpart of postulates for revising ontologies (Section 5.1). We then provide postulates for revising networks of ontologies depending on the type of formula used for revising: an ontology formula or a correspondence (Section 5.2). Finally, we show that the global revision is a generalisation of both local revisions (Section 5.3).
     </paragraph>
     <section label="5.1">
      <section-title>
       Local alignment revision postulates
      </section-title>
      <paragraph>
       As before, revision applies to closed theories, so it uses the previously defined alignment closure ({a mathematical formula}Cnα) which corresponds to the notion of closure in logical theories. Hereby, {a mathematical formula}A+μ denotes {a mathematical formula}Cnα(A∪{μ}).
      </paragraph>
      <paragraph>
       Like there are revision operators for ontologies, it is possible to consider an alignment revision operator whose goal is to add a new correspondence to an alignment. Consider the operator {a mathematical formula}⊕˙ such that {a mathematical formula}A⊕˙μ is the result of the revision of the alignment A between ontology o and {a mathematical formula}o′ by a new correspondence μ. Here are postulates corresponding to those of AGM: {a mathematical formula}⊕˙1 (closure){a mathematical formula}A⊕˙μ⊇Cnα(A⊕˙μ){a mathematical formula}⊕˙2 (success){a mathematical formula}μ∈A⊕˙μ, i.e., {a mathematical formula}A⊕˙μ⊨μ{a mathematical formula}⊕˙3 (inclusion){a mathematical formula}A⊕˙μ⊆A+μ{a mathematical formula}⊕˙4 (vacuity)If {a mathematical formula}A+μ consistent, then {a mathematical formula}A⊕˙μ⊇A+μ;{a mathematical formula}⊕˙5 (consistency)If {a mathematical formula}A⊕˙μ inconsistent, then μ is inconsistent{a mathematical formula}⊕˙6 (extensionality)If {a mathematical formula}μ≡ν then {a mathematical formula}A⊕˙μ≡A⊕˙ν
      </paragraph>
      <paragraph>
       For an alignment to be inconsistent it is necessary that there is no model for this alignment. This may be the case when it relates entities whose interpretation cannot be related through the interpretation of the relation.
      </paragraph>
      <paragraph>
       As an example, algebras of relations may be used as a systematic treatment of relations [15]. In such a case, the empty relation (which can be inferred) denotes the inconsistency of the alignment: such a situation cannot exist and, hence, has no model. A correspondence with the empty relation is already an inconsistent alignment on its own. This can be obtained if the relations between classes can be strict containment, interpreted as strict inclusion. In this case, if an alignment contains both correspondences {a mathematical formula}〈c,c′,⊏〉 and {a mathematical formula}〈c,c′,⊐〉, then the alignment is inconsistent (the correspondence {a mathematical formula}〈c,c′,∅〉 can be deduced).
      </paragraph>
      <paragraph>
       Such a revision operator is local in two senses: it is constrained only by the alignment and the two ontologies, and it only modifies the alignment. Instead we would like to consider a revision of networks of ontologies.
      </paragraph>
     </section>
     <section label="5.2">
      <section-title>
       Global revision postulates
      </section-title>
      <paragraph>
       Similarly as before, two addition operators (note the lack of the dot on ⊞) introduce an axiom in an ontology or a correspondence in an alignment:{a mathematical formula} and{a mathematical formula}
      </paragraph>
      <paragraph>
       Revision operators, both for alignments and ontologies, may be global, i.e., such that the closure and consequence operator in the postulates are defined with respect to the whole network of ontologies.
      </paragraph>
      <paragraph>
       Consider the operator {a mathematical formula}⊞˙ such that {a mathematical formula}〈Ω,Λ〉⊞˙μ/A is the result of the revision of {a mathematical formula}〈Ω,Λ〉 by a new correspondence μ in the alignment {a mathematical formula}A∈Λ, here are the AGM-like postulates: {a mathematical formula}⊞˙1 (closure){a mathematical formula}〈Ω,Λ〉⊞˙μ/A⊒Cn(〈Ω,Λ〉⊞˙μ/A);{a mathematical formula}⊞˙2 (success){a mathematical formula}μ∈Cn〈Ω,Λ〉⊞˙μ/Aα(o,o′) with o and {a mathematical formula}o′ the ontologies aligned by A, i.e., {a mathematical formula}〈Ω,Λ〉⊞˙μ/A⊨μ;{a mathematical formula}⊞˙3 (inclusion){a mathematical formula}〈Ω,Λ〉⊞˙μ/A⊑〈Ω,Λ〉⊞μ/A;{a mathematical formula}⊞˙4 (vacuity)If {a mathematical formula}〈Ω,Λ〉⊞μ/A consistent, then {a mathematical formula}〈Ω,Λ〉⊞˙μ/A⊒〈Ω,Λ〉⊞μ/A;{a mathematical formula}⊞˙5 (consistency)If {a mathematical formula}〈Ω,Λ〉⊞˙μ/A inconsistent, then μ is inconsistent;{a mathematical formula}⊞˙6 (extensionality)If {a mathematical formula}μ≡ν, then {a mathematical formula}〈Ω,Λ〉⊞˙μ/A≡〈Ω,Λ〉⊞˙ν/A;
      </paragraph>
      <paragraph>
       The same can be obtained for ontology revision. Consider the operator {a mathematical formula}⊞˙ such that {a mathematical formula}〈Ω,Λ〉⊞˙ϕ/o is the result of the revision of {a mathematical formula}〈Ω,Λ〉 by a new formula ϕ in the ontology {a mathematical formula}o∈Ω, the postulates are: {a mathematical formula}⊞˙1 (closure){a mathematical formula}〈Ω,Λ〉⊞˙ϕ/o⊒Cn(〈Ω,Λ〉⊞˙ϕ/o){a mathematical formula}⊞˙2 (success){a mathematical formula}ϕ∈Cn〈Ω,Λ〉⊞˙ϕ/oω(o);{a mathematical formula}⊞˙3 (inclusion){a mathematical formula}〈Ω,Λ〉⊞˙ϕ/o⊑〈Ω,Λ〉⊞ϕ/o{a mathematical formula}⊞˙4 (vacuity)If {a mathematical formula}〈Ω,Λ〉⊞ϕ/o consistent, then {a mathematical formula}〈Ω,Λ〉⊞˙ϕ/o⊒〈Ω,Λ〉⊞ϕ/o;{a mathematical formula}⊞˙5 (consistency)If {a mathematical formula}〈Ω,Λ〉⊞˙ϕ/o inconsistent, then ϕ is inconsistent{a mathematical formula}⊞˙6 (extensionality)If {a mathematical formula}ϕ≡ψ, then {a mathematical formula}〈Ω,Λ〉⊞˙ϕ/o≡〈Ω,Λ〉⊞˙ψ/o
      </paragraph>
      <paragraph>
       Revision is syntax independent.
      </paragraph>
     </section>
     <section label="5.3">
      <section-title>
       Properties
      </section-title>
      <paragraph>
       These network revision operators are generalisations of their local counterparts, in the sense that, if the network of ontologies is reduced to one ontology or a pair of aligned ontologies, then the simple use of valid revision operators on ontologies or alignments are valid revision operators on the network.
      </paragraph>
      <paragraph label="Proposition 1">
       If{a mathematical formula}+˙satisfies{a mathematical formula}+˙1–6, then the operation{a mathematical formula}⊞˙defined as{a mathematical formula}satisfies{a mathematical formula}⊞˙1–6.
      </paragraph>
      <paragraph label="Lemma 1">
       The proof takes advantage of the following lemma: Let o and{a mathematical formula}o′be two ontologies,{a mathematical formula}
      </paragraph>
      <paragraph label="Proof of Lemma 1">
       If {a mathematical formula}o⊆o′ then {a mathematical formula}〈{o},∅〉⊑〈{o′},∅〉, because there exists a morphism h mapping o to {a mathematical formula}h(o)=o′ and this satisfies {a mathematical formula}o⊆h(o). The conditions on k are trivially valid. Then, by the third property of Cn as a closure, {a mathematical formula}Cn(〈{o},∅〉)⊑Cn(〈{o′},∅〉).  □
      </paragraph>
      <paragraph label="Proof of Proposition 1">
       ({a mathematical formula}⊞˙1): is satisfied because Cn is a closure operation (2nd constraint).({a mathematical formula}⊞˙2): By {a mathematical formula}+˙2, {a mathematical formula}ϕ∈o+˙ϕ, thus {a mathematical formula}ϕ∈Cnω(o+˙ϕ). Since {a mathematical formula}Cnω(o+˙ϕ)⊆Cn〈{o+˙ϕ},∅〉ω(o+˙ϕ), hence, {a mathematical formula}ϕ∈Cn〈{o+˙ϕ},∅〉ω(o+˙ϕ)=Cn〈{o},∅〉⊞˙ϕ/oω(o).({a mathematical formula}⊞˙3): By {a mathematical formula}+˙3, {a mathematical formula}o+˙ϕ⊆o+ϕ, hence {a mathematical formula}Cn(〈{o+˙ϕ},∅〉)⊑Cn(〈{o+ϕ},∅〉) (by Lemma 1). But {a mathematical formula}〈{o},∅〉⊞˙ϕ/o=Cn(〈{o+˙ϕ},∅〉) and {a mathematical formula}〈{o},∅〉⊞ϕ/o=Cn(〈{o+ϕ},∅〉), so {a mathematical formula}〈{o},∅〉⊞˙ϕ/o⊑〈{o},∅〉⊞ϕ/o.({a mathematical formula}⊞˙4): If {a mathematical formula}〈{o},∅〉⊞ϕ/o is consistent, then {a mathematical formula}o+ϕ is consistent because {a mathematical formula}〈{o},∅〉⊞ϕ/o=Cn(〈{o+ϕ},∅〉) and the models of {a mathematical formula}Cn(〈{o+ϕ},∅〉) are collections containing only models of {a mathematical formula}o+ϕ. {a mathematical formula}+˙4 entails that {a mathematical formula}o+ϕ⊆o+˙ϕ. By Lemma 1, this means that {a mathematical formula}Cn(〈{o+ϕ},∅〉)⊑Cn(〈{o+˙ϕ},∅〉), i.e., {a mathematical formula}〈{o},∅〉⊞ϕ/o⊑〈{o},∅〉⊞˙ϕ/o.({a mathematical formula}⊞˙5): If {a mathematical formula}〈{o},∅〉⊞˙ϕ/o is inconsistent, then {a mathematical formula}Cn(〈{o+˙ϕ},∅〉) has no model, hence {a mathematical formula}〈{o+˙ϕ},∅〉 has no model either. This means that {a mathematical formula}o+˙ϕ is inconsistent because there is no alignment to constrain the models of {a mathematical formula}o+˙ϕ. Hence, by {a mathematical formula}+˙5, ϕ is inconsistent.({a mathematical formula}⊞˙6): If {a mathematical formula}ϕ≡ψ, then, by {a mathematical formula}+˙6, {a mathematical formula}o+˙ϕ≡o+˙ψ. Since {a mathematical formula}〈{o},∅〉⊞˙ϕ/o=Cn(〈{o+˙ϕ},∅〉) and {a mathematical formula}〈{o},∅〉⊞˙ψ/o=Cn(〈{o+˙ψ},∅〉), by applying Lemma 1 in both directions, this entails {a mathematical formula}〈{o},∅〉⊞˙ϕ/o≡〈{o},∅〉⊞˙ψ/o.  □
      </paragraph>
      <paragraph label="Proposition 2">
       The same applies for alignments: If{a mathematical formula}⊕˙satisfies{a mathematical formula}⊕˙1–6, then the operation{a mathematical formula}⊞˙defined as{a mathematical formula}such that A is an alignment between o and{a mathematical formula}o′, satisfies{a mathematical formula}⊞˙1–6.
      </paragraph>
      <paragraph label="Proof of Lemma 2">
       We use a similar lemma as above: Let A and{a mathematical formula}A′be two alignments between two ontologies o and{a mathematical formula}o′,{a mathematical formula}If {a mathematical formula}A⊆A′, then {a mathematical formula}〈{o,o′},{A}〉⊑〈{o,o′},{A′}〉, because there exists h such that {a mathematical formula}h(o)=o and {a mathematical formula}h(o′)=o′ and k such that {a mathematical formula}k(A)=A′ which satisfy the conditions of Definition 4. Then, by the third property of Cn as a closure, {a mathematical formula}Cn(〈{o,o′},{A}〉)⊑Cn(〈{o,o′},{A′}〉).  □
      </paragraph>
      <paragraph label="Proof of Proposition 2">
       ({a mathematical formula}⊞˙1): {a mathematical formula}Cn(〈{o,o′},{A⊕˙μ}〉)⊒Cn(Cn(〈{o,o′},{A⊕˙μ}〉)) because Cn is a closure operation (2nd constraint).({a mathematical formula}⊞˙2): By {a mathematical formula}⊕˙2, {a mathematical formula}μ∈A⊕˙μ, hence, {a mathematical formula}μ∈Cnα(A⊕˙μ). Moreover, {a mathematical formula}Cnα(A⊕˙μ)=Cn〈{o,o′},{A⊕˙μ}〉α(o,o′)=CnCn(〈{o,o′},{A⊕˙μ})〉α(o,o′)=Cn〈{o,o′},{A}〉⊞˙μ/Aα(o,o′), because Cn is a closure operation (2nd constraint), so {a mathematical formula}μ∈Cn〈{o,o′},{A}〉⊞˙μ/Aα(o,o′).({a mathematical formula}⊞˙3): By {a mathematical formula}⊕˙3, {a mathematical formula}A⊕˙μ⊆A+μ, hence, {a mathematical formula}Cn(〈{o,o′},{A⊕˙μ}〉)⊑Cn(〈{o,o′},{A+μ}〉), by Lemma 2. Thus, {a mathematical formula}〈{o,o′},{A}〉⊞˙μ/A⊑〈{o,o′},{A}〉⊞μ/A.({a mathematical formula}⊞˙4): By {a mathematical formula}⊕˙4, if {a mathematical formula}A+μ is consistent, then {a mathematical formula}A+μ⊆A⊕˙μ, hence by Lemma 2, {a mathematical formula}Cn(〈{o,o′},{A+μ}〉)⊑Cn(〈{o,o′},{A⊕˙μ}〉), which means that {a mathematical formula}〈{o,o′},{A}〉⊞μ/A⊑〈{o,o′},{A}〉⊞˙μ/A. Since if {a mathematical formula}A+μ is not consistent, then {a mathematical formula}〈{o,o′},{A}〉⊞μ/A is not consistent either, this proves the property.({a mathematical formula}⊞˙5): {a mathematical formula}〈{o,o′},{A}〉⊞˙μ/A is inconsistent, so {a mathematical formula}Cn(〈{o,o′},{A⊕˙μ}〉) has no model. Consequently, {a mathematical formula}〈{o,o′},{A⊕˙μ}〉 has no model either. This means that there exists no pair of models of o and {a mathematical formula}o′ satisfying {a mathematical formula}A⊕˙μ (though, by hypothesis, there are pairs of models satisfying A). Hence {a mathematical formula}A⊕˙μ is inconsistent and, by {a mathematical formula}⊕˙5, μ is inconsistent.({a mathematical formula}⊞˙6): {a mathematical formula}〈{o,o′},{A}〉⊞˙μ/A=Cn(〈{o,o′},{A⊕˙μ}〉) and {a mathematical formula}〈{o,o′},{A}〉⊞˙ν/A=Cn(〈{o,o′},{A⊕˙ν}〉). If {a mathematical formula}μ≡ν, then by {a mathematical formula}⊕˙6, {a mathematical formula}A⊕˙μ≡A⊕˙ν. Hence, by applying Lemma 2 in both directions, this entails {a mathematical formula}〈{o,o′},{A}〉⊞˙μ/A≡〈{o,o′},{A}〉⊞˙ν/A.  □
      </paragraph>
      <paragraph>
       This last revision operation may not be the only one, but one that minimises modifications to the ontologies. Indeed, as soon as the ontologies and the new correspondence are consistent, it is always possible to restore consistency through revising the alignments.
      </paragraph>
      <paragraph>
       These properties are interesting in their own right but do not provide any concrete global revision operation. It would be convenient to reduce revision in networks of ontologies to local operators for ontologies and alignments. However, this is not generally possible as we will show in Section 6.2.
      </paragraph>
     </section>
    </section>
    <section label="6">
     <section-title>
      Partial meet revision operators
     </section-title>
     <paragraph>
      We illustrate here how concrete revision operators may be defined for networks of ontologies by reusing the classical framework of partial meet revision. For that purpose, we first introduce such an operator for alignments (Section 6.1). We then consider the definition of global revision operators based on the regular ontology revision operators and this alignment revision operator (Section 6.2). Although such an operator can be defined, it would be too local (disallowing ontology revision by an alignment change or vice versa). Hence we introduce a partial meet revision operator for networks of ontologies that works globally (Section 6.3).
     </paragraph>
     <section label="6.1">
      <section-title>
       Partial-meet revision operators for alignments
      </section-title>
      <paragraph>
       Partial-meet revision [1] is a very general form of revision operator satisfying the postulates. Such an operator is grounded on a selection operation γ on the maximal subsets of K which remain consistent when adding ϕ{sup:1} (denoted by {a mathematical formula}K⊤ϕ):{a mathematical formula}
      </paragraph>
      <paragraph>
       Partial meet revision is defined by:{a mathematical formula} such that if {a mathematical formula}K⊤ϕ≠∅, then {a mathematical formula}γ(K⊤ϕ)≠∅.
      </paragraph>
      <paragraph>
       When γ selects all sets in {a mathematical formula}K⊤ϕ, then the operator is called full meet revision and when it selects only one such set, it is the maxichoice revision.
      </paragraph>
      <paragraph>
       All ingredients for defining partial meet revision on alignments are already available:
      </paragraph>
      <list>
       <list-item label="•">
        Alignments can be considered as closed by the {a mathematical formula}Cnα function;
       </list-item>
       <list-item label="•">
        Models for alignments have been defined in Section 2;
       </list-item>
       <list-item label="•">
        Inclusion for defining ⊤ is simply set inclusion.
       </list-item>
      </list>
      <paragraph>
       Hence, a partial meet revision operator on alignments can be defined as:{a mathematical formula} such that{a mathematical formula}
      </paragraph>
      <paragraph label="Proof">
       Partial meet revision on alignments satisfies the six basic revision postulates for alignment revision.{a mathematical formula}⊕˙1:{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}⊕˙2: {a mathematical formula}A⊕˙μ=⋂γ(A⊤μ)+μ=Cnα(⋂γ(A⊤μ)∪{μ}) hence {a mathematical formula}μ∈A⊕˙μ because it is already in the set to be closed (and the closure only adds elements to this set).{a mathematical formula}⊕˙3: {a mathematical formula}A⊕˙μ=⋂γ(A⊤μ)+μ⊆{a mathematical formula}A+μ because {a mathematical formula}∀A′⊆A⊤μ,A′⊆A, hence {a mathematical formula}⋂γ(A⊤μ)⊆A.{a mathematical formula}⊕˙4: if {a mathematical formula}A+μ is consistent, then {a mathematical formula}A⊤μ={A}, hence {a mathematical formula}γ(A⊤μ)=⋂γ(A⊤μ)=A, so {a mathematical formula}A+μ=A⊕˙μ.{a mathematical formula}⊕˙5: if {a mathematical formula}A⊕˙μ is inconsistent, then {a mathematical formula}A⊕˙μ=⋂γ(A⊤μ)+μ is inconsistent. If μ is consistent, then {a mathematical formula}∃A′⊆A; {a mathematical formula}A′+μ consistent (at worst, {a mathematical formula}A′=∅), then {a mathematical formula}A⊤μ≠∅, then γ selects one such {a mathematical formula}A′ (because otherwise, {a mathematical formula}γ(A⊤μ)=∅ which is prohibited by the definition of γ). This implies that {a mathematical formula}⋂γ(A⊤μ)⊆A′, hence {a mathematical formula}⋂γ(A⊤μ)+μ is consistent. This contradicts the hypothesis. Hence, if {a mathematical formula}A⊕˙μ is inconsistent, then μ is.{a mathematical formula}⊕˙6: {a mathematical formula}μ≡ν means that {a mathematical formula}Cnα({μ})=Cnα({ν}). Hence, {a mathematical formula}M(A+μ)=M(A+ν) (because {a mathematical formula}A+μ=Cnα(A∪{μ})=Cnα(A∪Cnα({μ}))). This means that {a mathematical formula}A⊤μ=A⊤ν and thus {a mathematical formula}A⊕˙μ≡A⊕˙ν (with the same argument as before).  □
      </paragraph>
     </section>
     <section label="6.2">
      <section-title>
       Local revision is not sufficient
      </section-title>
      <paragraph>
       A tempting approach to define revision operators for networks of ontologies would be to start from local revision operators and apply them where (in the alignment or ontology in which) revision occurs. This would have the benefit of defining revision operators for networks of ontologies only by composing local revision operators. Indeed, one would like that:{a mathematical formula} and, for alignment revision, that:{a mathematical formula}
      </paragraph>
      <paragraph>
       Unfortunately, this does not work properly in general. There are two problems related to the inconsistency and modification steps of Fig. 3.
      </paragraph>
      <paragraph>
       The first problem when considering networks of ontologies is that the notion of consistency to take into account is now related to the network of ontologies and not anymore to the locally affected ontology or alignment. It may happen that the added formula or correspondence does not lead to any local inconsistency (see Example 10).
      </paragraph>
      <paragraph label="Example 10">
       Local revision is not sufficient to solve global revisionThis is the case, in Example 5, if one starts with {a mathematical formula}〈Ω,Λ′〉 and wants to revise {a mathematical formula}〈Ω,Λ′〉⊞˙(b1≥e3)/A1,3′. The resulting {a mathematical formula}A1,3 is not inconsistent with respect to {a mathematical formula}o1 and {a mathematical formula}o3. In this case, by postulate {a mathematical formula}⊕˙3 and {a mathematical formula}⊕˙4, {a mathematical formula}A1,3′⊕˙(b1≥e3)=A1,3′+(b1≥e3)=A1,3 and the network as a whole ({a mathematical formula}〈Ω,Λ〉) would remain globally inconsistent.
      </paragraph>
      <paragraph>
       This problem is relatively easy to solve by replacing {a mathematical formula}M(K′+ϕ) and {a mathematical formula}M(A′+μ) by {a mathematical formula}M(〈Ω,Λ〉+ϕ/K′) and {a mathematical formula}M(〈Ω,Λ〉+μ/A′) in the definitions of {a mathematical formula}K⊤ϕ and {a mathematical formula}A⊤μ respectively.
      </paragraph>
      <paragraph>
       The second problem is related to the way to apply revision. Because of the consistency postulate ({a mathematical formula}⊞˙5), it may happen that {a mathematical formula}〈Ω,Λ〉⊞˙ϕ/o is inconsistent with {a mathematical formula}〈Ω,Λ〉 while {a mathematical formula}o+˙ϕ is consistent. The inconsistency could be brought by the incompatibility of the remaining models of {a mathematical formula}o+˙ϕ with the rest of the network. The same may apply with alignment revision: it may be the case that {a mathematical formula}〈Ω,Λ〉 is consistent, that {a mathematical formula}A⊕˙μ is consistent but that {a mathematical formula}〈Ω,Λ〉⊞˙μ/A=Cn(〈Ω,Λ∖{A}∪{A⊕˙μ}〉) is inconsistent.
      </paragraph>
      <paragraph>
       This is what happens in Example 10, the resulting network of ontologies would be inconsistent, while the revising correspondence ({a mathematical formula}b1≥e3) and even the revised alignment ({a mathematical formula}A1,3) would be consistent, thus violating {a mathematical formula}⊞˙5.
      </paragraph>
      <paragraph>
       This shows that it is not safe to revise a network of ontologies with one formula or one correspondence by only applying a local revision operator.
      </paragraph>
      <paragraph>
       However, this does not prevent anyone from taking advantage of local revision operators. Indeed, if applying such a local revision operator restores consistency, then it will be a valid revision operator and even a minimal one with regard to the locality of the changes that have been made (see Section 7). But there may be cases where more is needed for restoring consistency.
      </paragraph>
     </section>
     <section label="6.3">
      <section-title>
       Partial-meet revision operators for networks of ontologies
      </section-title>
      <paragraph>
       It is thus necessary to consider revision operators that encompass the whole network of ontologies.
      </paragraph>
      <paragraph>
       There can be two maximal consistent subnetwork operators depending on what is to be revised (ontology or alignment):
      </paragraph>
      <paragraph label="Definition 9">
       Maximal consistent subnetworks of ontologiesGiven a network of ontologies {a mathematical formula}〈Ω,Λ〉, an ontology {a mathematical formula}o∈Ω (resp. an alignment {a mathematical formula}A∈Λ) and an assertion ϕ (resp. a correspondence μ), the set of maximal consistent subnetworks of {a mathematical formula}〈Ω,Λ〉 with respect to ϕ in o (resp. μ in A) is defined by:{a mathematical formula}{a mathematical formula}
      </paragraph>
      <paragraph>
       These operators return sets of networks of ontologies which are subnetwork of {a mathematical formula}〈Ω,Λ〉 and which are still consistent when the corresponding element is added.
      </paragraph>
      <paragraph label="Example 11">
       Maximal consistent subnetworksConsider the following particular revisions:
       <list>
        {a mathematical formula}〈Ω′,Λ〉⊞˙(i{an inline-figure}e3)/o3′{a mathematical formula}〈Ω,Λ′〉⊞˙(b1≥e3)/A1,3′,{a mathematical formula}〈Ω″,Λ〉⊞˙(d2⊑c2)/o2″,{a mathematical formula}〈Ω,Λ″〉⊞˙(c2⊑b3)/A2,3″,{a mathematical formula}〈Ω‴,Λ〉⊞˙(b3⊥c3)/o3‴,Most of the inferred assertions are in the alignments. Because
       </list>
       <paragraph>
        {a mathematical formula}CnΩ,Λω(o3) is inconsistent, it is not possible to perform the revision without modifying it. On the contrary, the closure of none of the other ontologies nor the alignments are inconsistent, hence there may be revisions not involving their modification. Indeed, all sets alter {a mathematical formula}o3 and only one set, {a mathematical formula}S4, is reduced to {a mathematical formula}o3 modifications.
       </paragraph>
      </paragraph>
      <paragraph label="Example 12">
       Fig. 4 displays an extreme example of a network. This network is inconsistent in the interpretation of Example 3, though none of its ontologies nor alignments is inconsistent. The inconsistency manifests itself by starting with the network without one of the correspondences and revising it by this correspondence. It can only be solved by suppressing one of the other correspondences.
      </paragraph>
      <paragraph>
       For generalising partial meet revision, we need a conjunction (meet) operator between networks of ontologies. It could be introduced generally in a standard way from subsumption, as the greatest common subsumee, but it would not necessarily be unique. However, because we are in a specific situation – all considered networks of ontologies subsume one specific network –, it is possible to use a fibred meet (denoted {a mathematical formula}⊓‾).
      </paragraph>
      <paragraph label="Definition 10">
       Fibred meet of networks of ontologies(See [16].) Given a network of ontologies {a mathematical formula}〈Ω,Λ〉 and a finite family of networks of ontologies, {a mathematical formula}{〈Ωj,Λj〉}j∈J, such that {a mathematical formula}∃〈hj,kj〉j∈J, pairs of bijective morphisms: {a mathematical formula}hj:Ωj⟶Ω and {a mathematical formula}kj:Λj⟶Λ with {a mathematical formula}∀A∈Λ(o,o′), {a mathematical formula}kj(A)∈Λ(hj(o),hj(o′)), the fibred meet of {a mathematical formula}{〈Ωj,Λj〉}j∈J with respect to {a mathematical formula}〈Ω,Λ〉 is{a mathematical formula}
      </paragraph>
      <paragraph>
       The fibred meet is a pull back in the category of networks of ontologies [16], hence it is unique (up to homomorphisms). In the context of consistent subnetworks, a fibred meet can be defined with the morphisms implicitly defined by the subnetwork relation. We call such a fibred meet the normal fibred meet generated by subnetworks and note it with {a mathematical formula}⊓˙. Such a fibred meet is well-defined and unique for any set of subnetworks of a particular generator network such as the set of maximal consistent subnetworks. The normal fibred meet generated by consistent subnetworks is always consistent since it is subsumed by consistent networks (downward consistency preservation). Moreover, if the ontologies in the networks are closed, then the fibred meet is closed as well (because it intersects closed networks). Hence, it is now possible to define partial meet revision operators for networks of ontologies:
      </paragraph>
      <paragraph label="Definition 11">
       Partial meet revision operators for networks of ontologiesGiven a network of ontologies {a mathematical formula}〈Ω,Λ〉, an ontology {a mathematical formula}o∈Ω (resp. an alignment {a mathematical formula}A∈Λ) and an assertion ϕ (resp. a correspondence μ), partial meet revision is defined by:{a mathematical formula} and{a mathematical formula}
      </paragraph>
      <paragraph>
       Partial meet revision on networks of ontologies is indeed a valid revision operator.
      </paragraph>
      <paragraph label="Proof">
       Partial meet revision on networks of ontologies satisfies the six basic revision postulates for revision of networks of ontologies.We provide first the proof for alignment revision, then ontology revision. {a mathematical formula}⊞˙1 (closure){a mathematical formula}{a mathematical formula} Hence, {a mathematical formula}〈Ω,Λ〉⊞˙μ/A⊒Cn(〈Ω,Λ〉⊞˙μ/A).{a mathematical formula}⊞˙2 (success){a mathematical formula}〈Ω,Λ〉⊞˙μ/A=⨅˙γ(〈Ω,Λ〉⫪μ/A)⊞μ/A=Cn(〈Ω′,Λ′∖{A}∪{A+μ}〉) for {a mathematical formula}〈Ω′,Λ′〉=⨅˙γ(〈Ω,Λ〉⫪μ/A). Hence, if o and {a mathematical formula}o′ are the ontologies involved in μ, μ belongs to an alignment between o and {a mathematical formula}o′ and so {a mathematical formula}μ∈Cn〈Ω,Λ〉⊞˙μ/Aα(o,o′) (because {a mathematical formula}Cnα is a closure operation). Thus, {a mathematical formula}〈Ω,Λ〉⊞˙μ/A⊨μ.{a mathematical formula}⊞˙3 (inclusion){a mathematical formula}∀〈Ω′,Λ′〉∈〈Ω,Λ〉⫪μ/A,〈Ω′,Λ′〉⊑〈Ω,Λ〉, hence {a mathematical formula}⨅˙γ(〈Ω,Λ〉⫪μ/A)⊑〈Ω,Λ〉. But, {a mathematical formula}〈Ω,Λ〉⊞˙μ/A=⨅˙γ(〈Ω,Λ〉⫪μ/A)⊞μ/A, thus {a mathematical formula}〈Ω,Λ〉⊞˙μ/A⊑〈Ω,Λ〉⊞μ/A.{a mathematical formula}⊞˙4 (vacuity)If {a mathematical formula}〈Ω,Λ〉⊞μ/A is consistent, then {a mathematical formula}〈Ω,Λ〉⫪μ/A={〈Ω,Λ〉}, hence {a mathematical formula}γ(〈Ω,Λ〉⫪μ/A)={〈Ω,Λ〉}, so {a mathematical formula}⨅˙γ(〈Ω,Λ〉⫪μ/A)⊞μ/A=〈Ω,Λ〉⊞μ/A, i.e., {a mathematical formula}〈Ω,Λ〉⊞˙μ/A=〈Ω,Λ〉⊞μ/A.{a mathematical formula}⊞˙5 (consistency)Assuming that {a mathematical formula}〈Ω,Λ〉⊞˙μ/A is inconsistent, so {a mathematical formula}⨅˙γ(〈Ω,Λ〉⫪μ/A)⊞μ/A is. If μ is consistent, then {a mathematical formula}∃〈Ω′,Λ′〉⊑〈Ω,Λ〉 such that {a mathematical formula}〈Ω,Λ〉⊞μ/A consistent (at worst, {a mathematical formula}〈Ω′,Λ′〉=〈∅,∅〉), and then {a mathematical formula}〈Ω,Λ〉⫪μ/A≠∅, then {a mathematical formula}γ(〈Ω,Λ〉⫪μ/A)≠∅ (because it is prohibited by the definition of γ). Moreover, {a mathematical formula}∀〈Ω′,Λ′〉∈γ(〈Ω,Λ〉⫪μ/A), {a mathematical formula}〈Ω′,Λ′〉⊞μ/A is consistent, thus {a mathematical formula}⨅˙γ(〈Ω,Λ〉⫪μ/A)⊞μ/A is consistent. This is because for any {a mathematical formula}〈Ω′,Λ′〉∈γ(〈Ω,Λ〉⫪μ/A), {a mathematical formula}⨅˙γ(〈Ω,Λ〉⫪μ/A)⊑〈Ω′,Λ′〉, hence, due to downward consistency preservation, since {a mathematical formula}〈Ω′,Λ′〉⊞μ/A is consistent, {a mathematical formula}⨅˙γ(〈Ω,Λ〉⫪μ/A)⊞μ/A is consistent too. This contradicts the hypothesis that {a mathematical formula}〈Ω,Λ〉⊞μ/A is inconsistent. Hence, if {a mathematical formula}⨅˙γ(〈Ω,Λ〉⫪μ/A)⊞μ/A is inconsistent, then μ is.{a mathematical formula}⊞˙6 (extensionality){a mathematical formula}μ≡ν means that both correspondences raise the same constraints on models, hence {a mathematical formula}〈Ω,Λ〉⫪μ/A=〈Ω,Λ〉⫪ν/A, so {a mathematical formula}⨅˙γ(〈Ω,Λ〉⫪μ/A)=⨅˙γ(〈Ω,Λ〉⫪ν/A), thus {a mathematical formula}⨅˙γ(〈Ω,Λ〉⫪μ/A)⊞μ/A≡⨅˙γ(〈Ω,Λ〉⫪ν/A)⊞ν/A, i.e., {a mathematical formula}〈Ω,Λ〉⊞˙μ/A≡〈Ω,Λ〉⊞˙ν/A. For ontology revision, this gives: {a mathematical formula}⊞˙1 (closure){a mathematical formula}{a mathematical formula} Hence, {a mathematical formula}〈Ω,Λ〉⊞˙ϕ/o⊒Cn(〈Ω,Λ〉⊞˙ϕ/o).{a mathematical formula}⊞˙2 (success){a mathematical formula}〈Ω,Λ〉⊞˙ϕ/o=⨅˙γ(〈Ω,Λ〉⫪ϕ/o)⊞ϕ/o=Cn(〈Ω′∖{o}∪{o+ϕ},Λ′〉) for {a mathematical formula}〈Ω′,Λ′〉=⨅˙γ(〈Ω,Λ〉⫪ϕ/o). Hence, ϕ belongs to the ontology {a mathematical formula}oϕ (the ontology mapped to o in {a mathematical formula}Ω′). Thus {a mathematical formula}ϕ∈Cn〈Ω,Λ〉⊞˙ϕ/oω(oϕ) (because {a mathematical formula}Cnω is a closure operation). Consequently, {a mathematical formula}oϕ⊨〈Ω,Λ〉⊞˙ϕ/oϕ.{a mathematical formula}⊞˙3 (inclusion){a mathematical formula}∀〈Ω′,Λ′〉∈〈Ω,Λ〉⫪ϕ/o,〈Ω′,Λ′〉⊑〈Ω,Λ〉, hence {a mathematical formula}⨅˙γ(〈Ω,Λ〉⫪ϕ/o)⊑〈Ω,Λ〉. But, {a mathematical formula}〈Ω,Λ〉⊞˙ϕ/o=⨅˙γ(〈Ω,Λ〉⫪ϕ/o)⊞ϕ/o, thus {a mathematical formula}〈Ω,Λ〉⊞˙ϕ/o⊑〈Ω,Λ〉⊞ϕ/o.{a mathematical formula}⊞˙4 (vacuity)If {a mathematical formula}〈Ω,Λ〉⊞ϕ/o is consistent, then {a mathematical formula}〈Ω,Λ〉⫪ϕ/o={〈Ω,Λ〉}, hence {a mathematical formula}γ(〈Ω,Λ〉⫪ϕ/o)={〈Ω,Λ〉}, so {a mathematical formula}⨅˙γ(〈Ω,Λ〉⫪ϕ/o)⊞ϕ/o=〈Ω,Λ〉⊞ϕ/o, i.e., {a mathematical formula}〈Ω,Λ〉⊞˙ϕ/o=〈Ω,Λ〉⊞ϕ/o.{a mathematical formula}⊞˙5 (consistency)Assuming {a mathematical formula}〈Ω,Λ〉⊞˙ϕ/o inconsistent, then {a mathematical formula}⨅˙γ(〈Ω,Λ〉⫪ϕ/o)⊞ϕ/o is inconsistent. If ϕ is consistent, then {a mathematical formula}∃〈Ω′,Λ′〉⊑〈Ω,Λ〉 such that {a mathematical formula}〈Ω′,Λ′〉⊞ϕ/o consistent (at worst, {a mathematical formula}〈Ω′,Λ′〉=〈∅,∅〉), and then {a mathematical formula}〈Ω,Λ〉⫪ϕ/o≠∅, then {a mathematical formula}γ(〈Ω,Λ〉⫪ϕ/o)≠∅ (because of the definition of γ). Moreover, {a mathematical formula}∀〈Ω′,Λ′〉∈γ(〈Ω,Λ〉⫪ϕ/o), {a mathematical formula}〈Ω′,Λ′〉⊞ϕ/o is consistent, thus {a mathematical formula}⨅˙γ(〈Ω,Λ〉⫪ϕ/o)⊞ϕ/o is consistent. This is because for any {a mathematical formula}〈Ω′,Λ′〉∈γ(〈Ω,Λ〉⫪ϕ/o), {a mathematical formula}⨅˙γ(〈Ω,Λ〉⫪ϕ/o)⊑〈Ω′,Λ′〉, hence, by downward consistency preservation, since {a mathematical formula}〈Ω′,Λ′〉⊞ϕ/o is consistent, {a mathematical formula}⨅˙γ(〈Ω,Λ〉⫪ϕ/o)⊞ϕ/o is consistent too. This contradicts the hypothesis. Hence, if {a mathematical formula}⨅˙γ(〈Ω,Λ〉⫪ϕ/o)⊞ϕ/o is inconsistent, then ϕ is.{a mathematical formula}⊞˙6 (extensionality){a mathematical formula}ϕ≡ψ means that both correspondences raise the same constraints on models, hence {a mathematical formula}〈Ω,Λ〉⫪ϕ/o=〈Ω,Λ〉⫪ψ/o, so {a mathematical formula}⨅˙γ(〈Ω,Λ〉⫪ϕ/o)=⨅˙γ(〈Ω,Λ〉⫪ψ/o), thus {a mathematical formula}⨅˙γ(〈Ω,Λ〉⫪ϕ/o)⊞ϕ/o≡⨅˙γ(〈Ω,Λ〉⫪ψ/o)⊞ψ/o, i.e., {a mathematical formula}〈Ω,Λ〉⊞˙ϕ/o≡〈Ω,Λ〉⊞˙ψ/o. □
      </paragraph>
      <paragraph>
       Partial meet revision operators are among the most natural such operators: they select maximal consistent sub-theories and intersect them. It is thus very satisfying to obtain such operators for networks of ontologies under various semantics.
      </paragraph>
     </section>
    </section>
    <section label="7">
     <section-title>
      Minimality
     </section-title>
     <paragraph>
      The postulates, as usual, do not characterise a unique operator. Similarly, partial meet revision depends on the γ selector. Since there may be several of them, it is necessary to further define the actual operators. This is usually achieved through the search for minimal change. Therefore the main question is: what should this operator preserve as much as possible?
     </paragraph>
     <paragraph>
      Any strategy used in classical belief revision can be applied: a straightforward solution would be to minimise change in the set of models or in the set of consequences. One may want to preserve as much as possible the global models and may even introduce a distance between these models for measuring change [11]. It is also possible to minimise changes on local models, e.g., minimising the number of ontologies whose set of local models changes, or one may prefer to preserve the consequences of the network of ontologies. This relies on preserving ω- and α-consequences. It may be more useful to attempt to preserve ω-consequences only, because, most of the time, we are interested in what can be considered as a belief at one point of the network.
     </paragraph>
     <paragraph>
      that an actor can only modify what it owns: its own ontology or the alignments involving it.
     </paragraph>
     <paragraph>
      Such strategies may directly define preselection functions (γ) over networks of ontologies in {a mathematical formula}〈Ω,Λ〉⫪ϕ/o or {a mathematical formula}〈Ω,Λ〉⫪μ/A:{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula} Some are dependent on the entity, o or A that is affected by the revision operation. In such a case, the corresponding function is indexed by these entities.
     </paragraph>
     <paragraph>
      These preselection functions filter those networks of ontologies satisfying the network-based minimality presented before. They can be turned into a proper selection function γ which returns the results of the preselection if it is not empty and the whole set S otherwise.
     </paragraph>
     <paragraph>
      Such selection functions can also be combined with other more classical minimality functions introducing a comparison over the pieces of networks of ontologies affected by revision. In general, such preferences would boil down to minimising the number of affected entities (ontologies or alignments) because minimising the way they are affected is accounted by the fact that sub-networks are maximal (Definition 9). However, it is always possible to consider those o-neighbourhood preferred subnetworks which minimise the number of affected alignments or those which minimise the changes in the ontology o.
     </paragraph>
     <paragraph label="Example 13">
      Impact on the choices of minimality on the revisionDepending on the different strategies, different maximal consistent subnetworks of Table 1 are selectable as presented in Table 2. The example does not do justice to the proposed functions because all inconsistencies are global hence the consequences of revision are spread globally. Confinement is only possible in Situation 5 and no inconsistency only affects alignments.
     </paragraph>
     <paragraph>
      The confidence associated to correspondences [3] can also be used for choosing the correspondences to remove (or rather, the quantity to maximise could be the confidence in the remaining correspondences).
     </paragraph>
    </section>
    <section label="8">
     <section-title>
      Related work
     </section-title>
     <paragraph>
      To our knowledge, there has not been work directly addressing revision of networks of ontologies. We consider here related works under four different perspectives: revision within ontology and more precisely in ontology languages developed for the semantic web (Section 8.1), distributed belief revision mostly considered in multi-agent systems (Section 8.2), dealing with inconsistent alignments (Section 8.3), and dealing with inconsistency in distributed semantic systems (Section 8.4).
     </paragraph>
     <section label="8.1">
      <section-title>
       Revision in ontology languages
      </section-title>
      <paragraph>
       The absence of inconsistency in RDF renders the update/revision problem trivial. Hence, a form of contraction, that can be seen as a partial meet contraction, has been proposed for RDF and RDF Schema [25]. This could however be a basis for updating on the semantic web.
      </paragraph>
      <paragraph>
       Concerning description logics, since the seminal work of Bernhard Nebel [36], AGM principles have been generalised in two ways of interest here [20]:
      </paragraph>
      <list>
       <list-item label="•">
        revision (or retraction) is applied to sets of formulas for supplementing the absence of explicit conjunction between statements in logics like description logics. This is different from iterated revision because all formulas of the set are considered together instead of one after another. This could be applied to the work presented here.
       </list-item>
       <list-item label="•">
        revision is applied to so-called “Tarski frameworks”, i.e., logics approached under the angle of their closure operation. This would fully apply to networks of ontologies and this is the approach that has been followed here.
       </list-item>
      </list>
      <paragraph>
       The work also shows that many description logics will not have any AGM operator. However, this is achieved by using as sixth postulate, the recovery postulate ({a mathematical formula}(K+˙ϕ)∩K=K−˙(¬ϕ)) involving negation, so that the problem comes from the logics not being closed under negation when they contain role subsumption. This problem may be dealt with by introducing a set of “unwanted consequences” [41] or pseudo-negations tied to specific description logics [19], and adapting the postulates to this situation. Here we choose to avoid negation and directly address inconsistency.
      </paragraph>
      <paragraph>
       Operators have been designed for DL-Lite either using a variation of maxichoice and partial-meet [7], or using a distance between model archetypes [42]. Both approaches apply to several formulas at once. Finally, interactive revision has also been studied within one ontology [37]. They are the basis for local ontology revision.
      </paragraph>
     </section>
     <section label="8.2">
      <section-title>
       Distributed belief revision
      </section-title>
      <paragraph>
       Distributed belief revision has been considered in various ways. In general, it applies to agents each having their own sets of beliefs and communicating through message passing [33]. Hence, there are in general three main differences with revision in networks of ontologies: (a) ontologies are not public and establishing global consistency is difficult, (b) agent beliefs are different from ontologies in network of ontologies as they are competing theories of the world instead of complementary theories of the world, (c) alignments are, in general, ignored and theories are interpreted homogeneously in the same domain of interpretation. In contrast, networks of ontologies offer heterogenous but public theories which become inconsistent when put together.
      </paragraph>
      <paragraph>
       Some models deal with computing the reliability of agents in order to decide which belief to drop depending on which agents communicated it [12]. Other models have no direct communication between agents, besides enforcing the constraint that their beliefs may be updated with common knowledge [8], i.e., a belief that belongs to the beliefs of each agents and each agent believes that it belongs to other agents' beliefs. Work in this direction has been developed without this last constraint but satisfying base revision postulates [4]. The revision operator remains local (no discussion is made of join revision) but takes into account an epistemic modal operator expressing the belief of other agents.
      </paragraph>
      <paragraph>
       Finally a last model considers AGM revision in related ontologies [13]. Agent ontologies are expressed in description logics and made of two parts: the knowledge is the ontology and beliefs are axioms involving vocabularies from other ontologies. These are akin of alignments. The semantics of the whole system is given by a tuple of models but these are integrated, i.e., they share the same domain of interpretation and must be consistent together. A local revision operator is given based on a distance between tuples of models. It satisfies a principle of knowledge persistence, i.e., only alignments are modified even if the change can be in an ontology. Global consistency is thus not considered.
      </paragraph>
     </section>
     <section label="8.3">
      <section-title>
       Inconsistency repair in alignments
      </section-title>
      <paragraph>
       Operators for restoring consistency when an alignment introduces inconsistency have been introduced based on the notion of minimal conflict sets [39]. Consistency is defined by the consistency of merging both ontologies and the translation of the alignments into OWL axioms. This work only applies to two aligned ontologies instead of a network. The operator is different from standard revision since it does not insist that the new alignment be preserved but instead preserves the ontologies and reduces the alignment. In addition, contrary to the original revision, the closure of an alignment is not defined.
      </paragraph>
      <paragraph>
       Recently, there has been extensive work on alignment repair or debugging.
      </paragraph>
      <paragraph>
       Christian Meilicke [35], [34] introduced minimal incoherence/unsatisfiability preserving sub-alignments (MIPS), i.e., a minimal set of conflicting correspondences, and diagnosis, i.e., an inclusion minimal subset of an alignment whose removal would restore consistency and coherence. These notions are based on the theory of diagnosis [40]. The relation between these concepts is that a minimal hitting-set (taking one correspondence from each MIPS) will provide a diagnosis. The author then defines the notion of optimality of a diagnosis with respect to the maximisation of the confidence in the repaired alignment. This optimisation can be applied for choosing the correspondence to remove from each MIPS independently (local optimal diagnosis) or globally for extracting the diagnosis (global optimal diagnosis). Here the local/global distinction refers to MIPS instead of parts of a network of ontologies. A globally optimal diagnosis is smaller than or equal to a locally optimal diagnosis. Algorithms are given for locally optimal and globally optimal diagnoses. ContentMap [29] and then LogMap [30] correct inconsistent alignments in a similar manner.
      </paragraph>
      <paragraph>
       Debugging networks of taxonomies may be achieved by removing correspondences or subsumption statements [28]. Taxonomies are ontologies reduced to the subsumption relations so inconsistencies do not exist. Instead, users may assess correspondences or subsumption statements as wrong. The techniques are similar to those used in alignment repair [35] but no experiment is reported on networks.
      </paragraph>
      <paragraph>
       These works did not explicitly consider satisfying revision postulates and do not typically fall into its realm because the alignment between two ontologies is given as a whole instead of considering one correspondence or one assertion at once. At the exception of the latter, repair is obtained exclusively by removing correspondences from the alignment (the ontologies remain untouched). However, the various notions of minimality introduced may be considered in revision as well.
      </paragraph>
     </section>
     <section label="8.4">
      <section-title>
       Inconsistency and networks of alignments
      </section-title>
      <paragraph>
       There has been different work dealing with inconsistency within networks of ontologies. Surprisingly very few of them have considered the framework of belief revision.
      </paragraph>
      <paragraph>
       In peer-to-peer query processing, some work has focussed on answering queries in the presence of inconsistency. They usually do not plan to restore global consistency, but to answer queries in spite of inconsistency. A decentralised algorithm has been designed for detecting, at insertion time, sets of correspondences which together render the network inconsistent [9]. Such sets are recorded as “nogoods”, so the network as a whole remains inconsistent. The query answering algorithm only returns answers which are supported independently of all inconsistent sets, i.e., supported by a consistent subnetwork. In networks of peers embedding propositional logic theories, consequences are supported by consistent subsets of peers' ontologies entailing them (using correspondences) [5]. Such support subsets are assigned priorities based on priority among the involved peers. A proposition is considered entailed if there exists a support for it which has higher priority than all the supports for its negation.
      </paragraph>
      <paragraph>
       Maciej Zurawski presented a framework for dealing with inconsistency in distributed knowledge [46]. He considers that ensuring global consistency{sup:2} is a too difficult task and tries to take this into account through two ideas:
      </paragraph>
      <list>
       <list-item label="1.">
        Ensure consistency within a “sphere” which is a subset of ontologies and related alignments (spheres can overlap and being included in one another);
       </list-item>
       <list-item label="2.">
        Ensuring consistency only up to some degree, defined by the depth of the proof tree, which measures the effort required for finding the inconsistency.
       </list-item>
      </list>
      <paragraph>
       This could be used in revision as a minimality measure: not only consistency can be detected within the current sphere, but modifications for restoring consistency should be restricted, at first, to changes in the current sphere. Minimality can also be defined as the minimum number of spheres affected by changes.
      </paragraph>
     </section>
    </section>
    <section label="9">
     <section-title>
      Conclusion
     </section-title>
     <paragraph>
      In this paper, we have considered the problem of adding new information in networks of ontologies under the light of belief revision. We have dealt with this problem on the basis of the semantics of networks of ontologies. Given a semantics for these networks, we have shown how to transpose classical belief revision postulates to networks of ontologies and to define revision operators. Although they extend local revision, local revision operators alone are not sufficient to revise networks of ontologies according to such postulates.
     </paragraph>
     <paragraph>
      We have defined partial meet revision operators for networks of ontologies. We have also investigated modalities specific to networks of ontologies that can provide a selection function between revisions. These can be used for further defining partial meet revision operators.
     </paragraph>
     <paragraph>
      The proposed belief revision postulates and operators should be seen as inspiration for actual operators. Depending on the type of ontology language used (more or less powerful description logics) and the type of semantics adopted for interpreting alignments, the proposed revision operators may be refined towards more concrete ones. It may also be possible to guide users in choosing a particular revision from such principles. They have already inspired efforts, in particular in alignments and ontology debugging [34], [28]. These are usually offline operators, i.e., they are used at ontology or alignment edition time, but they led to actual usable tools. Extending them to larger networks should be possible, if not as interactive tools, as batch analysers.
     </paragraph>
     <paragraph>
      Although we have considered belief revision in first instance, base revision may be more adapted to ontologies and alignments in practical applications. Indeed, ontologies and alignments are usually not closed, and in particular not closed with respect to the network they are involved in, and it may be more practical for users to revise their syntactic formulation. This classical problem of belief/base revision takes a new dimension with networks of ontologies: in classical logic, the syntactic form of an ontology corresponds to its closure. In networks of ontologies, several closures may be considered (classical closure and ω-closure). Embedding an ontology in a network is not a neutral operation and the syntactic form of theories may be more deeply affected by revision. We consider this work as a first step to understanding revision in networks of ontologies that may help consider the problems of base revision.
     </paragraph>
     <paragraph>
      A last question worth considering is: does revision with the classical semantics, i.e., reducing the network of ontologies to a single ontology [6], can simulate the proposed operators? We conjecture that this is not always the case since the structure on which the choice is made (the network) disappears in this semantics.
     </paragraph>
     <paragraph>
      This paper opens new perspectives on revision in networks of ontologies.
     </paragraph>
     <paragraph>
      On the one hand, some questions already raised in classical revision have not been addressed. For instance, we have not considered updating, though it would be very useful when new datasets, alignments and ontologies are updated. It would also be interesting to consider how to adapt the Levi and Harper identities, or similar constraints.
     </paragraph>
     <paragraph>
      On the other hand, there are specific questions that depend on the non-controllability of networks of ontologies. Hence, not only a whole part of the network may be non-revisable, but it may be useful to design distributed revision operators in which ontology “owners” would interact to revise, or not, their ontologies. One can even imagine that each ontology is assigned a different operator. This would be useful when these ontologies are expressed in different logics.
     </paragraph>
    </section>
    <section>
     <section-title>
      Note added in proof
     </section-title>
     <paragraph>
      The proof of {a mathematical formula}⊞˙5 in Proposition 4 contains a shortcut. Although {a mathematical formula}〈∅,∅〉⊑〈Ω,Λ〉, it is not possible to add μ in A (respectively ϕ in o) since A (respectively o) does not belong to ∅. Instead, the worst case should be {a mathematical formula}〈Ω∅,Λ∅〉, i.e., the network of ontologies indexed by Ω and Λ, in which ontologies and alignments are empty, so it is trivially consistent. In this case, {a mathematical formula}〈∅,∅〉⊑〈Ω∅,Λ∅〉⊑〈Ω,Λ〉 and it is possible to perform the addition to the alignment indexed by A (respectively the ontology indexed by o).
     </paragraph>
    </section>
   </content>
  </root>
 </body>
</html>