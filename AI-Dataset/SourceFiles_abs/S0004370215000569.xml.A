<?xml version="1.0" encoding="utf-8"?>
<html>
 <body>
  <root>
   <title>
    On redundant topological constraints.
   </title>
   <content>
    <section label="1">
     <section-title>
      Introduction
     </section-title>
     <paragraph>
      Qualitative spatial reasoning is a common subfield of artificial intelligence and geographical information science, and has applications ranging from natural language understanding [13], robot navigation [46], geographic information systems (GISs) [18], sea navigation [54], to high level interpretation of video data [48].
     </paragraph>
     <paragraph>
      Typically, the qualitative approach represents spatial information by introducing a relation model on a domain of spatial entities, which could be points, line segments, rectangles, or arbitrary regions. In the literature, such a relation model is often called a qualitative calculus[34]. In the past three decades, dozens of spatial (as well as temporal) qualitative calculi have been proposed in the literature (cf. [11]). Among these, Interval Algebra (IA) [1] and the RCC8 algebra [41] are widely known as the most influential qualitative calculi for representing qualitative temporal and, respectively, spatial information. Other well-known qualitative calculi include Point Algebra (PA) [51], Cardinal Relation Algebra (CRA) [33], Rectangle Algebra (RA) [24], the RCC5 algebra [41], etc.
     </paragraph>
     <paragraph>
      Using a qualitative calculus {a mathematical formula}M, we represent spatial or temporal information in terms of relations in {a mathematical formula}M, and formulate a spatial or temporal problem as a set of qualitative constraints (called a qualitative constraint network). A qualitative constraint has the form {a mathematical formula}(xRy), which specifies that the two variables {a mathematical formula}x,y are related by the relation R. The consistency problem is to decide whether a set of qualitative constraints can be satisfied simultaneously. The consistency problem has been investigated in depth for many qualitative calculi in the literature, see e.g., [51], [50], [33], [40], [39], [43], [42], [14], [55], [37], [28], [35], [45], [30].
     </paragraph>
     <paragraph>
      In this paper, we consider the important problem of redundant qualitative constraints. Given a set Γ of qualitative constraints, we say a constraint {a mathematical formula}(xRy) in Γ is redundant if it is entailed by the rest of Γ, i.e., removing {a mathematical formula}(xRy) from Γ will not change the solution set of Γ. It is natural to ask when a network contains redundant constraints and how to get a non-redundant subset without changing the solution set. We call a subset of Γ a prime subnetwork of Γ if it contains no redundant constraints and has the same solution set as Γ.
     </paragraph>
     <paragraph>
      The redundancy problem (i.e., the problem of determining if a constraint is redundant in a network) is related to the minimal label problem (cf. [38], [8], [20], [36], [3]). A qualitative constraint network Γ is called minimal if for each constraint {a mathematical formula}(xRy) in Γ, R is the minimal (i.e., the strongest) relation between x, y that is entailed by Γ. Roughly speaking, the minimal network removes ‘redundant’ or ‘unnecessary’ basic relations from each constraint, while the redundancy problem removes ‘redundant’ or ‘unnecessary’ constraints from the constraint network.
     </paragraph>
     <paragraph>
      We show in this paper that it is in general co-NP hard to determine if a constraint is redundant in a qualitative constraint network. But if all constraints in Γ are taken from a tractable subclass{sup:1}{a mathematical formula}S then a prime subnetwork can be found in polynomial time. For example, if {a mathematical formula}S is a tractable subclass of RCC5 or RCC8 that contains all basic relations, then we can find a prime subnetwork in {a mathematical formula}O(n5) time. Furthermore, if {a mathematical formula}S is a subalgebra of RCC5 or RCC8 in which weak composition distributes over nonempty intersections, then Γ has a unique prime subnetwork, which is obtained by removing all redundant constraints from Γ. We also devise a cubic time algorithm for computing this unique prime subnetwork, which has the same time complexity as the two approximate algorithms of Wallgrün [52].
     </paragraph>
     <paragraph>
      As a by-product, we identify an important class of subalgebras of qualitative calculi, called distributive subalgebras. A subalgebra {a mathematical formula}D of a qualitative calculus {a mathematical formula}M is called distributive if weak composition distributes over nonempty intersections in {a mathematical formula}D. We show that any path-consistent network over a distributive subalgebra is weakly globally consistent and minimal, where weakly global consistency is a notion similar to but weaker than the well-known notion of global consistency (cf. Definition 5). For RCC8, we identify two maximal distributive subalgebras which are not contained in any other distributive subalgebras, one contains 41 relations and the other contains 64. The 41 relations contained in the first subalgebra are exactly the convex RCC8 relations identified in [8].
     </paragraph>
     <paragraph>
      In this paper, we are mainly interested in topological constraints, as these are the most important kind of qualitative spatial information. A large part of our results can easily be transplanted to other qualitative calculi like PA, IA, CRA and RA. In particular, let {a mathematical formula}M be one of PA, IA, CRA and RA and {a mathematical formula}S a distributive subalgebra of {a mathematical formula}M over which path-consistency implies consistency. Then we can show that any path-consistent network over {a mathematical formula}S is globally consistent and minimal.{sup:2} For ease of presentation, we state and prove these results only for RCC5 and RCC8, but indicate in Table 5 which result is applicable to which calculus.
     </paragraph>
     <section label="1.1">
      <section-title>
       Motivation
      </section-title>
      <paragraph>
       As in the case of propositional logic formulas [32], redundancy of qualitative constraints “often leads to unnecessary computation, wasted storage, and may obscure the structure of the problem” [5].{sup:3} Finding a prime subnetwork can be useful in at least the following aspects: a) computing and storing the relationships between spatial objects and hence saving space for storage and communication; b) facilitating comparison (or measure the distance) between different constraint networks; c) unveiling the essential network structure of a network (e.g., being a tree or a graph with a bounded tree-width); and d) adjusting geometrical objects to meet topological constraints [52].
      </paragraph>
      <paragraph>
       To further motivate our discussion, we focus on one specific application to illustrate the application area a. and briefly explain how redundancy checking or finding a prime subnetwork helps to solve the application areas b–d.
      </paragraph>
      <paragraph>
       Fig. 1 gives a small example of a set of spatial regions formed by the geographic “footprints” associated with placenames in the Southampton area of the UK. The footprints are derived from crowd-sourced data, formed from the convex hull of the sets of coordinate locations at which individuals used the placenames on social media (cf. [25]). Communicating and reasoning with the qualitative aspects of such data may require the storage and manipulation of large numbers of complex geometries with millions of vertices or large constraint networks with millions of relations.
      </paragraph>
      <paragraph>
       Even for the small example in Fig. 1, the 84 footprints then require {a mathematical formula}84⁎83/2=3486 stored relations. The moderate-sized footprint data set from which Fig. 1 is adapted contains a total of 3443 footprints which leads to a constraint network with 5,925,403 relations. Similarly, a moderate-sized geographic data set of only 1559 statistical areas in Tasmania, explored further in later sections, contains in total 3,093,551 vertices. In the case of both footprints and statistical areas, many of the relationships can be inferred, and computing the prime subnetwork can potentially reduce the number of stored relationships to be approximately linear in the number of regions (i.e., average-case space complexity of {a mathematical formula}O(n)), as opposed to linear in the number of constraints (i.e., space complexity {a mathematical formula}Θ(n2)) (see Section 5). In the case of the Southampton constraint network, 1324 redundant relations lead to a prime subnetwork with only 2162 relations needing to be stored. For the full data set, 5,604,200 redundant relations lead to a prime subnetwork of just 321,203 relations (in contrast to the full constraint network of almost 6 million relations).
      </paragraph>
      <paragraph>
       As for application area b., suppose Γ, {a mathematical formula}Γ′ are two constraint networks over the same set of n variables. The similarity of Γ and {a mathematical formula}Γ′ can be measured by computing the distance of each constraint {a mathematical formula}(xRy) in Γ with the corresponding constraint {a mathematical formula}(xR′y) in {a mathematical formula}Γ′ and sum them up (see e.g., [12], [53], [29]), i.e.,{a mathematical formula} Clearly, if Γ and {a mathematical formula}Γ′ are complete networks, we need {a mathematical formula}O(n2) additions. This number, however, can be significantly reduced if we use prime subnetworks. Let {a mathematical formula}Γpr and {a mathematical formula}Γpr′ be, respectively, prime subnetworks of Γ and {a mathematical formula}Γ′. We define{a mathematical formula}
      </paragraph>
      <paragraph>
       That is, the distance of Γ and {a mathematical formula}Γ′ is approximated by {a mathematical formula}distpr(Γ,Γ′), which only involves constraints in either {a mathematical formula}Γpr or {a mathematical formula}Γpr′. If {a mathematical formula}Γpr and {a mathematical formula}Γpr′ are sparse enough, i.e., they contain a small number of (non-redundant) constraints, this will significantly simplify the comparison of two constraint networks.
      </paragraph>
      <paragraph>
       In the case of application area c., a prime subnetwork unveils the essential network structure, or the skeleton, of a network, and the relation between a prime subnetwork and a constraint network is analogous to the relation between a spanning tree/forest [7] and a graph. Moreover, by the results of [6] and [26], we know it is tractable to determine the consistency of a constraint network with a bounded tree-width. Therefore, in general, checking the consistency of a prime subnetwork will be easier than checking the consistency of the network itself.
      </paragraph>
      <paragraph>
       As for application area d., Wallgrün [52] proposed a method for exploiting qualitative spatial reasoning for topological adjustment of spatial data, which is based on a translation of the constraints in an input constraint network (say Γ) into systems of (in)equations. To simplify the complexity of topological adjustment, he suggested replacing Γ by an equivalent one (say {a mathematical formula}Γ′) which has fewer redundant constraints. It is clear that the fewer constraints contained in {a mathematical formula}Γ′ the better it is. A prime subnetwork is, roughly speaking, an optimal solution and contains fewest constraints. Therefore, replacing Γ with a prime subnetwork will significantly simplify the complexity of topological adjustment.
      </paragraph>
     </section>
     <section label="1.2">
      <section-title>
       Related works
      </section-title>
      <paragraph>
       Redundancy checking is an important task in AI research, in particular in knowledge representation and reasoning. For example, Ginsberg [21] and Schmolze and Snyder [44] designed algorithms for checking redundancy of knowledge bases; Gottlob and Fermüller [22] and Liberatore [32] analysed the computational properties of removing redundancy from a clause and a CNF formula, respectively; and Grimm and Wissmann [23] considered checking redundancy of ontologies.
      </paragraph>
      <paragraph>
       In research on constraint satisfaction problems (CSPs), there are also many studies of constraint redundancy. While most of this research concerns redundant modelling (e.g., [10]), Chmeiss et al. [9] studied redundancy modulo a given local consistency. Their paper is close in spirit to ours. Let Γ be a CSP and ϕ a local consistency. Chmeiss et al. call a constraint c in Γ ϕ-redundant iff {a mathematical formula}(Γ∖{c})∪{¬c} is ϕ-inconsistent. Because path-consistency implies consistency for RCC5 and RCC8 constraint networks over their tractable subclasses [42], our notion of redundancy (when restricted to networks over these tractable subclasses) is equivalent to redundancy modulo path-consistency in the sense of [9].
      </paragraph>
      <paragraph>
       In qualitative spatial reasoning, the redundancy problem was first considered by Egenhofer and Sharma [19]. They observed that “For any scene description, the set of {a mathematical formula}n2 binary topological relations between the n objects is redundant since some of these topological relations are always implied by others” and a minimal set (i.e., a prime subnetwork) contains k relations with {a mathematical formula}(n−1)≤k≤(n2−n)/2. But they did not provide any efficient algorithm for deriving such a minimal set. In a recent paper, Wallgrün [52] proposed two algorithms to approximately find the prime subnetwork. The essence of the approximate algorithms is to replace {a mathematical formula}Rij with the universal constraint if there exists k such that the weak composition of {a mathematical formula}Rik and {a mathematical formula}Rkj is contained in {a mathematical formula}Rij. As was noted in [52], neither of these two algorithms is guaranteed to provide the optimal simplification. But it is worth noting that these two approximate algorithms are applicable to general constraint networks which are not necessarily over a distributive subalgebra. In Section 5, we will empirically compare our method with the methods of Wallgrün.
      </paragraph>
      <paragraph>
       The property of distributivity was first used by van Beek [50] for IA, but the notion of distributive subalgebra is new. It is not difficult to show that PA, IA, RCC5 and RCC8 all have two maximal distributive subalgebras (see Appendix B for these subalgebras of RCC5 and RCC8). Very interestingly, the two maximal distributive subalgebras of IA are exactly the subalgebras {a mathematical formula}CIA and {a mathematical formula}SIA discussed in [2], where Amaneddine and Condotta proved that {a mathematical formula}CIA and {a mathematical formula}SIA are the only maximal subalgebras of IA over which path-consistent networks are globally consistent. For RCC8, the maximal distributive subalgebra {a mathematical formula}D418 (see Appendix B) turns out to be the class of convex RCC8 relations found in [8], where Chandra and Pujari proved that path-consistent networks over {a mathematical formula}D418 are minimal. The other maximal distributive subalgebra of RCC8, which contains 64 relations, has not been reported before. Furthermore, we also show that every path-consistent constraint network Γ over a distributive subalgebra is weakly globally consistent and minimal. This has not been studied for RCC5 and RCC8 before. Based on subclasses for which path-consistency implies minimality, Amaneddine and Condotta [3] proposed an efficient algorithm for solving the minimal label problem. Their algorithm can also be applied to distributive subalgebras of RCC5 and RCC8 (as well as PA, IA, RA, and CRA).
      </paragraph>
      <paragraph>
       An extended abstract [15] of this paper was presented in KR-2014.
      </paragraph>
      <paragraph>
       The remainder of this paper is structured as follows. We first recall the RCC5 and RCC8 constraint languages and introduce the notion of distributive subalgebras in Section 2, and then define the key notions of redundant constraint and prime subnetwork in Section 3. In Section 4 we show that consistent RCC5 or RCC8 networks over distributive subalgebras have unique prime subnetworks. In Section 5 we present a detailed evaluation of a practical implementation of our algorithm, in comparison with the approximations proposed by Wallgrün [52]. Section 6 concludes the paper and outlines future research.
      </paragraph>
     </section>
    </section>
    <section label="2">
     <section-title>
      RCC5 and RCC8 constraint languages
     </section-title>
     <paragraph>
      Suppose U is a domain of spatial or temporal entities. Write {a mathematical formula}Rel(U) for the Boolean algebra of binary relations on U. A qualitative calculus{a mathematical formula}M on U is defined as a finite Boolean subalgebra of {a mathematical formula}Rel(U) which has an atom that contains the identity relation on U and is closed under converse, i.e., R is in {a mathematical formula}M iff its converse{a mathematical formula} is in {a mathematical formula}M[34]. A relation α in a qualitative calculus {a mathematical formula}M is basic if it is an atom in {a mathematical formula}M. Well-known qualitative calculi include, among others, PA [51], IA [1], CRA [33], RA [24], and RCC5 and RCC8 [41]. Note that the set of basic relations of a qualitative calculus is jointly exhaustive and pairwise disjoint (JEPD).
     </paragraph>
     <paragraph>
      Since we are mainly interested in topological constraints, in this section, we only recall the RCC5 and RCC8 constraint languages and refer the reader to [11], [30] for constraint languages that use other qualitative calculi. For convenience, we denote by RCC5/8 either RCC5 or RCC8.
     </paragraph>
     <section label="2.1">
      <section-title>
       RCC5 and RCC8
      </section-title>
      <paragraph>
       The RCC5/8 constraint language is a fragment of the Region Connection Calculus (RCC) [41], which is perhaps the most influential formalism for spatial relations in artificial intelligence. The RCC is a first order theory based on a binary connectedness relation and has canonical models defined over connected topological spaces [49], [31].
      </paragraph>
      <paragraph>
       Let X be a connected topological space and U the set of nonempty regular closed sets of X. We assume U is infinite. We call each element in U a region. Note that a region may have multiple connected components as well as holes. Write P for the binary “part-of” relation on U, i.e., {a mathematical formula}xPy if {a mathematical formula}x⊆y. Define{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula} Write {a mathematical formula}PP−1 for the converse of PP. Then{a mathematical formula} is a JEPD set of relations, i.e., for any two regions {a mathematical formula}a,b∈U, a, b is related by exactly one of the above five relations. We call the Boolean algebra generated by these five relations the RCC5 algebra, which consists of all relations that are unions of the five basic relations in (1). For convenience, we denote a non-basic RCC5 relation R as the subset of {a mathematical formula}B5 it contains. For example, we write {a mathematical formula}{DR,PO,PP} for the relation {a mathematical formula}DR∪PO∪PP, and write {a mathematical formula}⋆5 for the universal relation {a mathematical formula}{DR,PO,PP,PP−1,EQ}.
      </paragraph>
      <paragraph>
       RCC5 relations are in essence part-whole relations. We next introduce a topological relation model. For two regions {a mathematical formula}a,b, we say a is connected to b, written {a mathematical formula}aCb, if {a mathematical formula}a∩b≠∅. Using C and P, the following topological relations can be defined [41]:{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula} Write {a mathematical formula}TPP−1 and {a mathematical formula}NTPP−1 for the converses of TPP and NTPP. Then{a mathematical formula} is a JEPD set of relations. We call the Boolean algebra generated by these eight relations the RCC8 algebra, which consists of all relations that are unions of the eight basic relations in (2). For convenience, we write {a mathematical formula}⋆8 for the universal relation consisting of all basic relations in {a mathematical formula}B8.
      </paragraph>
     </section>
     <section label="2.2">
      <section-title>
       Weak composition table
      </section-title>
      <paragraph>
       While PA, IA, CRA and RA are all closed under composition, the composition of two basic RCC5/8 relations is not necessarily a relation in RCC5/8 [17], [31]. For example, the composition of DR and itself is not an RCC5 relation. This is because, for example, PO intersects with, but is not contained in, {a mathematical formula}DR∘DR, where ∘ denotes the relational composition operator. In fact, there are three regions a, b, c such that aPOc and {a mathematical formula}aDRb, {a mathematical formula}bDRc. This shows that {a mathematical formula}PO∩(DR∘DR) is nonempty. Let d, e be two regions such that {a mathematical formula}dPOe and {a mathematical formula}d∪e=R2. Clearly, there is no region f such that {a mathematical formula}dDRf and {a mathematical formula}fDRe hold simultaneously. Therefore PO is not contained in {a mathematical formula}DR∘DR.
      </paragraph>
      <paragraph>
       For two RCC5/8 relations R and S, we call the smallest relation in RCC5/8 that contains {a mathematical formula}R∘S the weak composition of R and S, written {a mathematical formula}R⋄S[17], [31].
      </paragraph>
      <paragraph>
       The weak compositions of RCC5 and RCC8 basic relations are summarised in, respectively, Table 1, Table 2 (from [41]). For each pair of RCC5/8 basic relations {a mathematical formula}(α,β), the table cell corresponding to {a mathematical formula}(α,β) contains all basic relations that are contained in {a mathematical formula}α⋄β. In fact, suppose α, β, γ are three basic RCC5/8 relations. Then we have{a mathematical formula} The weak composition of two (non-basic) RCC5/8 relations R and S can be computed as follows:{a mathematical formula} Given {a mathematical formula}(xRy) and {a mathematical formula}(ySz), by definition, we have {a mathematical formula}(xR⋄Sz), i.e., {a mathematical formula}{(xRy),(ySz)} entails {a mathematical formula}(xR⋄Sz).
      </paragraph>
      <paragraph>
       From the RCC5 composition table, the following result is clear.
      </paragraph>
      <paragraph label="Lemma 1">
       For any nonempty RCC5 relation R, we have{a mathematical formula}
      </paragraph>
      <paragraph label="Proposition 2">
       The following result will be used later. (See[16].) With the weak composition operation ⋄, the converse operation{sup:−1}, and the identity relationEQ, RCC5 and RCC8 are relation algebras. In particular, the weak composition operation ⋄ is associative. Moreover, for RCC5/8 relations R, S, T, we have the following cycle law{a mathematical formula}
      </paragraph>
      <paragraph>
       Fig. 2 gives an illustration of the cycle law. In the following, we assume ⋄ takes precedence over ∩.
      </paragraph>
     </section>
     <section label="2.3">
      <section-title>
       Qualitative constraint network
      </section-title>
      <paragraph>
       Let {a mathematical formula}M be a qualitative calculus with domain U. A qualitative constraint over {a mathematical formula}M has the form {a mathematical formula}(xRy), where x, y are variables taking values from U and R is a relation (not necessarily basic) in {a mathematical formula}M. Given a set Γ of qualitative constraints over variables {a mathematical formula}V={v1,v2,…,vn} and an assignment {a mathematical formula}σ:V→U, we say σ is a solution of Γ if {a mathematical formula}(σ(vi),σ(vj)) satisfies the constraints in Γ that relate {a mathematical formula}vi to {a mathematical formula}vj for any {a mathematical formula}1≤i,j≤n. We say Γ is consistent or satisfiable if it has a solution. Without loss of generality, we assume
      </paragraph>
      <list>
       <list-item label="•">
        for each pair of variables {a mathematical formula}vi,vj, there is at most one constraint in Γ that relates {a mathematical formula}vi to {a mathematical formula}vj;
       </list-item>
       <list-item label="•">
        for each pair of variables {a mathematical formula}vi,vj, if there is no constraint in Γ that relates {a mathematical formula}vi to {a mathematical formula}vj, we say {a mathematical formula}vi is related to {a mathematical formula}vj by ⋆, the universal relation in {a mathematical formula}M;
       </list-item>
       <list-item label="•">
        for each pair of variables {a mathematical formula}vi,vj, the constraint in Γ that relates {a mathematical formula}vi to {a mathematical formula}vj is the converse of the constraint that relates {a mathematical formula}vj to {a mathematical formula}vi;
       </list-item>
       <list-item label="•">
        for each variable {a mathematical formula}vi, the constraint in Γ that relates {a mathematical formula}vi to itself is the identity relation (e.g., EQ in RCC5/8).
       </list-item>
      </list>
      <paragraph>
       In this sense, we call Γ a network of constraints, and denote by for example {a mathematical formula}Rij the constraint that relates {a mathematical formula}vi to {a mathematical formula}vj. Let {a mathematical formula}Γ={viRijvj:1≤i,j≤n} and {a mathematical formula}Γ′={viRij′vj:1≤i,j≤n} be two constraint networks over {a mathematical formula}M. We say Γ and {a mathematical formula}Γ′ are equivalent if they have the same set of solutions; and say Γ refines{a mathematical formula}Γ′ if {a mathematical formula}Rij⊆Rij′ for all {a mathematical formula}(i,j). We say a constraint network Γ is a basic network if each constraint is either a basic relation or the universe relation; and say a basic network is complete if there are no universal relations. In this paper, we also call every complete basic network that refines Γ a scenario of Γ.
      </paragraph>
      <paragraph>
       Suppose {a mathematical formula}S is a subclass of {a mathematical formula}M. We say a constraint network {a mathematical formula}Γ={viRijvj:1≤i,j≤n} is over {a mathematical formula}S if {a mathematical formula}Rij∈S for every pair of variables {a mathematical formula}vi,vj. The consistency problem over {a mathematical formula}S, written as {a mathematical formula}CSP(S), is the decision problem of the consistency of an arbitrary constraint network over {a mathematical formula}S. The consistency problem over PA (i.e., {a mathematical formula}CSP(PA)) is in P [51], [50] and the consistency problems over IA, CRA, RA and RCC5/8 are NP-complete [40], [33], [4], [43]. We say {a mathematical formula}S is a tractable subclass of {a mathematical formula}M if {a mathematical formula}CSP(S) is tractable. It is well-known that IA, CRA, RA, and RCC5/8 all have large tractable subclasses, in particular, RCC8 has three maximal tractable subclasses that contain all basic relations [42] and RCC5 has only one [43], [27].
      </paragraph>
      <paragraph>
       The consistency of a qualitative constraint network can be approximately determined by a local consistency algorithm. We say a network {a mathematical formula}Γ={viRijvj:1≤i,j≤n} is path-consistent{sup:4} if for every {a mathematical formula}1≤i,j,k≤n, we have{sup:5}{a mathematical formula} In general, path-consistency can be enforced by calling the following rule until an empty constraint occurs (then Γ is inconsistent) or the network becomes stable.{a mathematical formula} where {a mathematical formula}1≤i,j,k≤n are arbitrary. A cubic time algorithm, henceforth called the path-consistency algorithm or PCA, has been devised to enforce path-consistency. For any qualitative constraint network Γ, the PCA either detects inconsistency of Γ or returns a path-consistent network, written {a mathematical formula}Γp, which is equivalent to Γ and also known as the algebraic closure or a-closure of Γ [34]. It is easy to see that in this case {a mathematical formula}Γp refines Γ, i.e., we have {a mathematical formula}Sij⊆Rij for each constraint {a mathematical formula}(viSijvj) in {a mathematical formula}Γp.
      </paragraph>
      <paragraph label="Proposition 3">
       For RCC5/8 constraint networks, we have (See[42].) Let{a mathematical formula}Sbe a tractable subclass of RCC5/8 which contains all basic relations. An RCC5/8 network Γ over{a mathematical formula}Sis consistent if applying PCA to Γ does not detect inconsistency.
      </paragraph>
      <paragraph label="Proposition 4">
       In particular, we have (See[39].) A basic RCC5/8 network Γ is consistent if it is path-consistent.
      </paragraph>
      <paragraph label="Definition 5">
       Consistency is closely related to the notions of minimal network (cf. [8], [20], [36]) and global consistency. Let {a mathematical formula}M be a qualitative calculus with domain U. Suppose {a mathematical formula}Γ={viTijvj:1≤i,j≤n} is a qualitative constraint network over {a mathematical formula}M and {a mathematical formula}V={v1,…,vn}. For a pair of variables {a mathematical formula}vi,vj∈V ({a mathematical formula}i≠j) and a basic relation α in {a mathematical formula}Tij, we say α is feasible if there exists a solution {a mathematical formula}(a1,a2,…,an) in U of Γ such that {a mathematical formula}(ai,aj) is an instance of α. We say Γ is minimal if for every pair of variables {a mathematical formula}vi, {a mathematical formula}vj ({a mathematical formula}i≠j) every basic relation α in {a mathematical formula}Tij is feasible.We say Γ is weakly globally consistent (globally consistent, respectively) if any consistent scenario (solution, respectively) of {a mathematical formula}Γ↓V′ can be extended to a consistent scenario (solution, respectively) of Γ, where {a mathematical formula}V′ is any nonempty subset of V and {a mathematical formula}Γ↓V′ is the restriction of Γ to {a mathematical formula}V′.
      </paragraph>
      <paragraph>
       The notion of weakly global consistency is weaker than the notion of global consistency. The latter requires that every partial solution can be extended to obtain a global solution, which is too strong for even basic RCC5/8 networks. For example, consider the RCC5 constraint network {a mathematical formula}{v1POv2,v1DRv3,v2DRv3}. As PO is not contained in the composition of DR and DR (cf. the example shown in Section 2.2), this network is weakly globally consistent but not globally consistent. The two notions are, however, equivalent for PA, IA, CRA and RA, as consistent basic networks over these calculi are all globally consistent.
      </paragraph>
      <paragraph label="Proof">
       While every consistent RCC5/8 constraint network has a unique minimal network, it is in general NP-hard to compute it [36]. The following result shows that every weakly globally consistent network is also minimal. Let{a mathematical formula}Mbe a qualitative calculus with domain U. Suppose{a mathematical formula}Γ={viTijvj:1≤i,j≤n}is a qualitative constraint network over{a mathematical formula}M. If Γ is weakly globally consistent, then it is minimal.For every pair of variables {a mathematical formula}vi,vj ({a mathematical formula}i≠j) and every basic relation α in {a mathematical formula}Tij, it is clear that {a mathematical formula}{viαvj} is a consistent scenario of {a mathematical formula}Γ↓{vi,vj}. Because Γ is weakly globally consistent, we can extend this to a consistent scenario of Γ. In other words, there exists a solution {a mathematical formula}(a1,a2,…,an) of Γ in U such that {a mathematical formula}(ai,aj) is an instance of α. This shows that Γ is minimal.  □
      </paragraph>
      <paragraph>
       In what follows, we write {a mathematical formula}Γm for the minimal network of Γ, and {a mathematical formula}Γp for the a-closure of Γ.
      </paragraph>
     </section>
     <section label="2.4">
      <section-title>
       Distributive subalgebra
      </section-title>
      <paragraph>
       As mentioned before, RCC5 has a unique maximal tractable subclass which contains all basic relations [43], [27]. This subclass, written {a mathematical formula}H5, contains all RCC5 relations except{a mathematical formula}
      </paragraph>
      <paragraph label="Lemma 7">
       Write {a mathematical formula}Bˆ5 for the closure of {a mathematical formula}B5 under converse, intersection, and weak composition in RCC5. Then {a mathematical formula}Bˆ5 contains all basic relations as well as{a mathematical formula}{a mathematical formula} where {a mathematical formula}⋆5={DR,PO,PP,PP−1,EQ}. It is interesting to note that in {a mathematical formula}Bˆ5 the weak composition operation is distributive over nonempty intersections in the following sense. Let{a mathematical formula}R,S,Tbe three relations in{a mathematical formula}Bˆ5. Suppose{a mathematical formula}S∩Tis nonempty. Then we have{a mathematical formula}
      </paragraph>
      <paragraph>
       We note the requirement that {a mathematical formula}S∩T is nonempty is necessary, as we have for example {a mathematical formula}{DR}⋄{DR}∩{DR}⋄{PO}={DR,PO,PP}≠∅ while {a mathematical formula}{DR}⋄({DR}∩{PO})={DR}⋄∅=∅.
      </paragraph>
      <paragraph label="Definition 8">
       In what follows, we call such a subclass a distributive subalgebra. Formally, we have Let {a mathematical formula}M be a qualitative calculus. A subclass {a mathematical formula}S of {a mathematical formula}M is called a distributive subalgebra if
      </paragraph>
      <list>
       <list-item label="•">
        {a mathematical formula}S contains all basic relations; and
       </list-item>
       <list-item label="•">
        {a mathematical formula}S is closed under converse, weak composition, and intersection; and
       </list-item>
       <list-item label="•">
        weak composition distributes over nonempty intersections of relations in {a mathematical formula}S.
       </list-item>
      </list>
      <paragraph>
       Write {a mathematical formula}Bˆl for the closure of {a mathematical formula}Bl in RCCl{a mathematical formula}(l=5,8) under converse, weak composition, and intersection. It is straightforward to check that both {a mathematical formula}Bˆ5 and {a mathematical formula}Bˆ8 are distributive subalgebras. This shows that the above definition is well-defined and every distributive subalgebra of RCCl contains {a mathematical formula}Bˆl as a subclass.
      </paragraph>
      <paragraph>
       We say a distributive subalgebra {a mathematical formula}S is maximal if there is no other distributive subalgebra that properly contains {a mathematical formula}S. To find all maximal distributive subalgebras of RCC5 and RCC8, we start with {a mathematical formula}Bˆl and then try to add other relations to this subalgebra to get larger distributive subalgebras. It turns out that RCC5 has only two maximal distributive subalgebras, denoted by {a mathematical formula}D145 and {a mathematical formula}D205. Similarly, RCC8 also has only two, denoted by {a mathematical formula}D418 and {a mathematical formula}D648. In Appendix B we list all relations contained in these subalgebras, and explain how we find these subalgebras and why there are no other maximal distributive subalgebras.
      </paragraph>
      <paragraph>
       The next lemma summarises one useful property of distributive subalgebras.
      </paragraph>
      <paragraph label="Proof">
       We only need to show the “only if” part.For two RCC5/8 relations {a mathematical formula}P,Q, we first note that {a mathematical formula}P∩Q≠∅ iff {a mathematical formula}EQ∈Q−1⋄P. In fact, from {a mathematical formula}P∩Q≠∅, we know there exist two regions {a mathematical formula}a,b such that {a mathematical formula}(a,b)∈P∩Q. This implies that {a mathematical formula}(b,b)∈Q−1∘P as {a mathematical formula}(b,a)∈Q−1 and {a mathematical formula}(a,b)∈P. Hence {a mathematical formula}EQ∩Q−1∘P is nonempty and, by the definition of weak composition and (3), {a mathematical formula}EQ∈Q−1⋄P. On the other hand, if {a mathematical formula}EQ∈Q−1⋄P, then {a mathematical formula}EQ∩Q−1∘P is nonempty. This implies that there exist two regions {a mathematical formula}a,b such that {a mathematical formula}(b,a)∈Q−1 and {a mathematical formula}(a,b)∈P. Thus {a mathematical formula}(a,b)∈P∩Q and, hence, {a mathematical formula}P∩Q≠∅.Suppose {a mathematical formula}R∩S∩T is empty but {a mathematical formula}R∩S,R∩T and {a mathematical formula}S∩T are all nonempty. By the above property, we have {a mathematical formula}EQ∈T−1⋄R and {a mathematical formula}EQ∈T−1⋄S. Because {a mathematical formula}R,S,T are relations in the distributive subalgebra {a mathematical formula}S and {a mathematical formula}R∩S≠∅, we know{a mathematical formula} Thus {a mathematical formula}T−1⋄(R∩S)≠∅ and, hence, {a mathematical formula}R∩S∩T≠∅. A contradiction.  □
      </paragraph>
      <paragraph>
       The above result does not hold in general for non-distributive subalgebras. For example, consider the RCC5 relations {a mathematical formula}R={PO,PP}, {a mathematical formula}S={DR,PP}, {a mathematical formula}T={DR,PO,PP−1}. {a mathematical formula}R,S,T are all in {a mathematical formula}H5 but S is not in any distributive subalgebra of RCC5. We have {a mathematical formula}R∩S∩T=∅ but {a mathematical formula}R∩S={PP}, {a mathematical formula}R∩T={PO}, and {a mathematical formula}S∩T={DR} are all nonempty.
      </paragraph>
      <paragraph label="Corollary 10">
       It is worth noting that all distributive subalgebras of RCC5 are contained in {a mathematical formula}H5, the maximal tractable subclass of RCC5 identified in [43], [27], and all distributive subalgebras of RCC8 are contained in {a mathematical formula}Hˆ8, one of the three maximal subclasses of RCC8 identified in [42]. In particular, by Proposition 3, we have Let{a mathematical formula}Sbe a distributive subalgebra of RCC5/8. Then every path-consistent network over{a mathematical formula}Sis consistent.
      </paragraph>
     </section>
    </section>
    <section label="3">
     <section-title>
      Redundant constraint and prime subnetwork
     </section-title>
     <paragraph>
      In this section we first give definitions of redundant constraints and prime subnetworks and then discuss how to find a prime subnetwork in general.
     </paragraph>
     <paragraph label="Definition 11">
      Let {a mathematical formula}M be a qualitative calculus with domain U. Suppose Γ is a qualitative constraint network over variables {a mathematical formula}V={v1,…,vn}. We say Γ entails a constraint {a mathematical formula}(viRvj), written {a mathematical formula}Γ⊨(viRvj), if for every solution {a mathematical formula}{a1,…,an} of Γ in U we have {a mathematical formula}(ai,aj)∈R. A constraint {a mathematical formula}(viRvj) in Γ is redundant if {a mathematical formula}Γ∖{(viRvj)} entails {a mathematical formula}(viRvj). We say Γ is reducible if it has a redundant constraint, and say Γ is irreducible or prime if otherwise. We say a subset {a mathematical formula}Γ′ of Γ is a prime subnetwork of Γ if {a mathematical formula}Γ′ is irreducible and equivalent to Γ.
     </paragraph>
     <paragraph>
      Note that each universal constraint {a mathematical formula}(vi⋆vj) in Γ is, by definition, a redundant constraint in Γ. We call this a trivial redundant constraint. In the following, we give an example of non-trivial redundant RCC5 constraints.
     </paragraph>
     <paragraph label="Example 12">
      Suppose{a mathematical formula} After enforcing path-consistency to {a mathematical formula}Γ∖{(v1PPv2)}, we have {a mathematical formula}(v5PPv2) and hence {a mathematical formula}(v1PPv2). This shows that {a mathematical formula}Γ∖{(v1PPv2)} entails {a mathematical formula}(v1PPv2) and hence {a mathematical formula}(v1PPv2) is redundant (Fig. 3). Moreover, {a mathematical formula}(v1PPv2) is the only non-trivial redundant constraint in Γ and {a mathematical formula}Γ∖{(v1PPv2)} is the unique prime subnetwork of Γ.
     </paragraph>
     <paragraph>
      Given a qualitative constraint network Γ, a very interesting question is, how to find a prime subnetwork of Γ? This problem is clearly at least as hard as determining if Γ is reducible. Similar to the case of propositional logic formulae [32], we have the following result for RCC5/8.
     </paragraph>
     <paragraph label="Proof">
      Let Γ be an RCC5/8 network and suppose{a mathematical formula}(xRy)is a constraint in Γ. It is co-NP-complete to decide if{a mathematical formula}(xRy)is redundant in Γ.First of all, we note that {a mathematical formula}(xRy) is redundant in Γ iff {a mathematical formula}(Γ∖{(xRy)})∪{xRcy} is inconsistent, where {a mathematical formula}Rc is the complement of R. Since it is NP-complete to decide if an RCC5/8 network is consistent, we know this redundancy problem (i.e., the problem of determining if a constraint is redundant in a network) is in co-NP. On the other hand, it is easy to construct a polynomial many-one reduction from the inconsistency problem of RCC5/8 to the redundancy problem. Fix two variables {a mathematical formula}x,y. Suppose Γ is an arbitrary RCC5/8 network over V and {a mathematical formula}x,y are two variables in V. Then Γ is inconsistent iff {a mathematical formula}Γ∖{(xRy)}⊨(xRcy) iff {a mathematical formula}(xRcy) is redundant in {a mathematical formula}(Γ∖{(xRy)})∪{xRcy}. This shows that the redundancy problem is co-NP complete.  □
     </paragraph>
     <paragraph>
      Similarly, we can show that the redundancy problems for IA, CRA, and RA are also co-NP-complete and, because the consistency problem of PA is in P, the redundancy problem for PA is in P.
     </paragraph>
     <paragraph>
      To determine if a network Γ is reducible, we need in the worst case check for {a mathematical formula}O(n2) constraints in Γ whether they are redundant in Γ. By the above proposition, this is a decision problem in {a mathematical formula}Δ2P, the class of problems solvable in polynomial time with an oracle for some NP-complete problem. Finding a prime subnetwork of Γ is more complicated. A naive method is to remove redundant constraints iteratively from Γ until we get an irreducible network. Let {a mathematical formula}c1,c2,…,ck be the sequence of all non-trivial constraints in Γ. Write {a mathematical formula}Γ0=Γ, and define{a mathematical formula} for {a mathematical formula}0≤i≤k−1. Then it is easy to show that {a mathematical formula}Γk is a prime subnetwork of Γ. Suppose we have an oracle which can tell if a constraint is redundant in a network. Then {a mathematical formula}Γk can be constructed in {a mathematical formula}O(n2) time. We note that the construction of the prime subnetwork {a mathematical formula}Γk depends on the order of the constraints {a mathematical formula}c1,c2,…,ck.
     </paragraph>
     <paragraph>
      Despite that it is in general co-NP-complete to determine if a constraint is redundant, we have a polynomial time procedure if the constraints are all taken from a tractable subclass of RCC5/8.
     </paragraph>
     <paragraph label="Proof">
      Let{a mathematical formula}Sbe a tractable subclass of RCC5/8 that contains all basic relations. Suppose Γ is a network over{a mathematical formula}S. Then in{a mathematical formula}O(n3)time we can determine whether a constraint is redundant in Γ and in{a mathematical formula}O(n5)time find all redundant constraints of Γ. In addition, a prime subnetwork for Γ can be found in{a mathematical formula}O(n5)time.Suppose {a mathematical formula}(xRy) is a constraint in Γ and let {a mathematical formula}Γ′≡Γ∖{(xRy)}. To determine if {a mathematical formula}(xRy) is redundant in Γ, we check for each basic RCC5/8 relation γ that is not in R, whether {a mathematical formula}Γ′∪{(xγy)} is consistent. If the answer is confirmative for one γ (note that RCC5 has five and RCC8 has eight basic relations), then {a mathematical formula}(xRy) is not redundant in Γ. By Proposition 3, the consistency of {a mathematical formula}Γ′∪{(xγy)} can be determined by enforcing path-consistency and hence can be determined in cubic time. Since there are {a mathematical formula}O(n2) constraints in Γ, in {a mathematical formula}O(n5) time we can find all redundant constraints of Γ.Suppose {a mathematical formula}c1,c2,…,ck are all non-trivial constraints of Γ. We define {a mathematical formula}Γ0=Γ, and set {a mathematical formula}Γi+1 as in (5). Note that if a constraint is non-redundant in Φ then it is also non-redundant in any subset of Φ. It is straightforward to show that {a mathematical formula}Γk is a prime subnetwork of Γ. Since we can determine in cubic time whether a constraint is redundant in a network over {a mathematical formula}S, {a mathematical formula}Γk can be computed in {a mathematical formula}k×O(n3) time, which is bounded by {a mathematical formula}O(n5).  □
     </paragraph>
     <paragraph>
      Similar conclusions apply to other calculi. For example, since the consistency problem of PA can be solved in {a mathematical formula}O(n2) time, the redundancy problem of PA can be solved in {a mathematical formula}O(n2) time and we can find a prime subnetwork for any consistent PA network in {a mathematical formula}O(n4) time.
     </paragraph>
     <paragraph label="Definition 15">
      It is often interesting to know when a constraint is contained in some or all prime subnetworks. The following notion will be helpful in partially answering questions like this. Let {a mathematical formula}M be a qualitative calculus and suppose Γ is a qualitative constraint network over {a mathematical formula}M. Write {a mathematical formula}Γc for the set of non-redundant constraints in Γ. We call {a mathematical formula}Γc the core of Γ.
     </paragraph>
     <paragraph label="Example 16">
      It is easy to see that the core of Γ is contained in every prime subnetwork of Γ. Are prime subnetworks unique? And, is the core itself always a prime subnetwork? The following example shows that in general this is not the case. Suppose Γ is the RCC5 network specified as below{a mathematical formula} where {a mathematical formula}P={PP,EQ}. Then both PO constraints in Γ are redundant. This is because, enforcing path-consistency to {a mathematical formula}{v1Pv2,v2Pv3,v3Pv1} we have {a mathematical formula}v1EQv2,v1EQv3,v2EQv3. Therefore, knowing one PO constraint will infer the other. Moreover, Γ has no other redundant constraints and {a mathematical formula}{v1Pv2,v2Pv3,v3Pv2} is the core of Γ but not equivalent to Γ. It is easy to see that {a mathematical formula}Γc∪{v1POv4} and {a mathematical formula}Γc∪{v2POv4} are two prime subnetworks of Γ.
     </paragraph>
     <paragraph>
      Note that this occurs because there is a cycle of P constraints in Γ, i.e., Γ is P-cyclic. In the following we often assume that Γ has the following property:{a mathematical formula} This implies that no two variables are forced to be identical. We call a network which satisfies (6) an all-different constraint network. Note that an all-different network is always consistent, as an inconsistent network entails everything.
     </paragraph>
     <paragraph label="Proof">
      The following proposition shows that the all-different requirement is not restrictive at all for constraint networks over a tractable subalgebra. Let{a mathematical formula}Sbe a tractable subclass of RCC5/8 that contains all basic relations. Suppose{a mathematical formula}Γ={viRijvj:1≤i,j≤n}is a consistent network over{a mathematical formula}Sand{a mathematical formula}Γpits a-closure. Then, for any{a mathematical formula}i≠j,{a mathematical formula}Γ⊨(viEQvj)iff{a mathematical formula}(viEQvj)is in{a mathematical formula}Γp.The sufficiency part is clear. We only need to show the necessity part. Suppose {a mathematical formula}Γ⊨(viEQvj). We show {a mathematical formula}(viEQvj) is in {a mathematical formula}Γp. Suppose {a mathematical formula}Γp={viSijvj:1≤i,j≤n}. Because Γ is consistent, {a mathematical formula}Γp is path-consistent and each {a mathematical formula}Sij is nonempty. By Theorem 21 of [42], {a mathematical formula}Γp has a consistent scenario {a mathematical formula}Γ⁎={viαijvj:1≤i,j≤n}, where {a mathematical formula}αij=EQ iff {a mathematical formula}Sij=EQ. In other words, if {a mathematical formula}Sij≠EQ, i.e., {a mathematical formula}(viEQvj) is not in {a mathematical formula}Γp, then {a mathematical formula}αij cannot be EQ and hence Γ does not entail {a mathematical formula}(viEQvj). This is a contradiction and hence {a mathematical formula}(viEQvj) is in {a mathematical formula}Γp.  □
     </paragraph>
     <paragraph>
      The above proposition shows that whether a constraint network is all-different can be answered by enforcing path-consistency. When a constraint network is not all-different, we can amalgamate those identical variables and thus obtain an equivalent but simplified all-different network.
     </paragraph>
     <paragraph>
      In the next section we will show that, if Γ is an all-different constraint network over a distributive subalgebra of RCC5/8, then {a mathematical formula}Γc is the unique prime subnetwork of Γ. This is quite surprising, as, in general, knowing that {a mathematical formula}(xRy) and {a mathematical formula}(uSv) are both redundant in Γ does not imply that {a mathematical formula}(uSv) is also redundant in {a mathematical formula}Γ∖{(xRy)}.
     </paragraph>
    </section>
    <section label="4">
     <section-title>
      Networks over a distributive subalgebra
     </section-title>
     <paragraph>
      In this section, we assume {a mathematical formula}S is a distributive subalgebra of RCC5/8. Let Γ be an all-different network over {a mathematical formula}S. Because Γ satisfies (6), there is in particular no EQ constraint in Γ. We show that {a mathematical formula}Γc, the core of Γ, is equivalent to Γ and hence the unique prime subnetwork of Γ. Using this result, we then further give a cubic time algorithm for computing the unique prime subnetwork of Γ.
     </paragraph>
     <paragraph>
      To prove that {a mathematical formula}Γc is equivalent to Γ, we need two important results. The first result, stated in Theorem 19, shows that the a-closure of Γ is minimal, i.e. {a mathematical formula}Γp is exactly {a mathematical formula}Γm. The second result, stated in Proposition 28, shows that a particular constraint {a mathematical formula}(xRy) is redundant in Γ iff its corresponding constraint in {a mathematical formula}Γp is redundant in {a mathematical formula}Γp. Our main result, stated in Theorem 29, then follows directly from these two results.
     </paragraph>
     <paragraph>
      In Section 4.1, we prove Theorem 19; in Section 4.2, we characterise relations in such a minimal network in terms of the weak compositions of paths from x to y in Γ; and in Section 4.3 we prove Proposition 28. Using these results, we show in Section 4.3 that {a mathematical formula}Γc is equivalent to Γ and hence the unique prime subnetwork of Γ and give in Section 4.4 a cubic time algorithm for computing {a mathematical formula}Γc.
     </paragraph>
     <section label="4.1">
      <section-title>
       The A-closure of Γ is minimal
      </section-title>
      <paragraph>
       To prove that a network is minimal, by Proposition 6, we only need to show that it is weakly globally consistent in the sense of Definition 5.
      </paragraph>
      <paragraph label="Proof">
       Let{a mathematical formula}Sbe a distributive subalgebra of RCC5/8. Suppose{a mathematical formula}Γ={viRijvj:1≤i,j≤n}is a path-consistent network over{a mathematical formula}S. Then Γ is weakly globally consistent.Write {a mathematical formula}Vk={v1,v2,…,vk} for {a mathematical formula}1≤k&lt;n. Without loss of generality, we only show that every consistent scenario of {a mathematical formula}Γ↓Vk can be extended to a consistent scenario of {a mathematical formula}Γ↓Vk+1. Suppose {a mathematical formula}Δ={viδijvj:1≤i,j≤k} is a consistent scenario of {a mathematical formula}Γ↓Vk. Then each {a mathematical formula}δij is a basic relation in {a mathematical formula}Rij. For each {a mathematical formula}1≤i≤k, write {a mathematical formula}Ti for {a mathematical formula}Rk+1,i (see Fig. 4 for illustration). Let {a mathematical formula}Tˆi=⋂j=1kTj⋄δji.We assert that each {a mathematical formula}Tˆi is nonempty. By Lemma 9, it is easy to show by induction on k that, for any set {a mathematical formula}{W1,W2,…,Wk} of {a mathematical formula}k≥3 nonempty relations in {a mathematical formula}S, {a mathematical formula}⋂i=1kWi≠∅ iff {a mathematical formula}Wi∩Wj≠∅ for any {a mathematical formula}1≤i≠j≤n. Therefore, to show {a mathematical formula}Tˆi≠∅, we only need to show {a mathematical formula}Tj⋄δji∩Tj′⋄δj′i≠∅ for any {a mathematical formula}1≤i≤n and any {a mathematical formula}1≤j≠j′≤n. Applying the cycle law as stated in Proposition 2 twice, we have{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula} Note here {a mathematical formula}(δji)−1=δij and {a mathematical formula}Tj′−1=(Rk+1,j′)−1=Rj′,k+1. Because {a mathematical formula}δj′j⊆Rj′j, we know {a mathematical formula}δj′j∩Rj′j≠∅. Since both Δ and Γ are path-consistent, we also have {a mathematical formula}δj′j⊆δj′i⋄δij and {a mathematical formula}Rj′j⊆Rj′,k+1⋄Rk+1,j. Therefore, we have {a mathematical formula}(Rj′,k+1⋄Rk+1,j)∩(δj′i⋄δij)⊇Rj′j∩δj′j≠∅ and hence {a mathematical formula}Tj⋄δji∩Tj′⋄δj′i≠∅. This shows that {a mathematical formula}Tˆi≠∅ for any {a mathematical formula}1≤i≤n.To show that {a mathematical formula}Γ↓Vk∪{vk+1Tˆivi:1≤i≤k} is path-consistent, we only need to show for {a mathematical formula}1≤i≠i′≤k that {a mathematical formula}Tˆi⋄δii′⊇Tˆi′. By the distributivity and {a mathematical formula}δji⋄δii′⊇δji′ we have{a mathematical formula} This shows that {a mathematical formula}Γ↓Vk∪{vk+1Tˆivi:1≤i≤k} is path-consistent and hence, by Corollary 10, has a consistent scenario {a mathematical formula}Δ′. It is clear that {a mathematical formula}Δ′ extends Δ from {a mathematical formula}Vk to {a mathematical formula}Vk+1. Because {a mathematical formula}Γ↓Vk∪{vk+1Tˆivi:1≤i≤k} refines {a mathematical formula}Γ↓Vk+1, we know {a mathematical formula}Γ↓Vk+1 has a consistent scenario which extends Δ.  □
      </paragraph>
      <paragraph label="Theorem 19">
       Together with Proposition 6, the above result immediately implies that the a-closure of a consistent network Γ over a distributive subalgebra is minimal. Let{a mathematical formula}Sbe a distributive subalgebra of RCC5/8. Suppose Γ is a consistent network over{a mathematical formula}Sand{a mathematical formula}Γpits a-closure. Then{a mathematical formula}Γpis identical to the minimal network of Γ.
      </paragraph>
      <paragraph>
       The above results can also be extended to distributive subalgebras of PA, IA and CRA, but do not hold in general for non-distributive subalgebras. Consider the network Γ over {a mathematical formula}H5 shown in Fig. 5, which is inspired by a network over PA in [50]. The network is path-consistent but not minimal. In fact, the relation EQ in the constraint {a mathematical formula}(v1{PP,EQ}v2) is not feasible, i.e., there exists no solution of Γ in which {a mathematical formula}(v1EQv2) is satisfied. By Proposition 6, we know Γ is not weakly globally consistent.
      </paragraph>
      <paragraph>
       In the next subsection, we characterise relations in such a minimal network in terms of the weak compositions of paths from x to y in Γ.
      </paragraph>
     </section>
     <section label="4.2">
      <section-title>
       Weak compositions of paths
      </section-title>
      <paragraph>
       Let {a mathematical formula}M be a qualitative calculus. A qualitative constraint network Γ is in essence a labelled directed graph consisting of the variables in Γ as vertices and qualitative relations in {a mathematical formula}M between the variables as labels. A path π from a variable x to another variable y is a sequence of constraints {a mathematical formula}c1,c2,…,cs such that {a mathematical formula}ci=(ui−1Riui) and {a mathematical formula}u0=x, {a mathematical formula}us=y. The weak composition of path π is the qualitative relation in {a mathematical formula}M defined as{a mathematical formula} Since the weak composition operation is associative, the relation {a mathematical formula}CT(π) defined above is unambiguous. We say a path π is non-trivial if {a mathematical formula}CT(π) is not the universal relation. Note that {a mathematical formula}(xCT(π)y) is entailed by those constraints in π.
      </paragraph>
      <paragraph label="Proof">
       Suppose Γ is a constraint network over a distributive subalgebra of RCC5/8, {a mathematical formula}(xRy) and {a mathematical formula}(xSy) are respectively the constraints in Γ and {a mathematical formula}Γp that relate x to y. We next show that S is the intersection of the weak compositions of all paths from x to y in Γ. Note that such a path may contain {a mathematical formula}(xRy) as an (or the unique) edge. Let{a mathematical formula}Sbe a distributive subalgebra of RCC5/8. Suppose Γ is a consistent network over{a mathematical formula}Sand{a mathematical formula}Γpits a-closure. Assume furthermore that{a mathematical formula}(xSy)is a constraint in{a mathematical formula}Γp. Then S is the intersection of the weak compositions of all paths from x to y in Γ.See Appendix A.  □
      </paragraph>
      <paragraph>
       The distributive property is necessary in the above lemma. Consider the consistent RCC5 network Γ over {a mathematical formula}H5 shown in Fig. 6. The intersection of the weak compositions of all paths from {a mathematical formula}v1 to {a mathematical formula}v2 in Γ is {a mathematical formula}{DR,PP}, while the relation that relates {a mathematical formula}v1 to {a mathematical formula}v2 in {a mathematical formula}Γp is {a mathematical formula}{DR}, which is strictly contained in {a mathematical formula}{DR,PP}.
      </paragraph>
      <paragraph label="Lemma 21">
       The following lemma shows that the weak composition of a cycle contains EQ and PO. This result holds for arbitrary RCC5/8 networks which are all-different. Suppose Γ is an all-different RCC5/8 network and{a mathematical formula}π=(c1,c2,…,cs)({a mathematical formula}s≥2) a path from x to itself in Γ such that{a mathematical formula}ci=(ui−1Riui),{a mathematical formula}u0=us=x. Then{a mathematical formula}CT(π)contains{a mathematical formula}O5≡{PO,PP,PP−1,EQ}if Γ is an RCC5 network, and contains{a mathematical formula}O8≡{PO,TPP,TPP−1,EQ}if Γ is an RCC8 network.
      </paragraph>
      <paragraph label="Proof">
       Write y for {a mathematical formula}u1. Let {a mathematical formula}R=R1 and {a mathematical formula}T=CT(π&gt;1)=R2⋄R3⋄…⋄Rs. Note that {a mathematical formula}y≠x and {a mathematical formula}π&gt;1 is a path from y to x. Suppose S is the relation from x to y in the a-closure of Γ. Because Γ is consistent, we know S is nonempty and {a mathematical formula}S⊆R, {a mathematical formula}S⊆T−1. Furthermore, since Γ is all-different and hence satisfies (6), we know {a mathematical formula}S≠{EQ}. As a consequence, we know there is a basic RCC5/8 relation {a mathematical formula}α≠EQ which is contained in {a mathematical formula}R∩T−1. Therefore, {a mathematical formula}CT(π)=R⋄T⊇α⋄α−1. By checking the composition tables of RCC5 and RCC8, we have that {a mathematical formula}α⋄α−1 (hence {a mathematical formula}CT(π)) contains {a mathematical formula}O5 ({a mathematical formula}O8, respectively) for any RCC5 (RCC8, respectively) basic relation {a mathematical formula}α≠EQ.  □
      </paragraph>
      <paragraph label="Proof">
       The following lemma provides a finer characterisation of the constraint {a mathematical formula}(xSy) in {a mathematical formula}Γp in terms of paths in Γ that do not contain the constraint {a mathematical formula}(xRy). Let{a mathematical formula}Sbe a distributive subalgebra of RCC5/8. Suppose Γ is an all-different network over{a mathematical formula}Sand{a mathematical formula}Γpits a-closure. Assume that{a mathematical formula}(xRy)and{a mathematical formula}(xSy)are the constraints from x to y in Γ and{a mathematical formula}Γprespectively. Then{a mathematical formula}S=R∩W, where W is the intersection of the weak compositions of all paths from x to y in{a mathematical formula}Γ∖{(xRy)}.See Appendix A.  □
      </paragraph>
      <paragraph>
       As Lemma 20, the above result does not hold in general for non-distributive subalgebras. Consider the network shown in Fig. 6 and the constraint from {a mathematical formula}v1 to {a mathematical formula}v2. We have {a mathematical formula}R={DR,PP}, {a mathematical formula}S={DR}, but {a mathematical formula}R∩W={DR,PP}≠S.
      </paragraph>
     </section>
     <section label="4.3">
      Correspondence between redundant constraints in Γ and {a mathematical formula}Γp
      <paragraph>
       Suppose Γ is an RCC5/8 network over a distributive subalgebra {a mathematical formula}S and {a mathematical formula}Γp its a-closure. Let {a mathematical formula}(xRy) and {a mathematical formula}(xSy) be the constraints from x to y in Γ and {a mathematical formula}Γp respectively. We prove that {a mathematical formula}(xRy) is redundant in Γ iff {a mathematical formula}(xSy) is redundant in {a mathematical formula}Γp. To this end, we need several lemmas.
      </paragraph>
      <paragraph label="Proof">
       The following two lemmas show that a constraint {a mathematical formula}(xRy) in Γ is redundant iff R contains the intersection of the weak compositions of all paths from x to y in {a mathematical formula}Γ∖{(xRy)}. Suppose Γ is a consistent RCC5/8 network and{a mathematical formula}(xRy)a constraint in Γ. Assume that W is the intersection of the weak compositions of all paths from x to y in{a mathematical formula}Γ∖{(xRy)}. Then{a mathematical formula}(xRy)is redundant in Γ if{a mathematical formula}R⊇W.Write {a mathematical formula}Γ′≡Γ∖{(xRy)}. For every path π from x to y in {a mathematical formula}Γ′, we know {a mathematical formula}Γ′ entails {a mathematical formula}(xCT(π)y). By the definition of W, this implies that {a mathematical formula}Γ′ entails {a mathematical formula}(xWy). Suppose {a mathematical formula}R⊇W. It is clear that every solution of {a mathematical formula}Γ′ also satisfies {a mathematical formula}(xRy), and therefore, {a mathematical formula}(xRy) is redundant in Γ.  □Let{a mathematical formula}Sbe a distributive subalgebra of RCC5/8. Suppose Γ is an all-different network over{a mathematical formula}Sand{a mathematical formula}(xRy)is a constraint in Γ. Assume that W is the intersection of the weak compositions of all paths from x to y in{a mathematical formula}Γ∖{(xRy)}. Then{a mathematical formula}(xRy)is redundant in Γ only if{a mathematical formula}R⊇W.Suppose {a mathematical formula}(xRy) is redundant in Γ. Then each solution of {a mathematical formula}Γ′=Γ∖{(xRy)} also satisfies {a mathematical formula}(xRy). Write {a mathematical formula}(xTy) for the constraint between x and y in {a mathematical formula}Γp′, the a-closure of {a mathematical formula}Γ′. By Lemma 22 we know {a mathematical formula}T=W. Furthermore, by Theorem 19, we know each basic relation in T is feasible in {a mathematical formula}Γ′. This implies that {a mathematical formula}T=W is contained in R.  □
      </paragraph>
      <paragraph>
       This result does not hold in general for non-distributive subalgebras. Consider the constraint network Γ over {a mathematical formula}H5 shown in Fig. 7 and the constraint from {a mathematical formula}v1 to {a mathematical formula}v2. It is easy to show that Γ is path-consistent, i.e., {a mathematical formula}Γ=Γp, and {a mathematical formula}(v1{PP}v2) is redundant in Γ. Furthermore, we have {a mathematical formula}W={PP,EQ}, which is not contained in {a mathematical formula}R={PP}.
      </paragraph>
      <paragraph>
       The above characterisation of redundant constraints can be strengthened if Γ is itself path-consistent.
      </paragraph>
      <paragraph label="Proof">
       Let{a mathematical formula}Sbe a distributive subalgebra of RCC5/8. Suppose Γ is an all-different and path-consistent network over{a mathematical formula}S. Then a constraint{a mathematical formula}(viRijvj)is redundant in Γ iff{a mathematical formula}Rij=⋂{Rik⋄Rkj:k≠i,j}, i.e.,{a mathematical formula}Rijis the intersection of the weak compositions of all paths from{a mathematical formula}vito{a mathematical formula}vjwhich have length 2.Let {a mathematical formula}Wij be the intersection of the weak compositions of all paths from {a mathematical formula}vi to {a mathematical formula}vj in {a mathematical formula}Γ∖{(viRijvj)}. It is clear {a mathematical formula}Wij⊆⋂{Rik⋄Rkj:k≠i,j}.Suppose {a mathematical formula}Rij=⋂{Rik⋄Rkj:k≠i,j}. We have {a mathematical formula}Rij⊇Wij. By Lemma 23, this immediately implies that {a mathematical formula}(viRijvj) is redundant in Γ.On the other hand, suppose {a mathematical formula}(viRijvj) is redundant in Γ. We show {a mathematical formula}Rij=⋂{Rik⋄Rkj:k≠i,j}. By Lemma 24 we know {a mathematical formula}Rij⊇Wij. Let {a mathematical formula}π=(c1,c2,…,cs) ({a mathematical formula}s≥2) be an arbitrary path from {a mathematical formula}vi to {a mathematical formula}vj in {a mathematical formula}Γ∖{(viRijvj)} such that {a mathematical formula}ck=(uk−1Rkuk), {a mathematical formula}u0=vi, {a mathematical formula}us=vj. Then {a mathematical formula}CT(π)=R1⋄CT(π&gt;1). Suppose {a mathematical formula}u1=vi′. Then {a mathematical formula}R1=Rii′ and {a mathematical formula}π&gt;1 is a path from {a mathematical formula}vi′ to {a mathematical formula}vj. Because Γ is path-consistent, we know by Lemma 20 that {a mathematical formula}Ri′j is contained in {a mathematical formula}CT(π&gt;1). This implies that {a mathematical formula}CT(π) contains {a mathematical formula}Rii′⋄Ri′j and, therefore, {a mathematical formula}⋂{Rik⋄Rkj:k≠i,j}. Due to the arbitrariness of π, {a mathematical formula}Wij also contains {a mathematical formula}⋂{Rik⋄Rkj:k≠i,j}. Since {a mathematical formula}Rij⊇Wij, we have {a mathematical formula}Rij⊇⋂{Rik⋄Rkj:k≠i,j}. By the path-consistency of Γ, we have {a mathematical formula}Rij⊆Rik⋄Rkj for every {a mathematical formula}k≠i,j. This shows {a mathematical formula}Rij=⋂{Rik⋄Rkj:k≠i,j}.  □
      </paragraph>
      <paragraph>
       This result does not hold in general for non-distributive subalgebras. Again, consider the path-consistent RCC5 network Γ over {a mathematical formula}H5 shown in Fig. 7. Although {a mathematical formula}(v1PPv2) is redundant in Γ, {a mathematical formula}R13⋄R32∩R14⋄R42={PP,EQ} strictly contains {a mathematical formula}{PP}.
      </paragraph>
      <paragraph>
       We next show that {a mathematical formula}(xRy) is redundant in Γ iff {a mathematical formula}(xSy) is redundant in {a mathematical formula}Γp.
      </paragraph>
      <paragraph label="Proof">
       Suppose Γ is an all-different RCC5/8 network. Assume that{a mathematical formula}(xRy)and{a mathematical formula}(xSy)are the constraints from x to y in Γ and{a mathematical formula}Γprespectively. Then{a mathematical formula}(xRy)is redundant in Γ only if{a mathematical formula}(xSy)is redundant in{a mathematical formula}Γp.Write {a mathematical formula}Γ′ and {a mathematical formula}Γ″ for {a mathematical formula}Γ∖{(xRy)} and {a mathematical formula}Γp∖{(xSy)} respectively.Suppose {a mathematical formula}(xRy) is redundant in Γ. Then {a mathematical formula}Γ′ entails {a mathematical formula}(xRy). Note that {a mathematical formula}Γ″ refines {a mathematical formula}Γ′. We know every solution of {a mathematical formula}Γ″ is a solution of {a mathematical formula}Γ′, hence also satisfies {a mathematical formula}(xRy). In other words, each solution of {a mathematical formula}Γ″ is a solution of Γ. Since Γ is equivalent to its a-closure, we know each solution of {a mathematical formula}Γ″ is also a solution of {a mathematical formula}Γp, hence also satisfies {a mathematical formula}(xSy). Therefore, {a mathematical formula}(xSy) is redundant in {a mathematical formula}Γp.  □
      </paragraph>
      <paragraph label="Proof">
       Let{a mathematical formula}Sbe a distributive subalgebra of RCC5/8. Suppose Γ is an all-different network over{a mathematical formula}S. Assume that{a mathematical formula}(xRy)and{a mathematical formula}(xSy)are the constraints from x to y in Γ and{a mathematical formula}Γprespectively. Then{a mathematical formula}(xRy)is redundant in Γ iff{a mathematical formula}(xSy)is redundant in{a mathematical formula}Γp.See Appendix A.  □
      </paragraph>
      <paragraph>
       The result does not hold in general for non-distributive subalgebras. Consider the constraint network Γ over {a mathematical formula}H5 shown in Fig. 8 and the constraint from {a mathematical formula}v3 to {a mathematical formula}v2. It is clear that the constraint {a mathematical formula}(v3PPv2) is redundant in {a mathematical formula}Γp. However, {a mathematical formula}(v3PPv2) is not redundant in Γ. This is because {a mathematical formula}(v3DRv2) is consistent with {a mathematical formula}Γ∖{(v3PPv2)} (shown in Fig. 8(c)). Actually, it is easy to construct a solution {a mathematical formula}{a1,a2,a3,a4} of {a mathematical formula}Γ∖{(v3PPv2)} in which {a mathematical formula}(a3PPa1),(a1PPa4) and {a mathematical formula}(a2DRaj) for {a mathematical formula}j=1,3,4.
      </paragraph>
      <paragraph>
       Recall that Theorem 19 asserts that {a mathematical formula}Γp is minimal. Proposition 27 can be rephrased as follows:
      </paragraph>
      <paragraph label="Proposition 28">
       Let{a mathematical formula}Sbe a distributive subalgebra of RCC5/8. Suppose Γ is an all-different network over{a mathematical formula}Sand{a mathematical formula}Γmthe minimal network of Γ. Assume that{a mathematical formula}(xRy)and{a mathematical formula}(xSy)are the constraints from x to y in Γ and{a mathematical formula}Γmrespectively. Then{a mathematical formula}(xRy)is redundant in Γ iff{a mathematical formula}(xSy)is redundant in{a mathematical formula}Γm.
      </paragraph>
      <paragraph>
       As a consequence, we have our main result.
      </paragraph>
      <paragraph label="Proof">
       Let{a mathematical formula}Sbe a distributive subalgebra of RCC5/8. Suppose Γ is an all-different network over{a mathematical formula}Sand{a mathematical formula}Γcthe core of Γ. Then{a mathematical formula}Γcis equivalent to Γ and hence the unique prime subnetwork of Γ.Suppose {a mathematical formula}c1,c2,…,ck are the redundant constraints of Γ. Let {a mathematical formula}Γ0=Γ and {a mathematical formula}Γi+1=Γi∖{ci+1} for {a mathematical formula}0≤i≤k. Note that {a mathematical formula}Γk is precisely {a mathematical formula}Γc, the core of Γ. Suppose {a mathematical formula}0≤i&lt;k is the largest integer such that {a mathematical formula}Γi is equivalent to Γ.Suppose {a mathematical formula}ci+1=(xRy) and {a mathematical formula}(xSy) is the corresponding constraint in {a mathematical formula}Γm, the minimal network of Γ. Note that {a mathematical formula}ci+1 is also in {a mathematical formula}Γi. By Proposition 28 we know {a mathematical formula}(xSy) is redundant in {a mathematical formula}Γm since {a mathematical formula}(xRy) is redundant in Γ. Because {a mathematical formula}Γm is also the minimal network of {a mathematical formula}Γi, by Proposition 28 again we know {a mathematical formula}(xRy) is redundant in {a mathematical formula}Γi. This means that {a mathematical formula}Γi+1 is equivalent to {a mathematical formula}Γi, hence Γ. This contradicts our assumption that {a mathematical formula}i&lt;k is the largest integer such that {a mathematical formula}Γi is equivalent to Γ. Therefore, {a mathematical formula}i=k and {a mathematical formula}Γc is equivalent to Γ.  □
      </paragraph>
      <paragraph>
       The above result does not hold in general for non-distributive subalgebras. For example, consider the RCC5 network Γ over {a mathematical formula}H5 shown in Fig. 9(a). The core {a mathematical formula}Γc (shown in Fig. 9(b)) is not equivalent to and hence not a prime subnetwork of Γ. This is because {a mathematical formula}(v3DRv2) is feasible in {a mathematical formula}Γc but not in Γ.
      </paragraph>
      <paragraph>
       Similar to Proposition 14, we can show that the core of an RCC5/8 network over a tractable subclass can be found in {a mathematical formula}O(n5) time. In the next subsection we show this can be improved if the network is over a distributive subalgebra.
      </paragraph>
     </section>
     <section label="4.4">
      <section-title>
       A cubic time algorithm for computing the core of Γ
      </section-title>
      <paragraph>
       Suppose Γ is an all-different network over a distributive subalgebra of RCC5/8. Proposition 27 and Lemma 25 suggest a simple way for computing {a mathematical formula}Γc, the unique prime subnetwork of Γ. By Proposition 27, a constraint {a mathematical formula}(viRijvj) in Γ is redundant iff the corresponding constraint {a mathematical formula}(viSijvj) in {a mathematical formula}Γp is redundant. Furthermore, Lemma 25 shows that {a mathematical formula}(viSijvj) is redundant in {a mathematical formula}Γp iff {a mathematical formula}Sij is the intersection of all {a mathematical formula}Sik⋄Skj ({a mathematical formula}k≠i,j). We have a cubic time algorithm (Algorithm 1) for computing {a mathematical formula}Γc. For each constraint {a mathematical formula}(viSijvj), to verify if {a mathematical formula}Sij=⋂{Sik⋄Skj:k≠i,j}, we introduce a temporary relation {a mathematical formula}Qij, which is initially assigned as the universal relation. It is possible that, after just a few intersections of {a mathematical formula}Sik⋄Skj with {a mathematical formula}Qij, the resulting {a mathematical formula}Qij is already equal to {a mathematical formula}Sij, which implies {a mathematical formula}(viSijvj) is redundant in {a mathematical formula}Γp and hence {a mathematical formula}(viRijvj) is redundant in Γ. The core of Γ is then obtained by removing these redundant relations one by one from Γ.
      </paragraph>
     </section>
    </section>
    <section label="5">
     <section-title>
      Empirical evaluation
     </section-title>
     <paragraph>
      In this section, we empirically evaluate our method in comparison with the methods in [52]. In [52], Wallgrün proposes two greedy algorithms for removing redundant constraints in the constraint network: the basic and extended simplification algorithms (hereafter Simple and SimpleExt). The Simple algorithm loops through all triples of regions i, j, and k and identifies as redundant any constraints {a mathematical formula}Rik such that {a mathematical formula}Rij⋄Rjk⊆Rik. A drawback of the Simple algorithm is that redundant relations removed may affect subsequent iterations of the algorithm. Hence, the order in which triples are visited by the Simple algorithm can alter the resulting subnetwork. The SimpleExt solves this issue by first marking potentially redundant relations for removal, subject to a consistency check, before removing all marked relations in a final loop. The Simple and SimpleExt algorithms are not guaranteed to provide an optimal solution. Thus, the prime subnetwork is necessarily a (possibly improper) subnetwork of that generated by the SimpleExt algorithm, which is in turn a (possibly improper) subnetwork of that generated by the Simple algorithm.
     </paragraph>
     <paragraph>
      Fig. 10 shows an example with just five regions, highlighting the constraints identified as redundant in the prime subnetwork and by the Simple and SimpleExt algorithms. Assuming the Simple algorithm visits regions in numerical order, the relations between variables {a mathematical formula}v2 and {a mathematical formula}v5 and between {a mathematical formula}v3 and {a mathematical formula}v4 will be identified as redundant. Additionally, the SimpleExt algorithm is able to identify the relation between {a mathematical formula}v4 and {a mathematical formula}v5 as redundant. However, the redundant relation between {a mathematical formula}v1 and {a mathematical formula}v3 is identified only in the prime subnetwork.
     </paragraph>
     <section label="5.1">
      <section-title>
       Data sets
      </section-title>
      <paragraph>
       In the following evaluation, two real data sets were used: the UK geographic “footprint” dataset introduced in Section 1.1 (total 3443 regions) and the statistical areas levels 1–4 dataset for Tasmania (in total 1559 regions), provided by the Australian Bureau of Statistics. Both datasets are complete basic constraint networks, i.e., there is a single basic relation between each pair of regions. Derived from social media, the footprint data set contains a variety of regions of differing sizes and shapes, but relatively unstructured sharing almost no adjacent boundaries. In stark contrast the Tasmanian statistical areas are highly structured, made up of four levels of spatially contiguous and nested but non-overlapping regions. To aid in our analysis, five subsets of each of the two datasets were generated in addition to the full datasets. The subsets were generated from selecting those regions that intersect an arbitrarily selected spatial region of increasing size. In this way, subsets of data of varying sizes were generated, with 108, 217, 433, 862 and 1725 regions in subsets of the footprint data set, and 49, 98, 193, 374 and 658 regions from the statistical areas set.
      </paragraph>
      <paragraph>
       Subsets of spatially related regions were explicitly used, as opposed to selecting regions entirely at random. Specifically, at least one region in the subset was required to have non DC relations with all other regions in that subset. This was to ensure that the range of RCC8 basic relations in each subset were representative of the RCC8 relations in close spatial proximity. The resulting distribution of RCC8 basic relations in the full constraint network for these 10 region subsets along with their complete dataset is shown in Table 3. By design, the relations exhibit systematic variations in the distribution of relations, for example with the statistical areas data set exhibiting consistently higher levels of DC and lower levels of PO relations (due to the non-overlapping nature of statistical areas); and smaller subsets exhibiting lower levels of DC relations (as a result of the smaller spatial area in which regions must fit for the smaller subsets of data).
      </paragraph>
     </section>
     <section label="5.2">
      <section-title>
       Redundant constraints
      </section-title>
      <paragraph>
       In [52], the two conjectures are made that: a. the Simple and SimpleExt are good approximations for removing all redundant relations; and b. that the Simple algorithm is in practice almost as good as the SimpleExt algorithm at removing redundant relations. In this section, we compare the three types of subnetwork (prime, SimpleExt, and Simple) in practice and in the context of these conjectures. Fig. 11 shows the growth in size of the three types of subnetworks across the six subsets of each of the two data sets. Several features are worth noting in Fig. 11:
      </paragraph>
      <list>
       <list-item label="•">
        All three subnetworks grow in size (i.e., the number of constraints comprising a subnetwork) approximately linearly with the number of regions (coefficient of determination {a mathematical formula}R2&gt;0.97 in all cases, indicating a high level of fit between the data and the linear regression). Linear {a mathematical formula}O(n) growth is a lower bound on the space complexity of these subnetworks, since they must remain connected (and so must have at least {a mathematical formula}n−1 edges). Thus, this result indicates all three algorithms are approaching optimal scalability in terms of space complexity. The only exception occurs with the Simple subnetwork and in the case of the statistical areas data set, which grows in size quadratically with the number of regions.
       </list-item>
       <list-item label="•">
        The prime subnetwork is consistently smaller than the subnetwork generated by the Simple algorithm at all network sizes and is significantly smaller for larger networks.
       </list-item>
       <list-item label="•">
        The SimpleExt subnetwork is significantly larger than the prime subnetwork and of similar size to the Simple subnetwork in the case of the footprint data set, while it is of similar size to the prime subnetwork and significantly smaller than the Simple subnetwork in the case of the statistical areas data set.
       </list-item>
      </list>
      <paragraph>
       In summary, neither the Simple nor SimpleExt algorithm can be relied upon to identify as many redundant constraints as the prime subnetwork, although the SimpleExt algorithm may in some cases identify many more redundant constraints than the Simple algorithm (such as the statistical areas data set).
      </paragraph>
      <paragraph>
       Further examination reveals that one feature that explains many of the observed differences in results is the differing proportions of PO relations in the data sets (see Table 3). Larger proportions of PO relations are strongly related to fewer redundant relations being identified across all types of subnetwork, since PO relations typically provide limited reasoning power. Fig. 12 demonstrates this relationship empirically for the footprint data set. However, the prime subnetwork is consistently better at identifying many more redundant relations than the Simple or SimpleExt algorithms when the full constraint network contains many PO relations.
      </paragraph>
     </section>
     <section label="5.3">
      <section-title>
       Scalability
      </section-title>
      <paragraph>
       As already discussed, Algorithm 1 can compute the prime subnetwork in {a mathematical formula}O(n3) time for any consistent network over a tractable subclass of RCC5/8, where the constraints are taken from a distributive subalgebra. Similarly, the Simple and SimpleExt algorithms must in the worst case visit all triples of regions, leading to overall {a mathematical formula}O(n3) scalability.
      </paragraph>
      <paragraph>
       On average, however, all the algorithms exhibited an average scalability in proportion to {a mathematical formula}n2 (where n is the number of regions). Fig. 13 shows the number of constraints checked by each algorithm, the key determining factor in computation time. All the algorithms increased linearly with the number of constraints (i.e., in proportion to {a mathematical formula}n2), again with the exception of the Simple algorithm operating on the statistical areas data set. Indeed, on average Algorithm 1 scaled slightly more efficiently with regard to the number of constraints processed than the other two algorithms. These differences arise because on average those algorithms that are better at identifying redundant constraints are more quickly able to discard those constraints and move on to checking other constraints.
      </paragraph>
     </section>
     <section label="5.4">
      <section-title>
       Removing disconnected constraints
      </section-title>
      <paragraph>
       Overall, the prime subnetwork substantially reduced the number of constraints that would need to be stored to be linear in the number of regions (cf. Section 1.1). Table 4 shows the proportion of constraints identified as redundant achieved by the different algorithms in the case of the full data sets, up to 98.44% in the case of the prime subnetwork on the highly structured statistical areas data set.{sup:6}
      </paragraph>
      <paragraph>
       However, in some cases it might potentially be possible to achieve similarly high levels of storage efficiency more simply by, say, omitting the most numerous relations (typically DC) from the constraint network. Fig. 14 shows a scatterplot of the number of constraints in the constraint network omitting DC relations, against the number of constraints in the prime network, both expressed as a percentage of the total number of constraints in the full constraint networks (for each of the 12 data subsets).
      </paragraph>
      <paragraph>
       The figure shows that in some cases simply storing the constraint network without DC relations can lead to slightly more constraints omitted (those above the diagonal in Fig. 14). In particular, in the statistical areas data set, where the vast majority of relations are DC, the number of DC relations can exceed the number of redundant relations identified by the prime subnetwork. However, in most cases for the less structured footprint data set, the prime subnetwork contains substantially fewer constraints than could be achieved by simply omitting DC relations (those below the diagonal in Fig. 14). Besides, while simply dropping the DC relation is competitive space-saver in some cases, it is undesirable when for example the information is incomplete and/or we cannot tell if the relation between two objects is (i) DC and dropped or (ii) missing or (iii) removed due to redundancy.
      </paragraph>
     </section>
     <section label="5.5">
      <section-title>
       Reconstituting the full network
      </section-title>
      <paragraph>
       As already highlighted in Section 1.1, there are many potential uses for the purely qualitative prime network, without involving geometry, including facilitating the comparison and uncovering the essential structure of different constraint networks. However, one final question we address empirically is the efficiency of reconstructing the full constraint network from the prime subnetwork, when compared with doing so geometrically if the geometric information is complete and available.
      </paragraph>
      <paragraph>
       The full constraint network can be reconstructed from the prime subnetwork in {a mathematical formula}O(n3) time by computing the a-closure of the prime subnetwork. Computing the constraint network directly from the geometry requires in the worst case {a mathematical formula}O(n2) iterations of an {a mathematical formula}O(m2) algorithm for computing the intersection between two polygons (where m is the number of vertices in the polygon). In cases where {a mathematical formula}m≈n this can lead to a worst case complexity of the geometric algorithm of {a mathematical formula}O(n4). We note that, in our statistical areas data set, the largest polygon contains more than 248,000 vertices, and so m is indeed comparable to n.
      </paragraph>
      <paragraph>
       However, in practice, by making use of the spatial structure of the data through algorithms (e.g., by checking for non-overlapping minimum bounding boxes for polygons before computing the polygon intersection) and spatial indexes, the geometric algorithm is expected to be on average significantly more efficient. Fig. 15 compares the scalability of the two approaches, a-closure and efficient geometric computation in an indexed spatial database. At least for the smaller data sets tested, computing the a-closure is significantly more efficient. For example, in the case of the smallest statistical areas data subset, computing the a-closure requires less than 1000th of the time of the geometric computation. However, the figure shows that using the spatial database is significantly more scalable (average-case {a mathematical formula}O(n) time complexity) when compared with the a-closure (average case approaching {a mathematical formula}O(n3) complexity).
      </paragraph>
      <paragraph>
       Fig. 15 also shows the results of a hybrid reconstitution algorithm, that uses both the geometry and the a-closure. The hybrid algorithm first adds any DC relations to the prime network that can be inferred simply through comparison of the minimum bounding box of the polygon geometry (since non-intersecting minimum bounding boxes for two polygons imply a DC relations). Then the a-closure is computed with this partially reconstituted subnetwork. The results show a significant improvement in scalability using this approach, reducing the average case time complexity to below {a mathematical formula}O(n2) in the case of the footprint dataset. Ongoing work is currently investigating further mechanisms for combining both these geometric and the qualitative aspects of regions in efficient database storage and queries.
      </paragraph>
     </section>
     <section label="5.6">
      <section-title>
       Summary
      </section-title>
      <paragraph>
       In summary, our analysis of the performance of the three subnetworks on practical geographic data sets containing thousands of regions demonstrates:
      </paragraph>
      <list>
       <list-item label="1.">
        The prime subnetwork consistently outperforms the Simple and SimpleExt algorithms in terms of the number of redundant relations identified, in particular in cases where the proportion of PO relations in the full constraint network is higher.
       </list-item>
       <list-item label="2.">
        The average case scalability for computing the prime subnetwork required {a mathematical formula}n2 operations, where n is the number of regions. Because the prime subnetwork identified more redundant relations, it performs on average fewer constraint checks than the Simple and SimpleExt algorithms, and was in our tests always more scalable.
       </list-item>
       <list-item label="3.">
        For less structured datasets, the prime subnetwork can substantially improve on the number of constraints identified as redundant, when compared with the naive solution of omitting DC relations from the full constraint network.
       </list-item>
      </list>
      <paragraph>
       The data sets used for the experiments are provided in the supplementary material. It is worth noting that our evaluation only concerns basic constraint networks derived from real data sets. This setting follows [52] (though Wallgrün uses, instead, randomly generated geometric data sets) and suits well for the purpose of topological adjustment of spatial data. It will be very interesting to compare the three methods by using general constraint networks over a distributive subalgebra. But, currently, we still lack practical methods for generating large constraint networks from real-world applications.
      </paragraph>
     </section>
    </section>
    <section label="6">
     <section-title>
      Conclusion
     </section-title>
     <paragraph>
      In this paper, we have systematically investigated the computational complexity of redundancy checking for RCC5/8 constraints. Although it is in general intractable, we have shown that a prime subnetwork can be found in {a mathematical formula}O(n5) time for any consistent network over a tractable subclass of RCC5/8. If the constraints are taken from a distributive subalgebra, we proved that the constraint network has a unique prime subnetwork, which can be found in cubic time. As a by-product, we also proved that any path-consistent network over a distributive subalgebra is weakly globally consistent and minimal.
     </paragraph>
     <paragraph>
      Our empirical analysis showed that for real geographic data sets the prime subnetwork can lead to significant increases in the number of redundant relations identified when compared with the approximations proposed by [52]. In practice, the algorithm was efficient, exhibiting average case {a mathematical formula}O(n2) scalability. The redundant relations identified by the prime subnetwork can also significantly outnumber DC relations, especially in less structured geographic data sets that may contain a significant minority of PO relations.
     </paragraph>
     <paragraph>
      It is worth noting that a large part of our results can be applied to several other qualitative calculi (like PA, IA, CRA, and RA) immediately, but Proposition 27, Proposition 28 and Theorem 29 do use the particular algebraic properties of RCC5/8 (see Table 5 for a summary). For example, Theorem 29 cannot be applied to IA, because we have an all-different and path-consistent basic IA network which is not equivalent to its core. Future work will consider how to extend our results to IA, RA and other calculi.
     </paragraph>
     <paragraph>
      We are also developing further the practical applications of prime subnetworks. In addition to pursuing a more systematic exploration of the applications to saving storage than the one given in Section 1.1, further work is necessary to investigate other aspects of prime subnetworks, in particular the structure and comparison of different prime subnetworks of sets of footprints. Another challenging research direction is to develop more efficient reasoning methods for sparse constraint networks other than enforcing path-consistency, which runs in cubic time and always turns a sparse constraint network into a complete one. The method initiated in [47] seems very promising.
     </paragraph>
    </section>
   </content>
   <appendices>
    <section label="Appendix A">
     Proof of Lemmas 20 and 22 and Proposition 27
     <paragraph label="Proof of Lemma 20">
      Suppose the network becomes stable in k steps when enforcing PCA. For {a mathematical formula}l≤k, we write {a mathematical formula}Rijl for the constraint between {a mathematical formula}vi and {a mathematical formula}vj in the l-th step. We prove by using induction on l that every {a mathematical formula}Rijl is the intersection of the weak compositions of several paths from {a mathematical formula}vi to {a mathematical formula}vj in Γ.When {a mathematical formula}l=0, this is clearly true. Suppose this is true for {a mathematical formula}l≤s. We show it also holds for {a mathematical formula}l=s+1. Suppose in this step the following updating rule is called{a mathematical formula} By induction hypothesis, we know {a mathematical formula}Rijl is the intersection of the weak compositions of several paths from {a mathematical formula}vi to {a mathematical formula}vj in Γ. Similar for {a mathematical formula}Rikl and {a mathematical formula}Rkjl. Note that when joining a path from {a mathematical formula}vi to {a mathematical formula}vk and a path from {a mathematical formula}vk to {a mathematical formula}vj, we obtain a path from {a mathematical formula}vi to {a mathematical formula}vj. Because every constraint in Γ is taken from {a mathematical formula}S, in which weak composition distributes over nonempty intersections, it follows that {a mathematical formula}Rikl⋄Rkjl is identical to the intersection of the weak compositions of all these paths from {a mathematical formula}vi to {a mathematical formula}vj via {a mathematical formula}vk. It is now clear that {a mathematical formula}Rijl+1 also satisfies the property.So far, we have shown for every constraint {a mathematical formula}(xSy) in {a mathematical formula}Γp that S is the intersection of the weak compositions of several paths from x to y in Γ. Because {a mathematical formula}Γp is path-consistent, the weak composition of every path from x to y in {a mathematical formula}Γp contains S. Therefore, S is also contained in the intersection of the weak compositions of all paths from x to y in Γ. This shows that S is exactly the intersection of the weak compositions of all paths from x to y in Γ.  □
     </paragraph>
     <paragraph label="Proof of Lemma 22">
      Because {a mathematical formula}(xRy) is the only path with length 1 from x to y in Γ, Lemma 20 in fact asserts that S is the intersection of R and the weak compositions of all paths in Γ with length ≥2. Note that each path from x to y in {a mathematical formula}Γ∖{(xRy)} has length ≥2. We know {a mathematical formula}S⊆R∩W.To show {a mathematical formula}S⊇R∩W, we only need to show {a mathematical formula}CT(π)⊇R∩W for every path from x to y in Γ with length ≥2. Suppose {a mathematical formula}π=(c1,c2,…,cs) ({a mathematical formula}s≥2) is such a path and {a mathematical formula}ci=(ui−1Riui), {a mathematical formula}u0=x, {a mathematical formula}us=y.There are three types of paths (see Fig. 16 for illustration).Case 1. π contains neither {a mathematical formula}(xRy) nor {a mathematical formula}(yR−1x). Clearly π is a path from x to y in {a mathematical formula}Γ∖{(xRy)}. By definition we have {a mathematical formula}CT(π)⊇W.Case 2. If {a mathematical formula}ci=(xRy) for some {a mathematical formula}1≤i≤s, then {a mathematical formula}CT(π)=CT(π&lt;i)⋄R⋄CT(π&gt;i). Note that either {a mathematical formula}π&lt;i or {a mathematical formula}π&gt;i is a nonempty cycle. By Lemma 21 we know the weak composition of each cycle contains EQ. Therefore, we know {a mathematical formula}CT(π)⊇R.Case 3. If {a mathematical formula}ci=(yR−1x) for some {a mathematical formula}1≤i≤s, then {a mathematical formula}CT(π)=CT(π&lt;i)⋄CT(π≥i). Without loss of generality, we assume {a mathematical formula}ci is the first constraint in π such that {a mathematical formula}ci=(yR−1x). It is clear that {a mathematical formula}π&lt;i is a path of Case 1 and hence {a mathematical formula}W⊆CT(π&lt;i). Note that {a mathematical formula}π≥i is a path from y to itself. By Lemma 21 we know {a mathematical formula}EQ∈CT(π≥i) hence {a mathematical formula}CT(π)=CT(π&lt;i)⋄CT(π≥i)⊇W⋄EQ=W.This shows that {a mathematical formula}R∩W is contained in the weak composition of every path from x to y in Γ with length ≥2. Since S is the intersection of R and all paths from x to y in Γ with length ≥2, this shows that {a mathematical formula}S⊇R∩W. Therefore we have {a mathematical formula}S=R∩W.  □
     </paragraph>
     <paragraph label="Proof of Proposition 27">
      The necessity part has been proved in Lemma 26. We only need to show the sufficiency part. Write {a mathematical formula}Γ′ and {a mathematical formula}Γ″ for {a mathematical formula}Γ∖{(xRy)} and {a mathematical formula}Γp∖{(xSy)} respectively. Suppose {a mathematical formula}(xSy) is redundant in {a mathematical formula}Γp. Let W be the intersection of the weak compositions of all paths from x to y in {a mathematical formula}Γ∖{(xRy)}. To show that {a mathematical formula}(xRy) is redundant in Γ, by Lemma 23, we only need to show {a mathematical formula}R⊇W.Recall {a mathematical formula}S=R∩W by Lemma 22. To show {a mathematical formula}R⊆W, we first show{a mathematical formula} where {a mathematical formula}Ol is either {a mathematical formula}O5 or {a mathematical formula}O8 (cf. Lemma 21 for definition), according to whether Γ is over RCC5 or RCC8.Because {a mathematical formula}(xSy) is redundant in {a mathematical formula}Γp, by Lemma 25, we know S is the intersection of the weak compositions of all paths with length 2 from x to y in {a mathematical formula}Γp. For each constraint {a mathematical formula}(uiSijuj) in any such a path, Lemma 20 shows that {a mathematical formula}Sij is the intersection of the weak compositions of all paths from {a mathematical formula}ui to {a mathematical formula}uj in Γ. Replace each {a mathematical formula}(uiSijuj) with several paths such that {a mathematical formula}Sij is the intersection of their weak compositions. We get several paths from x to y in Γ with length ≥2 such that S is the intersection of the weak compositions of these paths. By Lemma 20 again we know S is contained in the weak composition of every path from x to y in Γ. This shows that S is exactly the intersection of the weak compositions of all paths from x to y in Γ with length ≥2.{sup:7}As we have seen in the proof of Lemma 22, there are three types of paths. For every path π of Case 1 or 3 (defined in Lemma 22), we know {a mathematical formula}CT(π) contains W. Suppose π is a path of Case 2 and {a mathematical formula}ci=(xRy) for some {a mathematical formula}1≤i≤s. Then {a mathematical formula}CT(π)=CT(π&lt;i)⋄R⋄CT(π&gt;i). Note that if {a mathematical formula}π&lt;i ({a mathematical formula}π&gt;i, respectively) is nonempty, then {a mathematical formula}CT(π&lt;i) ({a mathematical formula}CT(π&gt;i), respectively) contains {a mathematical formula}Ol by Lemma 21. Either {a mathematical formula}π&lt;i or {a mathematical formula}π&gt;i is a cycle. Therefore, {a mathematical formula}CT(π) contains {a mathematical formula}Ol⋄R∩R⋄Ol∩Ol⋄R⋄Ol. In summary, for each path π from x to y in Γ with length ≥2, we have {a mathematical formula}CT(π)⊇W∩Ol⋄R∩R⋄Ol∩Ol⋄R⋄Ol. Because {a mathematical formula}Ol⋄R⋄Ol is always the universal relation (as {a mathematical formula}PO⋄R⋄PO=PO⋄PO=⋆l by Lemma 1), we know S, as the intersection of the weak compositions of all paths from x to y in Γ with length ≥2, contains {a mathematical formula}W∩Ol⋄R∩R⋄Ol. Since {a mathematical formula}S=R∩W, we have (A.1) immediately.We next show {a mathematical formula}R⊇W. Because Γ is consistent and satisfies (6), we know {a mathematical formula}S=R∩W is neither empty nor {a mathematical formula}{EQ}, i.e.,{a mathematical formula}If {a mathematical formula}PO∈R, then {a mathematical formula}Ol⋄R∩R⋄Ol⊇PO⋄PO is the universal relation. That {a mathematical formula}R⊇W follows directly from {a mathematical formula}R∩W⊇W∩⋆l=W.If {a mathematical formula}PO∉R, then {a mathematical formula}PO∉W because {a mathematical formula}PO∈Ol⋄R∩R⋄Ol and (A.1) holds. We show {a mathematical formula}R⊇W. We only consider RCC8 relations. The case for RCC5 relations is similar. Suppose R is a relation in a distributive subalgebra of RCC8 such that {a mathematical formula}PO∉R and {a mathematical formula}R≠EQ. Checking the lists of relations in the two maximal distributive subalgebras given in Appendix B, R is either a basic relation other than PO and EQ, or one of the following relations{a mathematical formula}There are several subcases. Suppose R is a basic relation α other than PO and EQ. We write {a mathematical formula}αd for the other basic relation such that {a mathematical formula}{α,αd} is a relation in (A.2). For example, {a mathematical formula}DCd=EC, {a mathematical formula}TPPd=NTPP, and {a mathematical formula}TPP−1d=NTPP−1. From the RCC8 composition table we can see{a mathematical formula} holds for every basic relation α other than PO and EQ. We assert that {a mathematical formula}αd∉W if {a mathematical formula}R={α}. This is because, otherwise, we have {a mathematical formula}αd∈W∩O8⋄R∩R⋄O8 and hence by (A.1){a mathematical formula}αd∈R∩W⊆R. A contradiction. In particular, if α is DC, EC, NTPP, or {a mathematical formula}NTPP−1, then {a mathematical formula}W=R. If α is either TPP or {a mathematical formula}TPP−1, then we can further show {a mathematical formula}EQ∈O8⋄α∩α⋄O8 and hence {a mathematical formula}EQ∉W. This implies {a mathematical formula}W=R.Suppose R is {a mathematical formula}{DC,EC}, {a mathematical formula}{TPP,NTPP,EQ}, or {a mathematical formula}{TPP−1,NTPP−1,EQ}. Note that {a mathematical formula}PO∉W, and {a mathematical formula}∅≠R∩W≠{EQ}. This shows that W is contained in R.Suppose R is {a mathematical formula}{TPP,NTPP} or {a mathematical formula}{TPP−1,NTPP−1}. By (A.1) and {a mathematical formula}EQ∈O8⋄R∩R⋄O8, W does not contain EQ. Hence W is contained in R.Suppose R is {a mathematical formula}{TPP,EQ}. By (A.1) and {a mathematical formula}NTPP∈O8⋄R∩R⋄O8, W cannot contain NTPP. This implies that W is contained in R. The case for {a mathematical formula}R={TPP−1,EQ} is similar.In summary, we have {a mathematical formula}R⊇W in all cases. In other words, R can be obtained as the intersection of all paths from x to y in {a mathematical formula}Γ∖{(xRy)}. Hence {a mathematical formula}(xRy) is redundant in Γ by Lemma 23.  □
     </paragraph>
    </section>
    <section label="Appendix B">
     <section-title>
      Maximal distributive subalgebras of RCC5/8
     </section-title>
     <paragraph>
      A distributive subalgebra {a mathematical formula}S is maximal if there is no other distributive subalgebra that properly contains {a mathematical formula}S. To compute the maximal distributive subalgebras, we first compute {a mathematical formula}Bˆl, the closure of {a mathematical formula}Bl in RCCl under converse, weak composition, and intersection, and then check by a program if {a mathematical formula}Bˆl∪Z satisfies distributivity for some subset Z of RCCl.
     </paragraph>
     <paragraph>
      Write {a mathematical formula}Dl for the set of RCCl relations α such that {a mathematical formula}Bˆl∪{α} satisfies distributivity. For every pair of relations α, β in {a mathematical formula}Dl, we check if {a mathematical formula}Bˆl∪{α,β} satisfies distributivity and say α has d-relation to β if this is the case. Our result shows that there are precisely two disjoint subsets {a mathematical formula}Xl and {a mathematical formula}Yl (which form a partition of {a mathematical formula}Dl) such that each relation α in {a mathematical formula}Xl ({a mathematical formula}Yl, respectively) has d-relation to every other relation in {a mathematical formula}Xl ({a mathematical formula}Yl, respectively), but has no d-relation to any relation in {a mathematical formula}Yl ({a mathematical formula}Xl, respectively). Moreover, {a mathematical formula}Bˆl∪Xl and {a mathematical formula}Bˆl∪Yl are both distributive subalgebras of RCCl. Clearly, these are the only maximal distributive subalgebras of RCCl.
     </paragraph>
     <paragraph>
      For RCC5, the closure of basic relations {a mathematical formula}Bˆ5 contains 12 nonempty relations. These are the five basic relations, and the following 7 relations (cf. Section 2.4).{a mathematical formula}{a mathematical formula}
     </paragraph>
     <paragraph>
      The first maximal distributive subalgebra, denoted by {a mathematical formula}D145, contains (except relations in {a mathematical formula}Bˆ5){a mathematical formula} The second maximal distributive subalgebra, denoted by {a mathematical formula}D205, contains in addition the following eight relations{a mathematical formula}{a mathematical formula}{a mathematical formula} It is easy to see that both {a mathematical formula}D145 and {a mathematical formula}D205 are contained in {a mathematical formula}H5, the maximal tractable subclass of RCC5 identified in [43], [27].
     </paragraph>
     <paragraph>
      For RCC8, the closure of basic relations contains 37 nonempty relations. These are the eight basic relations and the following 29 relations{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula} where {a mathematical formula}⋆8 is the universal relation consisting of all RCC8 basic relations.
     </paragraph>
     <paragraph>
      The first maximal distributive subalgebra, denoted by {a mathematical formula}D418, contains in addition the following four relations{a mathematical formula}{a mathematical formula} This distributive subalgebra turns out to be exactly the class of convex RCC8 relations identified in [8]. The second maximal distributive subalgebra, denoted by {a mathematical formula}D648, contains in addition the following 27 relations{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula} It is easy to check that both {a mathematical formula}D418 and {a mathematical formula}D648 are contained in {a mathematical formula}Hˆ8, one of the three maximal subclasses of RCC8 identified in [42].
     </paragraph>
    </section>
    <section label="Appendix C">
     <section-title>
      Supplementary material
     </section-title>
     <paragraph>
      The following is the Supplementary material related to this article.{a mathematical formula}
     </paragraph>
    </section>
   </appendices>
  </root>
 </body>
</html>