<?xml version="1.0" encoding="utf-8"?>
<html>
 <body>
  <root>
   <title>
    Strategyproof matching with regional minimum and maximum quotas.
   </title>
   <content>
    <section label="1">
     <section-title>
      Introduction
     </section-title>
     <paragraph>
      In this paper, we consider a two-sided matching problem. In a standard two-sided matching problem, there are two types of agents, where one type called a student is matched to another type called a school. Multiple students can be matched to a single school, and a school has an individual maximum quota: the number of students assigned to a school cannot exceed a certain limit. In this paper, we use the terms “students” and “schools” to represent agents in our model, but our results can obviously be applied to other two-sided matching problems, such as matching medical residents to hospitals, cadets to military branches, workers to firms, and so on.
     </paragraph>
     <paragraph>
      The theory of two-sided matching has been extensively developed.{sup:1} However, many real-world matching markets are subject to more general distributional constraints. For example, school districts might need at least a certain number of students in each school to operate, as in college admissions in Hungary [2], i.e., individual minimum quotas must be satisfied. Also, in the early 2000s, the United States Military Academy solicited cadet preferences over assignments to various branches and imposed minimum and maximum quotas on the number of students who could be assigned to each branch [25], [26]. Diversity constraints at schools can also be considered as a minimum quota problem, where students are divided into several types according to their socioeconomic status, and school districts impose a minimum quota for each type of students at each school. Furthermore, minimum/maximum quotas can be imposed on a set of schools (region) rather than on an individual school. One motivating example of this model is a hospital–resident matching problem. Assume a policy maker requires that a certain number of residents be assigned to hospitals on an isolated island. She also hopes to avoid an excessive concentration of residents in metropolitan areas. However, she does not want to interfere with how these residents are assigned within the hospitals on the island or in the metropolitan area.
     </paragraph>
     <paragraph>
      Table 1 summarizes the existing works related to regional minimum/maximum quotas. We assume that individual maximum quotas are requisite since virtually all existing works assume the existence of individual maximum quotas.{sup:2} When considering regional quotas, we distinguish a special case where the regions have a hierarchical structure. When only individual maximum quotas are imposed, the standard Deferred Acceptance mechanism (DA) [8] is widely used because it is strategyproof and stable. Since stability is decomposed fairness and nonwastefulness, DA is fair and nonwasteful. Also, regional maximum quotas, in which regions have a hierarchical structure, are considered in [2], [10], [18]. Individual minimum quotas are considered in [7] and two DA-based strategyproof mechanisms are developed. However, as shown in Table 1, a number of interesting combinations remain unexplored, which we examine in this paper.
     </paragraph>
     <paragraph>
      More specifically, we first analyze the complexity for checking whether a feasible matching (which satisfies all regional quotas) exists or not, when we put no restrictions on regions. We then prove that this problem is NP-complete. Since checking the existence of a feasible matching is intractable in general, we concentrate on a special case where regions have a hierarchical structure. As described in Table 1, we consider the most general case in this setting, where each region and each individual school can simultaneously impose both minimum and maximum quotas.
     </paragraph>
     <paragraph>
      A hierarchical structure is ubiquitous in any company, university, or military organization. When such an organization as a company allocates human resources, it is natural to assume that the obtained matching must satisfy the feasibility constraints at various levels in the organization hierarchy; each division, department, or section, has its own minimum/maximum quotas. Such feasibility constraints can naturally be represented by regional quotas.
     </paragraph>
     <paragraph>
      We develop two strategyproof mechanisms based on the DA, which we call Priority List based DA with Regional minimum and maximum Quotas (PLDA-RQ) and Round-robin Selection Deferred Acceptance with Regional minimum and maximum Quotas (RSDA-RQ). These mechanisms are inspired by two existing mechanisms that can handle regional maximum quotas [10], [18]. We say a matching is fair if no school wants to replace a student matched to it with another student who prefers to be matched with the school. Also, we say a matching is nonwasteful if student s wishes to be assigned to school c but is not accepted, then there must be a plausible reason, i.e., moving s to c violates some maximum/minimum quotas. A matching which satisfies fairness and nonwastefulness is called stable matching.{sup:3} When regional quotas are imposed, a stable matching may no longer exist, i.e., fairness and nonwastefulness are incompatible. PLDA-RQ and RSDA-RQ are fair, thus the matchings obtained by these mechanisms can be wasteful. We show that the two mechanisms satisfy different versions of nonwastefulness respectively; each is weaker than the original nonwastefulness. Moreover, we compare our mechanisms with an artificial cap mechanism (in which regional quotas are removed by imposing artificial caps so that the standard DA can be applied) via simulation experiments. Experimental results illustrate that our mechanisms have a clear advantage in terms of nonwastefulness and student welfare.
     </paragraph>
     <section label="1.1">
      <section-title>
       Related literature
      </section-title>
      <paragraph>
       There is substantial literature on two-sided matching [24]. In recent years, matching problems with some constraints have been broadly studied.
      </paragraph>
      <paragraph>
       Kamada and Kojima [18] consider the residency matching problem in Japan, in which maximum quotas to regions (disjoint sets of schools) are imposed. They show that, with regional maximum quotas, a stable matching does not always exist, and propose a strategyproof mechanism that produces a matching that satisfies a weaker stability requirement. Goto et al. [10] also consider a matching problem with regional maximum quotas, and introduce another strategyproof mechanism that produces a matching taking schools' competition in each region into account. Fragiadakis et al. [7] study school choice problems where each school/college needs a certain number of students for operation, i.e., individual minimum quotas. Our work is based on [7], [10], [18] and extends their mechanisms to handle regional minimum/maximum quotas.
      </paragraph>
      <paragraph>
       Motivated by the matching system for higher education in Hungary, Biro et al. [2] consider two kinds of college admission problems; one is with individual minimum quotas, and the other is with regional maximum quotas. In both cases, they show that a stable matching may not exist and checking the existence of the one is NP-complete. On the other hand, they prove that, if the regional structure is hierarchical and the colleges in the same region have identical priorities, a variation of the DA can find stable matchings with regional maximum quotas. However, we cannot use their mechanisms in our settings since we assume that schools have heterogeneous priorities and regional minimum quotas are imposed.
      </paragraph>
      <paragraph>
       Monte and Tumennasan [22] consider the problem of assigning agents to different projects, where each project needs more than a particular number of agents. In this problem, each project does not have a priority over agents. Thus, this model can be regarded as an extension of the house allocation problem rather than the matching problem between two-sided agents. They develop a strategyproof serial dictatorship mechanism for this setting. However, this mechanism cannot handle regional quotas.
      </paragraph>
      <paragraph>
       Also, in the literature of computer science, several generalizations of the standard stable matching have been proposed, and the complexity of checking the existence of a (generalized) stable matching has been discussed [16]. Huang [16] considers a hierarchical (laminar) system, which is different from our model. In [16], each applicant (student) is matched with an institute (school), where the applicants are classified into subgroups called classes. Minimum/maximum quotas are imposed on classes, but no quota is imposed on groups of institutes. By contrast, in our model, each student is matched with a school, and groups of schools (regions) have minimum/maximum quotas. Fleiner and Kamiyama [6] extend the model in [16] to many-to-many matching cases. Hamada et al. [14] also study matching with minimum quotas in the hospitals–residents problem, showing that minimizing the number of blocking pairs is an NP-hard problem when minimum quotas are imposed. Our setting is different from these existing works since we handle regional quotas, and our complexity result is on checking the existence of a feasible matching. Also, these works do not discuss strategy issues, which is one of main concerns in our paper.
      </paragraph>
      <paragraph>
       Minimum quotas are also discussed in a controlled school choice program [4], [13], [19], [21]. However, models and theoretical properties in a controlled school choice program setting are quite different from the setting used in our paper. Kojima [19] considers a model where students are divided into two types, i.e., minority and majority, and shows that setting hard-bounds for the number of majority students may hurt the minority students. To overcome this shortcoming, Hafalir et al. [13] propose soft-bounds for the number of minority students. Kominers and Sönmez [21] consider a model where each seat/slot of one school has a different priority ranking for students. This model can represent certain types of affirmative action and can be considered a generalization of the model in [13]. Ehlers et al. [4] generalize the model in [13] to cases where the number of student types can be more than two. Ehlers et al. [4] show several impossibility results when these minimum quotas are hard constraints. They obtain positive results when these minimum quotas are soft bounds. Westkamp [27] analyzes complex (maximum) quota constraints in the German university admissions system, while Braun et al. [3] conduct an experimental analysis of the same system. In our setting, students are not partitioned into different types. Thus, although minimum quotas are hard constraints, positive results have been obtained [7].
      </paragraph>
      <paragraph>
       We use the framework of matching with contracts due to Hatfield and Milgrom [15].{sup:4} They identify a set of conditions for key results in matching with contracts. More specifically, if the choice function of every school satisfies three conditions (i.e., substitutability, the law of aggregate demand, and the irrelevance of rejected contracts) then a mechanism called generalized Deferred Acceptance (DA) mechanism finds a “stable” allocation, and the mechanism is strategyproof for students. There are several recent works related to a general framework for handling various distributional constraints. Kojima et al. [20] propose a general framework that can handle a general class of constraints (represented by matroidal constraints and an {a mathematical formula}M♮-concave function). Their framework provides an alternative method to [15] for proving the fact that the generalized DA is strategyproof. Although it is possible to apply their framework in our setting, we use a more familiar, standard framework based on [15]. Note that although Hatfield and Milgrom [15] and Kojima et al. [20] provide useful tool kits for proving that the generalized DA mechanism is strategyproof, developing a concrete mechanism that works for new types of constraints remains challenging; we need to appropriately design a choice function of schools so that their frameworks are applicable while the required design goals can be achieved. Goto et al. [11] present a general framework for handling more general class of constraints (beyond {a mathematical formula}M♮-concavity). Their mechanism (called Adaptive DA) is strategyproof and nonwasteful, but not fair. In this paper, we concentrate on fair mechanisms. Our new mechanisms are not an instance of their mechanism. Kamada and Kojima [17] also provide a general framework for handling (hierarchical) regional maximum quotas. However, their model does not consider regional minimum quotas. When only regional maximum quotas exist, our RSDA-RQ mechanism can be considered as one instance of their mechanism. However, even in this case, our PLDA-RQ mechanism is not an instance of their mechanism. Yokoi [28] proposes another general framework, in which each school has a matroidal choice function, but without any distributional constraints between schools. In this paper, we consider a model where distributional constraints are imposed on a group of schools. Thus, we cannot apply the framework of Yokoi [28] to our model.
      </paragraph>
      <paragraph>
       We develop mechanisms that can directly handle regional quotas. An alternative approach is to artificially modify individual quotas so that all regional quotas can be automatically satisfied when individual quotas are satisfied. Then, we can apply any existing mechanisms that can handle only individual quotas. We call such a mechanism artificial cap mechanism. As long as artificial caps are determined independently from students' preferences, an artificial cap mechanism is strategyproof. Such a mechanism is used in the Japan Residency Matching Program, in which the capacities of hospitals in urban areas such as Tokyo are reduced so that more doctors will be forced to apply to hospitals in rural areas [18]. In Section 6, we show the advantage of our approach over the artificial cap mechanism.
      </paragraph>
      <paragraph>
       The remainder of this paper is organized as follows. In Section 2, we first introduce a general model in which we do not put any restrictions on the regional structure. Next, in Section 3, we examine the complexity for checking the existence of a feasible matching for the general case and the hierarchical case. In Section 4, we describe the generalized DA mechanism and its properties. Then, Section 5 introduces our newly developed mechanisms. Next, Section 6 shows the advantage of our approach over the artificial cap mechanism via computer simulations. Finally, Section 7 concludes our paper.
      </paragraph>
     </section>
    </section>
    <section label="2">
     <section-title>
      Model
     </section-title>
     <paragraph>
      A market is a tuple {a mathematical formula}(S,C,R,p,q,≻S,≻C,X,≻PL). {a mathematical formula}S={s1,s2,…,sn} is a set of students, {a mathematical formula}C={c1,c2,…,cm} is a set of schools, and {a mathematical formula}R={r1,r2,…} is a set of regions, each of which is simply a set of schools {a mathematical formula}r∈2C∖{∅}. We assume {a mathematical formula}|R|, i.e., the number of regions, is polynomial in {a mathematical formula}|C|, i.e., the number of schools. We assume each region has its minimum/maximum quotas, i.e., {a mathematical formula}p=(pr)r∈R and {a mathematical formula}q=(qr)r∈R are the regional minimum and maximum quota vectors, where {a mathematical formula}0≤pr≤qr for all {a mathematical formula}r∈R. When r consists of a single school c, {a mathematical formula}p{c}/q{c} represent the minimum/maximum quota for individual school {a mathematical formula}pc/qc. Each student s has a strict preference relation {a mathematical formula}≻s over the schools, and each school c has an idiosyncratic strict priority relation {a mathematical formula}≻c over the students.{sup:5} The vectors of all such relations are denoted as {a mathematical formula}≻S=(≻s)s∈S for the students and {a mathematical formula}≻C=(≻c)c∈C for the schools. We assume that all schools are acceptable to all students and vice versa. Without this assumption, we cannot guarantee the existence of a feasible matching even if the number of students is large and the minimum quotas are small.{sup:6}{sup:,}{sup:7}
     </paragraph>
     <paragraph>
      We follow the model presented in [15], where a student and a school are matched by a contract.{sup:8}{a mathematical formula}X=S×C is a set of all contracts, where {a mathematical formula}(s,c)∈X represents a contract by which s is matched with c. A matching is expressed as a set of contracts {a mathematical formula}X′⊆X. For any agent {a mathematical formula}a∈S∪C, {a mathematical formula}Xa′ denotes the set of contracts related to a in {a mathematical formula}X′. Let {a mathematical formula}Xr′ denote {a mathematical formula}⋃c∈rXc′. {a mathematical formula}≻PL is a serial order over X called priority list, which represents a tie-breaking order among contracts. The priority list should respect the priority ordering of each school, i.e., the following condition holds: {a mathematical formula}(s,c)≻PL(s′,c) holds iff {a mathematical formula}s≻cs′.
     </paragraph>
     <paragraph>
      One simple and natural way to construct a priority list is to use the ranks of the students for each school and a tie-breaking ordering over schools. Let {a mathematical formula}rankc(s) denote the rank of student s according to school c's priority ordering on students. To be more precise, if s is ranked k-th from the top in c's priority ordering, then {a mathematical formula}rankc(s)=k. Let us assume the tie-breaking ordering is defined as {a mathematical formula}c1→c2→…→cm. Given this tie-breaking ordering, we define each binary relation in priority list {a mathematical formula}≻PL as follows: for any {a mathematical formula}s,s′∈S and any {a mathematical formula}ci,cj∈C, {a mathematical formula}(s,ci)≻PL(s′,cj) holds if one of the following conditions holds:
     </paragraph>
     <list>
      <list-item label="•">
       {a mathematical formula}rankci(s)&lt;rankcj(s′), or
      </list-item>
      <list-item label="•">
       {a mathematical formula}rankci(s)=rankcj(s′) and {a mathematical formula}i&lt;j.
      </list-item>
     </list>
     <paragraph>
      In other words, for two pairs of {a mathematical formula}(s,c) and {a mathematical formula}(s′c′), {a mathematical formula}(s,c)≻PL(s′,c′) holds if the ranking of s for c is strictly higher than that of {a mathematical formula}s′ for {a mathematical formula}c′. If the rankings are the same, then the schools use tie-breaking ordering among schools. If there exists an organization or a consortium in which all hospitals are involved, it would be possible to agree on a more sophisticated method to generate a priority list.
     </paragraph>
     <paragraph>
      We say {a mathematical formula}X′ is school-feasible if ∀r, {a mathematical formula}pr≤|Xr′|≤qr holds. We say {a mathematical formula}X′ is student-feasible if ∀s, {a mathematical formula}|Xs′|=1 holds. Then, we say {a mathematical formula}X′ is feasible if it is student- and school-feasible. Also, we say {a mathematical formula}X′ is semi-school-feasible if there exists {a mathematical formula}X″⊇X′ such that {a mathematical formula}X″ is school-feasible. We say a mechanism is feasible if it produces a feasible matching for every possible profile of preferences and priorities.
     </paragraph>
     <paragraph>
      A mechanism is a function that takes a profile of students' preferences as input and returns a matching. We say a mechanism is strategyproof if no student ever has any incentive to misreport her preference, regardless what other students report.
     </paragraph>
     <paragraph label="Definition 1">
      We introduce several desirable properties of matchings and mechanisms. fairnessGiven feasible matching {a mathematical formula}X′, student s has justified envy toward {a mathematical formula}s′, if there exist {a mathematical formula}(s,c),(s′,c′)∈X′, such that the following conditions hold: (i) {a mathematical formula}c′≻sc and (ii) {a mathematical formula}s≻c′s′. We say that feasible matching {a mathematical formula}X′ is fair if no student has justified envy. We say a mechanism is fair if it always obtains a fair matching.
     </paragraph>
     <paragraph>
      In words, student s has justified envy when she would rather be matched to school {a mathematical formula}c′ than her current match c, and she has higher priority at {a mathematical formula}c′ than student {a mathematical formula}s′ who is assigned to {a mathematical formula}c′.
     </paragraph>
     <paragraph label="Definition 2">
      nonwastefulnessGiven feasible matching {a mathematical formula}X′, student sclaims an empty seat of {a mathematical formula}c′, if there exists {a mathematical formula}(s,c)∈X′ such that the following conditions hold: (i) {a mathematical formula}c′≻sc, and (ii) matching {a mathematical formula}X″, which is obtained from {a mathematical formula}X′ by moving s from c to {a mathematical formula}c′, is feasible. More precisely, {a mathematical formula}X″ is given as {a mathematical formula}(X′∪{(s,c′)})∖{(s,c)}. We say that feasible matching {a mathematical formula}X′ is nonwasteful if no student claims an empty seat. We say a mechanism is nonwasteful if it always obtains a nonwasteful matching.
     </paragraph>
     <paragraph label="Example 1">
      In general, fairness and nonwastefulness cannot coexist when minimum/maximum quotas are imposed (even if there exist no regional maximum/minimum quotas), i.e., there exists a case where no matching is fair and nonwasteful [4], [7], [18], as shown in the following example. Assume {a mathematical formula}S={s1,s2},C={c1,c2,c3}, {a mathematical formula}qc=2 for all {a mathematical formula}c∈C, {a mathematical formula}pc1=1, and {a mathematical formula}pc2=pc3=0. The preferences of students are given as follows: {a mathematical formula}c2≻s1c3≻s1c1, {a mathematical formula}c3≻s2c2≻s2c1.The priorities of schools are given as: {a mathematical formula}s1≻c1s2, {a mathematical formula}s2≻c2s1, {a mathematical formula}s1≻c3s2.
     </paragraph>
     <paragraph>
      Here, {a mathematical formula}c1 is the least popular school for both {a mathematical formula}s1 and {a mathematical formula}s2, but at least one student must be assigned to {a mathematical formula}c1 since {a mathematical formula}pc1=1. Assume {a mathematical formula}s1 is allocated to {a mathematical formula}c1. Then, {a mathematical formula}s2 must be allocated to her most preferred school {a mathematical formula}c3, or otherwise, {a mathematical formula}s2 claims an empty seat of {a mathematical formula}c3. However, then {a mathematical formula}s1 has justified envy toward {a mathematical formula}s2 since {a mathematical formula}s1≻c3s2. Similarly, assume {a mathematical formula}s2 is allocated to {a mathematical formula}c1. Then {a mathematical formula}s1 must be allocated to her most preferred school {a mathematical formula}c2, or otherwise, {a mathematical formula}s1 claims an empty seat of {a mathematical formula}c2. However, then {a mathematical formula}s2 has justified envy toward {a mathematical formula}s1 since {a mathematical formula}s2≻c2s1.
     </paragraph>
     <paragraph label="Definition 3">
      Let us introduce two conditions that are weaker than nonwastefulness. PL-nonwastefulStudent s, who is assigned to c, claims an empty seat of {a mathematical formula}c′by PL in feasible matching {a mathematical formula}X′ if: (i) {a mathematical formula}c′≻sc, (ii) {a mathematical formula}(X′∖{(s,c)})∪{(s,c′)} is feasible, and (iii) {a mathematical formula}(s,c′)≻PL(s,c). A matching is PL-nonwasteful if no student claims an empty seat by PL. We say a mechanism is PL-nonwasteful if it always produces a PL-nonwasteful matching.
     </paragraph>
     <paragraph>
      In words, the claim of student s for moving her from c to {a mathematical formula}c′ is regarded as legitimate only when the priority list supports this, i.e., {a mathematical formula}(s,c′)≻PL(s,c) holds.
     </paragraph>
     <paragraph label="Definition 4">
      school-equitable-nonwastefulnessStudent s, who is assigned to c, school-equitably claims an empty seat of {a mathematical formula}c′ in feasible matching {a mathematical formula}X′ if: (i) {a mathematical formula}c′≻sc, (ii) {a mathematical formula}(X′∖{(s,c)})∪{(s,c′)} is feasible, and (iii) {a mathematical formula}|Xc′|−|Xc′′|≥2. A matching is school-equitably-nonwasteful if no student school-equitably claims an empty seat. We say a mechanism is school-equitably-nonwasteful if it always produces a school-equitably-nonwasteful matching.
     </paragraph>
     <paragraph>
      In words, the claim of student s is regarded as legitimate only when moving s from c to {a mathematical formula}c′ strictly decreases the imbalance of students among these schools.{sup:9}
     </paragraph>
     <paragraph>
      Assume in Example 1, the priority list is defined as: {a mathematical formula}(s1,c1)≻PL(s2,c2)≻PL(s1,c3)≻PL(s2,c1)≻PL(s1,c2)≻PL(s2,c3). This priority list is generated from schools' priorities and a tie-breaking ordering {a mathematical formula}c1→c2→c3. Then, {a mathematical formula}X′={(s1,c1),(s2,c2)} is fair and PL-nonwasteful, since the claim of student {a mathematical formula}s2 to move her from {a mathematical formula}c2 to {a mathematical formula}c1 is not supported by the priority list. {a mathematical formula}X′ is also fair and school-equitably-nonwasteful, since moving {a mathematical formula}s2 from {a mathematical formula}c2 to {a mathematical formula}c1 does not strictly decrease the imbalance among {a mathematical formula}c1 and {a mathematical formula}c2.
     </paragraph>
     <paragraph label="Example 2">
      PL-nonwastefulness and school-equitable-nonwastefulness are independent. A PL-nonwasteful matching can be not school-equitably-nonwasteful and vice versa. Let us consider the following example. Assume {a mathematical formula}S={s1,s2},C={c1,c2}, {a mathematical formula}qc=2 for all {a mathematical formula}c∈C, and {a mathematical formula}pc=0 for all {a mathematical formula}c∈C. Schools {a mathematical formula}c1 and {a mathematical formula}c2 form a region with regional maximum quota 2. The preferences of students are given as follows: {a mathematical formula}c1≻s1c2 and {a mathematical formula}c2≻s2c1. The priorities of schools are given as: {a mathematical formula}s1≻c1s2 and {a mathematical formula}s1≻c2s2. The priority list is given as: {a mathematical formula}(s1,c1)≻PL(s1,c2)≻PL(s2,c1)≻PL(s2,c2).
     </paragraph>
     <paragraph>
      Here, {a mathematical formula}X′={(s1,c1),(s2,c1)} is PL-nonwasteful since the claim of student {a mathematical formula}s2 to move her from {a mathematical formula}c1 to {a mathematical formula}c2 is not supported by the priority list, while it is not school-equitably-nonwasteful, since moving {a mathematical formula}s2 from {a mathematical formula}c1 to {a mathematical formula}c2 strictly decreases the imbalance among {a mathematical formula}c1 and {a mathematical formula}c2. Assume the case where {a mathematical formula}c1≻s2c2. Then, {a mathematical formula}X′={(s1,c1),(s2,c2)} is school-equitably-nonwasteful, since moving {a mathematical formula}s2 from {a mathematical formula}c2 to {a mathematical formula}c1 increases the imbalance among {a mathematical formula}c1 and {a mathematical formula}c2, but it is not PL-nonwasteful since the claim of student {a mathematical formula}s2 to move her from {a mathematical formula}c2 to {a mathematical formula}c1 is supported by the priority list.
     </paragraph>
     <paragraph label="Definition 5">
      Let us introduce an alternative fairness requirement, which we call PL-fairness. This requirement is based on the underlining priority list. PL-fairness implies fairness. PL-fairnessGiven feasible matching {a mathematical formula}X′, student s has justified envy by PL toward {a mathematical formula}s′ if there exist {a mathematical formula}(s,c),(s′,c′)∈X′ and {a mathematical formula}(s,c″)∈X∖X′, such that the following conditions hold: (i) {a mathematical formula}c″≻sc, (ii) {a mathematical formula}(s,c″)≻PL(s′,c′), and (iii) {a mathematical formula}(X′∪{(s,c″)})∖{(s′,c′)} is school-feasible. We say that feasible matching {a mathematical formula}X′ is PL-fair if no student has justified envy by PL. We say a mechanism is PL-fair if it always produces a PL-fair matching.
     </paragraph>
     <paragraph>
      In words, student s has justified envy by PL in {a mathematical formula}X′ if s prefers {a mathematical formula}c″ over her current assigned school c, {a mathematical formula}(s,c″) has higher priority than {a mathematical formula}(s′,c′) according to {a mathematical formula}≻PL, and the set of contracts obtained by removing {a mathematical formula}(s′,c′) and adding {a mathematical formula}(s,c″) is school-feasible. If we restrict our attention to the case where {a mathematical formula}c″=c′, this definition becomes identical to Definition 1. Intuitively, PL-fairness means that if student s wants a seat of school {a mathematical formula}c″ and student {a mathematical formula}s′ wants a seat of school {a mathematical formula}c′, but giving these seats to both students will violate some quotas, then this competition must be settled based on the priority list.
     </paragraph>
    </section>
    <section label="3">
     <section-title>
      Complexity of finding a feasible matching
     </section-title>
     <section label="3.1">
      <section-title>
       General case
      </section-title>
      <paragraph label="Theorem 1">
       Given an instance of a market, the first question we need to answer is whether a feasible matching exists or not. In the model with only individual maximum/minimum quotas, this question is easy, i.e., it suffices to check whether {a mathematical formula}∑c∈Cpc≤n≤∑c∈Cqc holds. However, by introducing regional maximum/minimum quotas, this question becomes hard, i.e., it becomes NP-complete. Given S, C, R, p, and q, checking whether a feasible matching exists or not is NP-complete. This holds even for the case where{a mathematical formula}∀r∈R,{a mathematical formula}|r|≤3.
      </paragraph>
      <paragraph label="Proof">
       Clearly, for given matching {a mathematical formula}X′, checking whether it satisfies all quotas can be done in {a mathematical formula}O(|R|⋅|C|). Thus, this problem is in NP.To show that this problem is NP-hard, we reduce an arbitrary 3-SAT problem instance to a matching problem with regional maximum/minimum quotas. 3-SAT consists of set of boolean variables V and set of clauses L. Each clause l is a disjunction of three literals, each of which is either boolean variable {a mathematical formula}x∈V or its negation ¬x, e.g., {a mathematical formula}x1∨¬x2∨x3.Now, for a given 3-SAT problem instance, we create an equivalent matching problem instance as follows. For each literal (i.e., x or ¬x), we create a school. A pair of x and ¬x forms a region, whose minimum/maximum quotas are 1. Also, for each {a mathematical formula}l∈L, the schools in l form a region, whose minimum quota is 1. There are n students, where {a mathematical formula}n=|V|.Assume that there exists a feasible matching in this problem. Then, let us determine an instantiation of the variables as follows: if a student is assigned to x, x is TRUE (thus, ¬x is FALSE). If a student is assigned to ¬x, ¬x is TRUE (thus x is FALSE). Note that x and ¬x form a region, whose minimum/maximum quotas are 1. Thus, each student is assigned to either x or ¬x, but not both at the same time. Thus, the truth value of x is uniquely determined. Then, for each clause l, since its minimum quota is 1, at least one literal in l is TRUE. Thus, clause l is satisfied. Therefore, this 3-SAT instance is satisfiable. Also, if there exists no feasible matching, then, there exists no instantiation of the variables that satisfies all the clauses. Thus, this 3-SAT instance is unsatisfiable.  □
      </paragraph>
      <paragraph label="Theorem 2">
       Note that a regional maximum quota can be represented as a regional minimum quota and vice versa. For example, assume that there exists region r, whose minimum quota is {a mathematical formula}pr. Then, we can replace it with complementary region {a mathematical formula}r¯=C∖r, whose maximum quota {a mathematical formula}qr¯=n−pr. This modified problem is equivalent to the original problem. Thus, the following theorem holds. Given S, C, R, p, and q, checking whether a feasible matching exists or not is NP-complete. This holds even for the case where (i) there exist only maximum quotas, or (ii) there exist only minimum quotas.
      </paragraph>
     </section>
     <section label="3.2">
      <section-title>
       Hierarchical case
      </section-title>
      <paragraph>
       Since checking the existence of a feasible matching is intractable in general, in the rest of this paper, we concentrate on a special case where regions are hierarchical.{sup:10} A similar hierarchical model is used in [2], [18].
      </paragraph>
      <paragraph label="Definition 6">
       hierarchical regionWe say set of regions R is hierarchical if {a mathematical formula}∀r,r′∈R where {a mathematical formula}r≠r′, one of the following holds: (i) {a mathematical formula}r∩r′=∅, (ii) {a mathematical formula}r⊂r′, or (iii) {a mathematical formula}r′⊂r.
      </paragraph>
      <paragraph>
       If set of regions R is hierarchical, we can construct a tree that represents R. We assume that C, which is the region that contains all schools, is included in R. We also assume C has non-binding minimum quota {a mathematical formula}pC=n and maximum quota {a mathematical formula}qC=n, where n is the number of students. Furthermore, we assume for each {a mathematical formula}c∈C, {a mathematical formula}{c}∈R, i.e., for each school {a mathematical formula}c∈C, there exists a region that consists of a single school c.
      </paragraph>
      <paragraph label="Definition 7">
       treeTree {a mathematical formula}TR for set of regions R is defined as follows: (i) root node C is the region that contains all the schools, (ii) leaf node {a mathematical formula}{c} is a region that contains only one individual school {a mathematical formula}c∈C, and (iii) for each node {a mathematical formula}r∈R, where {a mathematical formula}r≠C, its parent node {a mathematical formula}r′∈R is a region that is the proper inclusion-minimal superset of r.
      </paragraph>
      <paragraph>
       Fig. 1 shows an example of a tree structure. Let {a mathematical formula}children(r) denote a set of child nodes of r. For a leaf node, i.e., {a mathematical formula}r={c}, {a mathematical formula}children(r) is ∅. It is clear that {a mathematical formula}r=⋃r′∈children(r)r′ holds for {a mathematical formula}|r|&gt;1. We often use the terms “node” and “region” interchangeably.
      </paragraph>
      <paragraph label="Theorem 3">
       In contrast to the general case, in a hierarchical model, checking the existence of a feasible matching can be done in linear time, i.e., the following theorem holds. Given S, C, R, p, q, and{a mathematical formula}TR, checking whether a feasible matching exists or not is solved in time linear in the number of nodes in{a mathematical formula}TR.
      </paragraph>
      <paragraph label="Proof">
       A procedure for solving this problem can be described as follows. First, we revise {a mathematical formula}pr in a depth-first manner so that {a mathematical formula}pr is replaced by:{a mathematical formula} Similarly, we revise {a mathematical formula}qr in a depth-first manner so that {a mathematical formula}qr is replaced by:{a mathematical formula} Finally, we check whether {a mathematical formula}pr≤qr holds for all {a mathematical formula}r∈R. If this is the case, a feasible matching exists. Otherwise, there exists no feasible matching.It is clear that if {a mathematical formula}pr&lt;∑r′∈children(r)pr′, it is non-binding and can be replaced by {a mathematical formula}∑r′∈children(r)pr′. It is also clear that if {a mathematical formula}qr&gt;∑r′∈children(r)qr′, it is non-binding and can be replaced by {a mathematical formula}∑r′∈children(r)qr′. If {a mathematical formula}pr&gt;qr holds for some r, it is clear that there exists no feasible matching. Also, if {a mathematical formula}pr≤qr holds for all r, and {a mathematical formula}pC,qC=n holds at root node C, starting from the root node, we can divide n students into several groups and pass one group to one child, so that its regional minimum/maximum quotas are satisfied. By recursively doing this, we can find the assignments of all individual schools, which satisfy all minimum/maximum quotas.It is obvious that this procedure finishes in time linear in the number of nodes in {a mathematical formula}TR.  □
      </paragraph>
      <paragraph>
       In the rest of this paper, we assume regions are hierarchical and{a mathematical formula} holds for all {a mathematical formula}r∈R. Note that the tree in Fig. 1 satisfies this condition.
      </paragraph>
     </section>
    </section>
    <section label="4">
     <section-title>
      Generalized DA
     </section-title>
     <paragraph>
      In this section, we introduce a skeleton of a mechanism called generalized Deferred Acceptance (DA) mechanism [15] and its properties. This mechanism uses choice functions {a mathematical formula}ChS:2X→2X and {a mathematical formula}ChC:2X→2X. For each student s, its choice function {a mathematical formula}Chs(X′) chooses {a mathematical formula}{x}, where {a mathematical formula}x=(s,c)∈Xs′ such that c is her most preferred school within {a mathematical formula}Xs′ (we assume {a mathematical formula}Chs(X′)=∅ if {a mathematical formula}Xs′=∅). Then, the choice function of all students is given as: {a mathematical formula}ChS(X′):=⋃s∈SChs(X′). There are alternative ways to define the choice function of schools {a mathematical formula}ChC. As we discuss in the next section, our two mechanisms, PLDA-RQ and RSDA-RQ, can be expressed by the generalized DA with different formulations of {a mathematical formula}ChC.
     </paragraph>
     <paragraph label="Mechanism 1">
      Formally, the generalized DA is defined as follows.
      <section-title>
       generalized DA
      </section-title>
     </paragraph>
     <list>
      <list-item label="1.">
       {a mathematical formula}Re←∅.
      </list-item>
      <list-item label="2.">
       {a mathematical formula}X′←ChS(X∖Re),X″←ChC(X′).
      </list-item>
      <list-item label="3.">
       If{a mathematical formula}X′=X″then return{a mathematical formula}X′, otherwise,{a mathematical formula}Re←Re∪(X′∖X″), go to 2.
      </list-item>
     </list>
     <paragraph>
      Here, Re is a set of rejected contracts. Students cannot choose contracts in Re. Initially, Re is empty. Thus, each student can choose her most preferred school. The chosen set by students is {a mathematical formula}X′. Then, schools choose {a mathematical formula}X″, which is a subset of {a mathematical formula}X′. If {a mathematical formula}X′=X″, i.e., no contract is rejected by the schools, the mechanism terminates. Otherwise, the mechanism updates Re and repeats the same procedure.
     </paragraph>
     <paragraph label="Definition 8">
      Hatfield and Milgrom [15] define a notion of stability for a matching, which we call HM-stability in this paper.{sup:11}HM-stabilityA matching {a mathematical formula}X′⊆X is said to be HM-stable if {a mathematical formula}X′ satisfies (i) {a mathematical formula}X′=ChS(X′)=ChC(X′) and (ii) there is no contract {a mathematical formula}(s,c)∈X∖X′ such that {a mathematical formula}(s,c)∈ChS(X′∪{(s,c)}) and {a mathematical formula}(s,c)∈ChC(X′∪{(s,c)}).
     </paragraph>
     <paragraph>
      Let {a mathematical formula}X denote all HM-stable matchings. We say {a mathematical formula}X′∈X is the student-optimal HM-stable matching if all students weakly prefer {a mathematical formula}X′ over any other matching in {a mathematical formula}X.
     </paragraph>
     <paragraph>
      For {a mathematical formula}ChC, we require that the following three proprieties hold. Irrelevance of rejected contracts:For any {a mathematical formula}X′⊆X and {a mathematical formula}x∈X∖X′, {a mathematical formula}ChC(X′)=ChC(X′∪{x}) holds if {a mathematical formula}x∉ChC(X′∪{x}). In words, this condition requires when adding x to {a mathematical formula}X′, if x is not accepted, then x does not affect the outcomes of other contracts in {a mathematical formula}X′.Law of aggregate demand:For any {a mathematical formula}X′,X″⊆X with {a mathematical formula}X′⊆X″, {a mathematical formula}|ChC(X′)|≤|ChC(X″)| holds. In words, this condition requires that the number of accepted contracts weakly increases when more contracts are added.Substitutes condition:For any {a mathematical formula}X′,X″⊆X with {a mathematical formula}X′⊆X″, {a mathematical formula}X′∖ChC(X′)⊆X″∖ChC(X″) holds. In words, this condition requires that if contract x is rejected in {a mathematical formula}X′, then it is also rejected when more contracts are added to {a mathematical formula}X′.
     </paragraph>
     <paragraph>
      Hatfield and Milgrom [15] show that if {a mathematical formula}ChC satisfies these three properties, the generalized DA is strategyproof, and the obtained matching is the student-optimal HM-stable matching.{sup:12}
     </paragraph>
     <paragraph label="Definition 9">
      To show that {a mathematical formula}ChC satisfies the above three properties, it is often convenient to use a property called single-improvement property, which was first proposed in [12]. single-improvement propertyWe say {a mathematical formula}ChC satisfies the single-improvement property if for any {a mathematical formula}X′⊆X, {a mathematical formula}x∈X∖X′, one of the following conditions holds: (i) {a mathematical formula}ChC(X′∪{x})=ChC(X′), (ii) {a mathematical formula}ChC(X′∪{x})=ChC(X′)∪{x}, or (iii) {a mathematical formula}ChC(X′∪{x})=(ChC(X′)∖{y})∪{x}, where {a mathematical formula}y∈ChC(X′).
     </paragraph>
     <paragraph>
      In words, the single-improvement property means, by adding contract x to {a mathematical formula}X′, the chosen set of contracts {a mathematical formula}ChC(X′∪{x}) is unchanged, i.e., it is the same as {a mathematical formula}ChC(X′), or x is simply added to {a mathematical formula}ChC(X′), or x is added while single contract y is removed from {a mathematical formula}ChC(X′).
     </paragraph>
     <paragraph label="Proof">
      The following lemma holds. If{a mathematical formula}ChCsatisfies the single-improvement property, it also satisfies the irrelevance of rejected contracts, the law of aggregated demand, and the substitutes condition. Thus, the generalized DA is strategyproof and obtains the student-optimal HM-stable matching.From Definition 9, it is clear that for any {a mathematical formula}X′⊆X and {a mathematical formula}x∈X∖X′, if {a mathematical formula}x∉ChC(X′∪{x}), {a mathematical formula}ChC(X′)=ChC(X′∪{x}) holds. Thus, the irrelevance of rejected contracts holds. Also, from Definition 9, by adding new contract x, the size of the chosen set of contracts is weakly increasing. Thus, the law of aggregate demand holds. Furthermore, from Definition 9, if {a mathematical formula}y∈X′∖ChC(X′), then {a mathematical formula}y∉ChC(X′∪{x}) holds. Thus, the substitutes condition holds.  □
     </paragraph>
    </section>
    <section label="5">
     <section-title>
      Mechanism with regional minimum and maximum quotas
     </section-title>
     <paragraph>
      We first introduce a concept called expected minimum count, which is convenient for checking semi-school-feasibility.
     </paragraph>
     <section label="5.1">
      <section-title>
       Expected minimum count
      </section-title>
      <paragraph>
       In a DA-based mechanism, we need to check whether matching {a mathematical formula}X′ is semi-school-feasible or not. In an existing work for handling minimum quotas [7], minimum quotas are transformed into maximum quotas in order to check the semi-school-feasibility of {a mathematical formula}X′. To be more precise, minimum quota {a mathematical formula}pr of r is transformed as maximum quota {a mathematical formula}n−pr of {a mathematical formula}r¯=C∖r, where n is the number of students. We assume {a mathematical formula}X′ is semi-school-feasible if it satisfies all (i.e., original and transformed) maximum quotas.
      </paragraph>
      <paragraph>
       However, when regional/individual minimum/maximum quotas coexist, we cannot apply this simple transformation method due to the interaction among these quotas. For example, let us consider the tree structure presented in Fig. 1, but the maximum quota of {a mathematical formula}c1 is 4, and the minimum quota of {a mathematical formula}c2 is 2. There exist students {a mathematical formula}s1,…,s8. Assume {a mathematical formula}X′={(s1,c1),(s2,c1),(s3,c1),(s4,c1)}. {a mathematical formula}X′ satisfies all of the original maximum quotas. Also, the individual minimum quota of {a mathematical formula}c2 is transformed into a maximum quota, which requires that the number of students assigned to schools except {a mathematical formula}c2 is at most {a mathematical formula}n−2=6. {a mathematical formula}X′ satisfies this transformed maximum quota since the number of students assigned to schools except {a mathematical formula}c2 is {a mathematical formula}4&lt;6. However, {a mathematical formula}X′ is not semi-school-feasible. Since the regional maximum quota of {a mathematical formula}{c1,c2} is 5, by assigning 4 students to {a mathematical formula}c1, only one more student can be assigned to r, which is not enough to satisfy the minimum quota of {a mathematical formula}c2. When regional/individual minimum/maximum quotas coexist, we need to consider the interaction among these quotas to check the semi-school-feasibility of the contracts.
      </paragraph>
      <paragraph label="Definition 10">
       We define an expected minimum count as follows. expected minimum countFor matching {a mathematical formula}X′, the expected minimum count for each r, denoted by {a mathematical formula}er(X′), is defined as follows:{a mathematical formula}
      </paragraph>
      <paragraph>
       Intuitively, {a mathematical formula}er(X′) represents the minimum number of students allocated to region r when all regions {a mathematical formula}r′⊊r satisfy their minimum quotas. By this definition, for each region r, {a mathematical formula}er(X′)≥|Xr′| holds. Also, {a mathematical formula}er(X′)=|Xr′| holds iff all regions {a mathematical formula}r′⊊r satisfy their minimum quotas. Furthermore, for any {a mathematical formula}X′,X″⊆X, if {a mathematical formula}X′⊆X″, then {a mathematical formula}er(X′)≤er(X″) holds for all {a mathematical formula}r∈R.
      </paragraph>
      <paragraph label="Theorem 4">
       The following theorem holds. For a matching{a mathematical formula}X′⊆X, it is semi-school-feasible iff{a mathematical formula}er(X′)≤qrholds for all{a mathematical formula}r∈R.
      </paragraph>
      <paragraph label="Proof">
       We first show if {a mathematical formula}X′ is semi-school-feasible, then {a mathematical formula}er(X′)≤qr holds for all {a mathematical formula}r∈R. By way of contradiction, assume {a mathematical formula}X″⊇X′ holds, where {a mathematical formula}X″ is school feasible, but there exists r such that {a mathematical formula}er(X′)&gt;qr. Since {a mathematical formula}X″ is school-feasible, {a mathematical formula}|Xr″|≤qr holds. Also, since {a mathematical formula}X″ satisfies all minimum quotas, {a mathematical formula}er(X″)=|Xr″| holds. However, since {a mathematical formula}X″⊇X′, {a mathematical formula}|Xr″|=er(X″)≥er(X′)&gt;qr holds. Such an {a mathematical formula}X″ does not exist. This is a contradiction.Next, we show if {a mathematical formula}er(X′)≤qr holds for all {a mathematical formula}r∈R, then {a mathematical formula}X′ is semi-school-feasible. We consider the following two cases: (i) {a mathematical formula}|X′|=n and (ii) {a mathematical formula}|X′|&lt;n. In case (i), for all {a mathematical formula}r∈R, {a mathematical formula}|Xr′|≤er(X′)≤qr holds. Since {a mathematical formula}|X′|=eC(X′)=n holds, all regions {a mathematical formula}r⊊C satisfy their minimum quotas. Thus, {a mathematical formula}X′ is school-feasible. In case (ii), there exists at least one region r whose minimum quota is not satisfied yet. Then, we can find school {a mathematical formula}c∈r and student s who is not assigned in {a mathematical formula}X′ such that {a mathematical formula}er(X′∪{(s,c)})≤qr holds for all {a mathematical formula}r∈R, by a similar argument used in the proof of Theorem 3.  □
      </paragraph>
      <paragraph>
       In the previous example, {a mathematical formula}e{c1,c2}(X′)=4+2=6&gt;5=q{c1,c2}. Thus, {a mathematical formula}X′ is not semi-school-feasible.
      </paragraph>
     </section>
     <section label="5.2">
      <section-title>
       Priority list based deferred acceptance mechanism with regional minimum and maximum quotas
      </section-title>
      <paragraph>
       This subsection introduces a strategyproof mechanism called Priority List based Deferred Acceptance mechanism with Regional minimum and maximum Quotas (PLDA-RQ). This mechanism uses a similar idea to Goto et al. [10], who develop a mechanism that can handle regional maximum quotas.
      </paragraph>
      <paragraph label="Definition 11">
       The choice function {a mathematical formula}ChC of PLDA-RQ is given as follows. choice function of schools {a mathematical formula}ChC(X′) of PLDA-RQ
      </paragraph>
      <list>
       <list-item label="1.">
        Initialize Y to ∅.
       </list-item>
       <list-item label="2.">
        Sort {a mathematical formula}X′ according to {a mathematical formula}≻PL.
       </list-item>
       <list-item label="3.">
        For {a mathematical formula}i=1,2,…,|X′|, choose {a mathematical formula}(s,c), which is the i-th element in {a mathematical formula}X′, and apply the following procedure.
       </list-item>
       <list-item label="4.">
        Return Y.
       </list-item>
      </list>
      <paragraph>
       PLDA-RQ is defined as one instance of the generalized DA mechanism in which {a mathematical formula}ChC is given as Definition 11.
      </paragraph>
      <paragraph>
       The calculation of {a mathematical formula}ChC is a greedy procedure whose time-complexity is polynomial in {a mathematical formula}|X′| and {a mathematical formula}|R|. Since Re monotonically increases in Mechanism 1, PLDA-RQ repeats at most {a mathematical formula}O(|S|⋅|C|) rounds. Thus, its time-complexity is polynomial in {a mathematical formula}|S| and {a mathematical formula}|C|.
      </paragraph>
      <paragraph label="Example 3">
       Consider the tree structure presented in Fig. 1. There are eight students, {a mathematical formula}S={s1,…,s8}.The preferences and priorities are defined as follows:{a mathematical formula}{a mathematical formula}{a mathematical formula}≻PL is generated by the rank-based method with tie-breaking ordering {a mathematical formula}c1→c2→c3→c4.In the first execution of Line 2 of Mechanism 1, each student chooses her most preferable contract, i.e., {a mathematical formula}X′ is set to the following:{a mathematical formula} where {a mathematical formula}X′ is sorted according to the priority list. {a mathematical formula}(s6,c4),(s5,c4),(s4,c4) are sequentially chosen and added to Y. However, when {a mathematical formula}(s3,c4) is chosen, {a mathematical formula}e{c4}(Y∪{(s3,c4)})=4&gt;3=q{c4}. Hence, {a mathematical formula}(s3,c4) is rejected. Similarly, {a mathematical formula}(s2,c4),(s1,c4) are also rejected, while {a mathematical formula}(s7,c1),(s8,c1) are added to Y. Thus, we obtain {a mathematical formula}X″=X′∖{(s1,c4),(s2,c4),(s3,c4)}. Since {a mathematical formula}X′≠X″, we set Re to {a mathematical formula}{(s1,c4),(s2,c4),(s3,c4)} and repeat the procedure.In the second execution of Line 2, each student chooses her most preferred contract that is not included in Re. {a mathematical formula}X′ is set to the following:{a mathematical formula}{a mathematical formula}(s1,c3),(s2,c3),(s3,c3),(s6,c4),(s5,c4) are sequentially chosen and added to Y. However, when {a mathematical formula}(s4,c4) is chosen, it is rejected since {a mathematical formula}e{c3,c4}(Y∪{(s4,c4)})=6&gt;5=q{c3,c4}. Then, {a mathematical formula}(s7,c1),(s8,c1) are chosen and added to Y. Thus, we obtain {a mathematical formula}X″=X′∖{(s4,c4)}. Since {a mathematical formula}X′≠X″, we set Re to {a mathematical formula}Re∪{(s4,c4)} and repeat the procedure.In the third execution of Line 2, {a mathematical formula}X′ is set to the following:{a mathematical formula} All the contracts except {a mathematical formula}(s8,c1) are sequentially chosen and added to Y. Then, {a mathematical formula}(s8,c1) is rejected since {a mathematical formula}eC(Y∪{(s8,c1)})=9&gt;8=qC. Thus, we obtain {a mathematical formula}X″=X′∖{(s8,c1)}. We set Re to {a mathematical formula}Re∪{(s8,c1)} and repeat the procedure.In the fourth execution of Line 2, {a mathematical formula}X′ is set to the following:{a mathematical formula} Now, {a mathematical formula}X′ is school-feasible and {a mathematical formula}X″=X′. Thus, the mechanism returns this {a mathematical formula}X′ as output, and terminates.
      </paragraph>
      <paragraph>
       We show the properties that PLDA-RQ satisfies.
      </paragraph>
      <paragraph label="Proof">
       The choice function{a mathematical formula}ChCof PLDA-RQ satisfies the single-improvement property.For {a mathematical formula}X′⊆X and {a mathematical formula}x=(s,c)∈X, let {a mathematical formula}Preceding(X′,x) denote {a mathematical formula}{y∈X′|y≻PLx} and {a mathematical formula}Succeeding(X′,x) denote {a mathematical formula}{y∈X′|x≻PLy}. When calculating {a mathematical formula}ChC(X′∪{x}), it is clear that adding x does not affect the outcome of each contract in {a mathematical formula}Preceding(X′,x). Also, if x is not accepted, then adding x does not affect the outcome of each contract in {a mathematical formula}Succeeding(X′,x). Thus, if x is not accepted, {a mathematical formula}ChC(X′∪{x})=ChC(X′), i.e., condition (i) in Definition 9, holds.Assume x is accepted. If no contract in {a mathematical formula}Succeeding(X′,x)∩ChC(X′) is rejected, i.e., {a mathematical formula}Succeeding(X′,x)∩ChC(X′)⊆ChC(X′∪{x}), then it is clear that no contract in {a mathematical formula}Succeeding(X′,x)∖ChC(X′) is accepted. Thus, {a mathematical formula}ChC(X′∪{x})=ChC(X′)∪{x}, i.e., condition (ii) in Definition 9, holds.Assume there exists contract {a mathematical formula}y=(s′,c′)∈Succeeding(X′,x)∩ChC(X′) that is rejected, i.e., {a mathematical formula}y∉ChC(X′∪{x}). If there exist multiple rejected contracts, we choose the one that has the highest priority in {a mathematical formula}≻PL. Let Y denote {a mathematical formula}ChC(X′)∩Preceding(X′,y). By our definition of y and Y, {a mathematical formula}Y⊆ChC(X′) and {a mathematical formula}Y⊆ChC(X′∪{x}) hold. Then, there must exist region r that satisfies the following properties: {a mathematical formula}c,c′∈r, {a mathematical formula}er(Y)=qr−1, {a mathematical formula}er(Y∪{y})=er(Y∪{x})=qr, {a mathematical formula}er(Y∪{x,y})=qr+1, for all {a mathematical formula}r′∈Path(r,c),pr′≤er′(Y), and for all {a mathematical formula}r′∈Path(r,c′),pr′≤er′(Y), where {a mathematical formula}Path(r,c)={r′⊊r|r′∋c}, i.e., nodes that are on the path from leaf node c to r. In words, r is the region whose expected minimum count becomes full by either accepting x or y in addition to Y.Let us examine the outcome of contract {a mathematical formula}z=(s″,c″) in {a mathematical formula}Succeeding(X′,y). If {a mathematical formula}c″∉r, then {a mathematical formula}er′(Y∪{y,z})=er′(Y∪{x,z}) holds for all {a mathematical formula}r′∋c. Thus, the outcomes of z under {a mathematical formula}X′ and {a mathematical formula}X′∪{x} must be identical. Also, if {a mathematical formula}c″=c or {a mathematical formula}c″=c′, z is rejected both in {a mathematical formula}ChC(X′) and {a mathematical formula}ChC(X′∪{x}). Thus, assume {a mathematical formula}c″∈r, and {a mathematical formula}c″ is different from c and {a mathematical formula}c′. In this case, z is accepted in {a mathematical formula}ChC(X′) iff by adding z, the values of {a mathematical formula}er′ for all {a mathematical formula}r′∈Path(r,c″)∩(Path(r,c)∪Path(r,c′)) do not increase (since if this happens, then {a mathematical formula}er(Y∪{y,z})&gt;qr holds) and {a mathematical formula}er′(Y∪{y,z})≤qr′ holds for all {a mathematical formula}r′∈Path(r,c″)∖(Path(r,c)∪Path(r,c′)). Similarly, z is accepted in {a mathematical formula}ChC(X′∪{x}) iff by adding z, the values of {a mathematical formula}er′ for all {a mathematical formula}r′∈Path(r,c″)∩(Path(r,c)∪Path(r,c′)) does not increase (since if this happens, then {a mathematical formula}er(Y∪{x,z})&gt;qr holds) and {a mathematical formula}er′(Y∪{x,z})≤qr′ holds for all {a mathematical formula}r′∈Path(r,c″)∖(Path(r,c)∪Path(r,c′)). However, {a mathematical formula}er′(Y∪{y,z})=er′(Y∪{x,z}) holds for all {a mathematical formula}r′∈Path(r,c″)∖(Path(r,c)∪Path(r,c′)). Thus, the outcomes of z under {a mathematical formula}X′ and {a mathematical formula}X′∪{x} must be identical. In conclusion, {a mathematical formula}ChC(X′∪{x})=(ChC(X′)∪{x})∖{y}, i.e., condition (iii) in Definition 9, holds.  □
      </paragraph>
      <paragraph label="Theorem 5">
       From Lemma 1, Lemma 2, we can immediately obtain the following theorem. PLDA-RQ is strategyproof.
      </paragraph>
      <paragraph label="Proof">
       Also, the following theorem holds. PLDA-RQ always produces a feasible and fair matching.Assume {a mathematical formula}X′, which is the matching obtained by PLDA-RQ, is not feasible. By the definition of the generalized DA mechanism, {a mathematical formula}X′ is semi-school-feasible. Thus, the only possibility that {a mathematical formula}X′ is not feasible is that some student s is not assigned to any school. Since {a mathematical formula}X′ is semi-school-feasible, we can choose contract {a mathematical formula}x=(s,c) such that {a mathematical formula}X′∪{x} is semi-school-feasible. Then, it is clear that {a mathematical formula}x∈ChS(X′∪{x}) and {a mathematical formula}x∈ChC(X′∪{x}) hold. This contradicts the fact that {a mathematical formula}X′ is HM-stable.Assume {a mathematical formula}X′ is not fair. Then, there exist {a mathematical formula}(s,c),(s′,c′)∈X′, such that {a mathematical formula}c′≻sc and {a mathematical formula}s≻c′s′ hold. Since we assume {a mathematical formula}≻PL respects {a mathematical formula}≻c′, {a mathematical formula}(s,c′)≻PL(s′,c′) holds. Then, it is clear that {a mathematical formula}(s,c′)∈ChS(X′∪{(s,c′)}) and {a mathematical formula}(s,c′)∈ChC(X′∪{(s,c′)}) hold. This contradicts the fact that {a mathematical formula}X′ is HM-stable.  □
      </paragraph>
      <paragraph>
       From the incompatibility of fairness and nonwastefulness, PLDA-RQ is wasteful since it is fair. We can see in Example 3, {a mathematical formula}s1,s2, and {a mathematical formula}s3 claim an empty seat of {a mathematical formula}c4.
      </paragraph>
      <paragraph label="Theorem 7">
       PLDA-RQ is PL-nonwasteful.
      </paragraph>
      <paragraph label="Proof">
       By way of contradiction, assume in matching {a mathematical formula}X′, which is obtained by PLDA-RQ, there exist {a mathematical formula}(s,c)∈X′, {a mathematical formula}(s,c′)∈X∖X′, such that {a mathematical formula}c′≻sc, {a mathematical formula}(s,c′)≻PL(s,c), and {a mathematical formula}(X′∪{(s,c′)})∖{(s,c)} is feasible. Then, it is clear that {a mathematical formula}(s,c′)∈ChS(X′∪{(s,c′)}) and {a mathematical formula}(s,c′)∈ChC(X′∪{(s,c′)}) hold. This contradicts the fact that {a mathematical formula}X′ is HM-stable.  □
      </paragraph>
      <paragraph label="Proof">
       PLDA-RQ is PL-fair.Assume {a mathematical formula}X′, which is obtained by PLDA-RQ, is not PL-fair. Then, there exist {a mathematical formula}(s,c″)∈X∖X′, {a mathematical formula}(s,c),(s′,c′)∈X′, such that {a mathematical formula}c″≻sc, {a mathematical formula}(s,c″)≻PL(s′,c′), and {a mathematical formula}(X′∪{(s,c″)})∖{(s′,c′)} is school-feasible. Then, it is clear that {a mathematical formula}(s,c″)∈ChS(X′∪{(s,c″)}) and {a mathematical formula}(s,c″)∈ChC(X′∪{(s,c″)}) hold. This contradicts the fact that {a mathematical formula}X′ is HM-stable.  □
      </paragraph>
      <paragraph label="Proof">
       Furthermore, the following lemma holds. Feasible matching{a mathematical formula}X′is HM-stable iff it is PL-fair and PL-nonwasteful.We first show if {a mathematical formula}X′ is HM-stable, then it is PL-fair and PL-nonwasteful. We already showed that HM-stability implies PL-fairness and PL-nonwastefulness in the proofs of Theorem 7, Theorem 8.Next, we show PL-fairness and PL-nonwastefulness implies HM-stability. By way of contradiction, let us assume feasible matching {a mathematical formula}X′ is PL-fair and PL-nonwasteful, but there exists {a mathematical formula}(s,c)∈X∖X′ such that {a mathematical formula}(s,c)∈ChS(X′∪{(s,c)}) and {a mathematical formula}(s,c)∈ChC(X′∪{(s,c)}). Assume {a mathematical formula}(s,c″)∈X′. Since {a mathematical formula}X′ is feasible, {a mathematical formula}|X′|=n. Also, {a mathematical formula}ChC satisfies the single-improvement property, there must be exactly one contract {a mathematical formula}(s′,c′)∈X′ such that {a mathematical formula}ChC(X′∪{(s,c)})=X′∖{(s′,c′)}∪{(s,c)} holds.It is clear that {a mathematical formula}c≻sc″ holds. If {a mathematical formula}c′=c, then s has justified envy. Thus, let us assume {a mathematical formula}c′≠c holds. If {a mathematical formula}s=s′, {a mathematical formula}(s′,c′) must be identical to {a mathematical formula}(s,c″). Then, {a mathematical formula}(s,c)≻PL(s,c′) holds and {a mathematical formula}X′∖{(s,c′)}∪{(s,c)} is feasible. Thus, s claims an empty seat by PL. Thus, let us assume {a mathematical formula}s≠s′. Then, {a mathematical formula}(s,c)≻PL(s′,c′) holds and {a mathematical formula}X′∖{(s′,c′)}∪{(s,c)} is school-feasible. Thus, s has justified envy by PL toward {a mathematical formula}s′.  □
      </paragraph>
      <paragraph label="Theorem 9">
       From Theorem 7, Theorem 8, and Lemma 3, we can immediately derive the following theorem. PLDA-RQ obtains the student-optimal PL-fair and PL-nonwasteful matching.
      </paragraph>
     </section>
     <section label="5.3">
      <section-title>
       Round-robin selection deferred acceptance mechanism with regional minimum and maximum quotas
      </section-title>
      <paragraph>
       This subsection introduces a strategyproof mechanism called Round-robin Selection Deferred Acceptance mechanism with Regional minimum and maximum Quotas (RSDA-RQ). This mechanism uses a similar idea to the Flexible Deferred Acceptance mechanism presented in [18].
      </paragraph>
      <paragraph label="Definition 12">
       We assume a round-robin ordering of schools is defined. If the ordering is {a mathematical formula}c1→c2→…→cm, {a mathematical formula}c1 is chosen first, {a mathematical formula}c2 is chosen next, and so on. After each of m schools are chosen, then {a mathematical formula}c1 is chosen again, then, {a mathematical formula}c2 is chosen again, and so on. In RSDA-RQ, the choice function of schools is defined as follows. choice function of schools {a mathematical formula}ChC(X′) of RSDA-RQ
      </paragraph>
      <list>
       <list-item label="1.">
        Initialize Y to ∅.
       </list-item>
       <list-item label="2.">
        If each contract in {a mathematical formula}X′ is either in Y or has been rejected, return Y. Otherwise, choose school c according to the round-robin ordering.
       </list-item>
       <list-item label="3.">
        Choose a contract {a mathematical formula}(s,c), which is not included in Y or has not been rejected yet, and s has the highest priority according to {a mathematical formula}≻c.
       </list-item>
       <list-item label="4.">
        If for all {a mathematical formula}r∈R, {a mathematical formula}er(Y∪{(s,c)})≤qr, add {a mathematical formula}(s,c) to Y. Otherwise, reject {a mathematical formula}(s,c).
       </list-item>
       <list-item label="5.">
        Go to 2.
       </list-item>
      </list>
      <paragraph>
       RSDA-RQ is defined as one instance of the generalized DA mechanism in which {a mathematical formula}ChC is given as Definition 12.
      </paragraph>
      <paragraph>
       The calculation of {a mathematical formula}ChC is a greedy procedure whose time-complexity is polynomial in {a mathematical formula}|X′| and {a mathematical formula}|R|. Since Re monotonically increases in Mechanism 1, RSDA-RQ repeats at most {a mathematical formula}O(|S|⋅|C|) rounds. Thus, its time-complexity is polynomial in {a mathematical formula}|S| and {a mathematical formula}|C|.
      </paragraph>
      <paragraph label="Example 4">
       Consider the same setting as in Example 3. In the first execution of Line 2 of Mechanism 1, each student chooses her most preferable contract, i.e., {a mathematical formula}X′ is set to the following:{a mathematical formula} where {a mathematical formula}X′ is sorted according to the choice order in {a mathematical formula}ChC. {a mathematical formula}(s7,c1),(s6,c4),(s8,c1),(s5,c4),(s4,c4) are sequentially chosen and added to Y. However, when {a mathematical formula}(s3,c4) is chosen, {a mathematical formula}e{c4}(Y∪{(s3,c4)})=4&gt;3=q{c4}. Hence, {a mathematical formula}(s3,c4) is rejected. Similarly, {a mathematical formula}(s2,c4),(s1,c4) are also rejected. Thus, we obtain {a mathematical formula}X″=X′∖{(s1,c4),(s2,c4),(s3,c4)}. Since {a mathematical formula}X′≠X″, we set Re to {a mathematical formula}{(s1,c4),(s2,c4),(s3,c4)} and repeat the procedure.In the second execution of Line 2, each student chooses her most preferred contract that has not been rejected by C, i.e., {a mathematical formula}X′ is set to the following:{a mathematical formula}{a mathematical formula}(s7,c1),(s1,c3),(s6,c4),(s8,c1),(s2,c3),(s5,c4),(s3,c3) are sequentially chosen and added to Y. However, when {a mathematical formula}(s4,c4) is chosen, it is rejected since {a mathematical formula}e{c3,c4}(Y∪{(s4,c4)})=6&gt;5=q{c3,c4}. Thus, we obtain {a mathematical formula}X″=X′∖{(s4,c4)}. Since {a mathematical formula}X′≠X″, we set Re to {a mathematical formula}Re∪{(s4,c4)} and repeat the procedure.In the third execution of Line 2, {a mathematical formula}X′ is set to the following:{a mathematical formula} All the contracts except {a mathematical formula}(s3,c3) are sequentially chosen and added to Y. Then, {a mathematical formula}(s3,c3) is rejected since {a mathematical formula}eC(Y∪{(s3,c3)})=9&gt;8=qC. Thus, we obtain {a mathematical formula}X″=X′∖{(s3,c3)}. We set Re to {a mathematical formula}Re∪{(s3,c3)} and repeat the procedure.In the fourth execution of Line 2, {a mathematical formula}X′ is set to the following:{a mathematical formula} Now, {a mathematical formula}X′ is school-feasible and {a mathematical formula}X″=X′. Thus, the mechanism returns this {a mathematical formula}X′ as output, and terminates.
      </paragraph>
      <paragraph>
       We show the properties that RSDA-RQ satisfies.
      </paragraph>
      <paragraph label="Proof">
       {a mathematical formula}ChCused in RSDA-RQ satisfies the single-improvement property.Assume {a mathematical formula}x=(s,c) is added to {a mathematical formula}X′. Let us assume some contract in {a mathematical formula}Xc′ is rejected, i.e., there exists {a mathematical formula}(s′,c)∈Xc′ such that {a mathematical formula}(s′,c)∉ChC(X′). More specifically, let us assume top {a mathematical formula}k(&lt;|Xc′|) contracts in {a mathematical formula}Xc′ according to {a mathematical formula}≻c are accepted and the rest are rejected. Then, by adding x, it is clear that still top k contracts in {a mathematical formula}Xc′∪{x} according to {a mathematical formula}≻c are accepted and the rest are rejected. Also, the outcomes of contracts related to other schools do not change. If x is accepted, i.e., it is within top k contracts in {a mathematical formula}Xc′∪{x}, then {a mathematical formula}ChC(X′∪{x})=(ChC(X′)∪{x})∖{y}, i.e., condition (iii) in Definition 9, holds, where y is {a mathematical formula}k+1-th contract in {a mathematical formula}Xc′∪{x}. If x is rejected, then {a mathematical formula}ChC(X′∪{x})=ChC(X′), i.e., condition (i) in Definition 9, holds.Next, let us assume all contracts in {a mathematical formula}Xc′ are accepted. Then, by adding {a mathematical formula}x=(s,c), still top {a mathematical formula}|Xc′| contracts are accepted. Let {a mathematical formula}x′=(s′,c) denote the last contract in {a mathematical formula}Xc′∪{x} according to {a mathematical formula}≻c. If {a mathematical formula}x′ is rejected, then the outcomes of contracts related to other schools do not change. Thus, {a mathematical formula}ChC(X′∪{x})=(ChC(X′)∪{x})∖{x′}, i.e., condition (iii) in Definition 9, holds. Assume {a mathematical formula}x′ is accepted. Let Pre denote contracts that are examined before {a mathematical formula}x′ when calculating {a mathematical formula}ChC(X′∪{x}) in the procedure of Definition 12, and Suc denote contracts that are examined after {a mathematical formula}x′.{sup:13} If no contract in {a mathematical formula}Suc∩ChC(X′) is rejected, i.e., {a mathematical formula}Suc∩ChC(X′)⊆ChC(X′∪{x}), then it is clear that no contract in {a mathematical formula}Suc∖ChC(X′) is accepted. Thus, {a mathematical formula}ChC(X′∪{x})=ChC(X′)∪{x}, i.e., condition (ii) in Definition 9, holds.Assume there exists contract {a mathematical formula}y=(s′,c′)∈Suc∩ChC(X′) that is rejected, i.e., {a mathematical formula}y∉ChC(X′∪{x}). If there exist multiple rejected contracts, we choose the one that is examined earlier. Let {a mathematical formula}X″ denote {a mathematical formula}(X′∪{x})∖{x′}, i.e., {a mathematical formula}X″ is obtained by replacing {a mathematical formula}x′ to x (if {a mathematical formula}x=x′, we assume {a mathematical formula}X′=X″). Since {a mathematical formula}|Xc′|=|Xc″|, {a mathematical formula}Xc′⊂ChC(X′), and {a mathematical formula}Xc″⊂ChC(X″) hold, the outcomes of contracts related to other schools are the same between {a mathematical formula}ChC(X′) and {a mathematical formula}ChC(X″). Thus, {a mathematical formula}ChC(X′)∪{x}=ChC(X″)∪{x′} holds.Let Y denote {a mathematical formula}ChC(X″)∩Pre. By our definition of y and Y, {a mathematical formula}Y⊆ChC(X″) and {a mathematical formula}Y⊆ChC(X″∪{x′}) hold. Then, there must exist region r that satisfies the following properties: {a mathematical formula}c,c′∈r, {a mathematical formula}er(Y)=qr−1, {a mathematical formula}er(Y∪{y})=er(Y∪{x′})=qr, {a mathematical formula}er(Y∪{x′,y})=qr+1, for all {a mathematical formula}r′∈Path(r,c),pr′≤er′(Y), and for all {a mathematical formula}r′∈Path(r,c′),pr′≤er′(Y). Here, as in the proof of Lemma 2, {a mathematical formula}Path(r,c)={r′⊊r|r′∋c}, i.e., nodes that are on the path from leaf node c to r. In words, r is the region whose expected minimum count becomes full by either accepting {a mathematical formula}x′ or y in addition to Y.Let us examine the outcome of contract {a mathematical formula}z=(s″,c″) in Suc. If {a mathematical formula}c″∉r, then {a mathematical formula}er′(Y∪{y,z})=er′(Y∪{x′,z}) holds for all {a mathematical formula}r′∋c. Thus, the outcomes of z under {a mathematical formula}X″ and {a mathematical formula}X″∪{x′} must be identical. Also, if {a mathematical formula}c″=c or {a mathematical formula}c″=c′, z is rejected both in {a mathematical formula}ChC(X″) and {a mathematical formula}ChC(X″∪{x′}). Thus, assume {a mathematical formula}c″∈r, and {a mathematical formula}c″ is different from c and {a mathematical formula}c′. In this case, z is accepted in {a mathematical formula}ChC(X″) iff by adding z, the values of {a mathematical formula}er′ for all {a mathematical formula}r′∈Path(r,c″)∩(Path(r,c)∪Path(r,c′)) do not increase (since if this happens, then {a mathematical formula}er(Y∪{y,z})&gt;qr holds) and {a mathematical formula}er′(Y∪{y,z})≤qr′ holds for all {a mathematical formula}r′∈Path(r,c″)∖(Path(r,c)∪Path(r,c′)). Similarly, z is accepted in {a mathematical formula}ChC(X″∪{x′}) iff by adding z, the values of {a mathematical formula}er′ for all {a mathematical formula}r′∈Path(r,c″)∩(Path(r,c)∪Path(r,c′)) does not increase (since if this happens, then {a mathematical formula}er(Y∪{x′,z})&gt;qr holds) and {a mathematical formula}er′(Y∪{x′,z})≤qr′ holds for all {a mathematical formula}r′∈Path(r,c″)∖(Path(r,c)∪Path(r,c′)). However, {a mathematical formula}er′(Y∪{y,z})=er′(Y∪{x′,z}) holds for all {a mathematical formula}r′∈Path(r,c″)∖(Path(r,c)∪Path(r,c′)). Thus, the outcomes of z under {a mathematical formula}X″ and {a mathematical formula}X″∪{x′} must be identical. Then, {a mathematical formula}ChC(X″∪{x′})=(ChC(X″)∪{x′})∖{y} holds. Since we have {a mathematical formula}X″∪{x′}=X′∪{x} and {a mathematical formula}ChC(X″)∪{x′}=ChC(X′)∪{x}, {a mathematical formula}ChC(X′∪{x})=(ChC(X′)∪{x})∖{y}, i.e., condition (iii) in Definition 9, holds.  □
      </paragraph>
      <paragraph label="Theorem 10">
       From Lemma 1, Lemma 4, we can immediately obtain the following theorem. RSDA-RQ is strategyproof.
      </paragraph>
      <paragraph label="Proof">
       Also, the following theorem holds. RSDA-RQ always produces a feasible and fair matching.Assume that {a mathematical formula}X′, which is the matching obtained by RSDA-RQ, is not feasible. By the definition of the generalized DA mechanism, {a mathematical formula}X′ is semi-school-feasible. Thus, the only possibility that {a mathematical formula}X′ is not feasible is that some student s is not assigned to any school. Since {a mathematical formula}X′ is semi-school-feasible, we can choose a contract {a mathematical formula}x=(s,c) such that {a mathematical formula}X′∪{x} is semi-school-feasible. Then, it is clear that {a mathematical formula}x∈ChS(X′∪{x}) and {a mathematical formula}x∈ChC(X′∪{x}) hold. This contradicts the fact that {a mathematical formula}X′ is HM-stable.Assume {a mathematical formula}X′ is not fair. Then, there exist {a mathematical formula}(s,c)∈X∖X′,(s,c′),(s′,c)∈X′, such that {a mathematical formula}c≻sc′ and {a mathematical formula}s≻cs′ hold. Thus, in the calculation of {a mathematical formula}ChC(X′∪{(s,c)}), {a mathematical formula}(s,c) is examined before {a mathematical formula}(s′,c). Then, it is clear that {a mathematical formula}(s,c)∈ChS(X′∪{(s,c)}) and {a mathematical formula}(s,c)∈ChC(X′∪{(s,c)}) hold. This contradicts the fact that {a mathematical formula}X′ is HM-stable.  □
      </paragraph>
      <paragraph>
       From the incompatibility of fairness and nonwastefulness, RSDA-RQ is wasteful since it is fair. In Example 4, students {a mathematical formula}s1,s2, and {a mathematical formula}s4 claim an empty seat.
      </paragraph>
      <paragraph label="Proof">
       RSDA-RQ is school-equitably-nonwasteful.By way of contradiction, assume in matching {a mathematical formula}X′, which is obtained by RSDA-RQ, there exist {a mathematical formula}(s,c′)∈X∖X′, {a mathematical formula}(s,c)∈X′, such that {a mathematical formula}c′≻sc, {a mathematical formula}X′∖{(s,c)}∪{(s,c′)} is feasible, and {a mathematical formula}|Xc′|−|Xc′′|≥2. Then, it is clear that {a mathematical formula}(s,c′)∈ChS(X′∪{(s,c′)}) holds. Also, let us assume {a mathematical formula}(s′,c) is the contract that has the lowest priority in {a mathematical formula}Xc′ according to {a mathematical formula}≻c. Then, in the calculation of {a mathematical formula}ChC(X′∪{(s,c′)}), {a mathematical formula}(s,c′) is examined before {a mathematical formula}(s′,c) since {a mathematical formula}|Xc′|−|Xc′′|≥2. Also, since {a mathematical formula}(X′∖{(s,c)})∪{(s,c′)} is feasible, {a mathematical formula}(X′∖{(s′,c)})∪{(s,c′)} is school-feasible. Thus, {a mathematical formula}(s,c′)∈ChC(X′∪{(s,c′)}) holds. This contradicts the fact that {a mathematical formula}X′ is HM-stable.  □
      </paragraph>
      <paragraph>
       Unfortunately, as discussed in Kamada and Kojima [18], Goto et al. [10], fairness and school-equitably-nonwastefulness do not imply HM-stability. Thus, we cannot guarantee that RSDA-RQ obtains the student-optimal fair and school-equitably-nonwasteful matching. In fact, there is a case where the student-optimal fair and school-equitably-nonwasteful matching does not even exist.
      </paragraph>
     </section>
    </section>
    <section label="6">
     <section-title>
      Evaluation
     </section-title>
     <paragraph>
      This section evaluates our newly developed mechanisms. We consider a market with {a mathematical formula}n=512 students and {a mathematical formula}m=64 schools. The individual maximum quota for each school {a mathematical formula}qc is 32. Thus, for most cases, the individual maximum quota will not be a binding constraint. We consider two tree structures: binary tree and octary tree. In a binary tree, each node has two children. Since there are 64 leaf nodes, the height of the tree is six. In an octary tree, each node has eight children. Thus, the height of the tree is two, i.e., schools are divided into eight regions, each of which contains eight schools. Let {a mathematical formula}ar denote {a mathematical formula}pr−∑r′∈children(r)pr′, i.e., {a mathematical formula}ar is the increased amount of r's minimum quota compared to the sum of the minimum quotas of its children. Then, the regional minimum quotas are determined so that for each region r except C, {a mathematical formula}ar becomes roughly the same. We set the sum of {a mathematical formula}ar except C, i.e., {a mathematical formula}∑r∈R∖{C}ar, to 256. Similarly, let {a mathematical formula}br denote {a mathematical formula}∑r′∈children(r)qr′−qr, i.e., {a mathematical formula}br is the decreased amount of r's maximum quota compared to the sum of the maximum quotas of its children. Then, the regional maximum quotas are determined so that for each region r except C, {a mathematical formula}br becomes roughly the same. We set {a mathematical formula}∑r∈R∖{C}br=1024.
     </paragraph>
     <paragraph>
      We generate students' preferences as follows. We draw one common vector {a mathematical formula}uc of the cardinal utilities from set {a mathematical formula}[0,1]m uniformly at random. We then randomly draw private vector {a mathematical formula}us of the cardinal utilities from the same set, again uniformly at random. Next, we construct cardinal utilities over all m schools for student s as {a mathematical formula}αuc+(1−α)us, for some {a mathematical formula}α∈[0,1]. We then convert these cardinal utilities into an ordinal preference relation for each student. The higher the value of α is, the more correlated the students' preferences are. School priorities {a mathematical formula}≻c are drawn uniformly at random. We create 100 problem instances for each parameter setting.{sup:14}
     </paragraph>
     <paragraph>
      We compare our mechanism to the Artificial Cap Deferred Acceptance mechanism (ACDA). In the ACDA, we artificially modify the individual maximum quota of each school so that all regional minimum/maximum quotas can be automatically satisfied once these quotas are satisfied. The ACDA produces a feasible and fair matching, but it is less flexible than our mechanisms.
     </paragraph>
     <paragraph>
      First, we show the results when the individual minimum quota for each individual school {a mathematical formula}pc is set to 0. Fig. 2, Fig. 3 show the ratio of students who claim empty seats for binary/octary trees. The x-axis denotes the value of α, and the y-axis denotes the average ratio of the students who claim empty seats. The result reveals that the ACDA is quite wasteful; most students claim empty seats. The ratio is higher in the binary tree, in which regional quotas are more severe. In terms of efficiency, PLDA-RQ outperforms RSDA-RQ.
     </paragraph>
     <paragraph>
      Fig. 4, Fig. 5 illustrate the student welfare by plotting the cumulative distribution functions (CDFs) of the average number of students matched with their k-th or higher ranked school under each mechanism for {a mathematical formula}α=0.3, and Fig. 6, Fig. 7 show the results where {a mathematical formula}α=0.6. If the CDF of one mechanism first-order stochastically dominates another, then a strong argument can be made for using the stochastically dominant mechanism. PLDA-RQ and RSDA-RQ outperform the ACDA. Setting artificial caps decreases the welfare of the students, since the ACDA loses too much flexibility. As α increases, the competition among students becomes more severe and their welfare decreases. Our experimental results clearly show that our newly developed mechanisms have an advantage over the ACDA in terms of nonwastefulness and student welfare.
     </paragraph>
     <paragraph>
      In terms of efficiency, PLDA-RQ is better than RSDA-RQ. Thus, if the welfare of students is important, then PLDA-RQ would be a better choice. RSDA-RQ tries to balance the number of students allocated to each school by sacrificing the efficiency compared to PLDA-RQ. Thus, if such a balance is important, then RSDA-RQ would be a better choice.
     </paragraph>
     <paragraph>
      Next, we show the results when the individual minimum quota for each individual school {a mathematical formula}pc is set to 2 in Fig. 8, Fig. 9, Fig. 10, Fig. 11, Fig. 12, Fig. 13. We can see the qualitative trends of these results are very similar to the cases when {a mathematical formula}pc=0. However, the difference between binary tree cases and octary tree cases becomes smaller. In octary tree cases where {a mathematical formula}pc=0, we can assign students to schools within a region very flexibly. By setting {a mathematical formula}pc=2, we lose such flexibility. As a result, the difference between the two different tree structures becomes smaller.
     </paragraph>
     <paragraph>
      Finally, we show the results when schools have different capacities in Fig. 14, Fig. 15, Fig. 16, Fig. 17, Fig. 18, Fig. 19. We assume there are three types of schools: (i) small-scale schools where {a mathematical formula}qc=8, {a mathematical formula}pc=0, (ii) medium-scale schools where {a mathematical formula}qc=16, {a mathematical formula}pc=1, and (iii) large-scale schools where {a mathematical formula}qc=32, {a mathematical formula}pc=2. We set {a mathematical formula}c1 to a small-scale school, {a mathematical formula}c2 to a medium-scale school, {a mathematical formula}c3 to a large-scale school, {a mathematical formula}c4 is a small-scale school, and so on. For each region r except C, {a mathematical formula}pr is set to {a mathematical formula}1.2×∑r′∈children(r)pr′, and {a mathematical formula}qr is set to {a mathematical formula}0.9×∑r′∈children(r)qr′. The preferences of students and priorities of schools are generated in the same way as previous experiments. Again, we can see the qualitative trends of these results are very similar to previous experiments. In this setting, the difference between binary tree cases and octary tree cases is small, since we impose individual minimum quotas for large and medium scale schools.
     </paragraph>
    </section>
    <section label="7">
     <section-title>
      Conclusion
     </section-title>
     <paragraph>
      In this paper, we analyzed the complexity of finding a feasible matching for a given matching problem with regional quotas. We showed that, when we put no restrictions on the structure of regions, checking the existence of a feasible matching that satisfies all quotas is NP-complete. Then, assuming that regions have a hierarchical structure, we developed strategyproof matching mechanisms for handling regional minimum/maximum quotas called PLDA-RQ and RSDA-RQ. We proved that these mechanisms are fair but wasteful, while they satisfy conditions that are weaker than nonwastefulness (i.e., PL-wastefulness and school-equitable-nonwastefulness). In particular, PLDA-RQ satisfies a stronger fairness requirement called PL-fairness, and it obtains the student-optimal PL-fair and PL-nonwasteful matching. We then confirmed the advantages of these mechanisms compared to the artificial cap mechanism via simulations.
     </paragraph>
    </section>
   </content>
  </root>
 </body>
</html>