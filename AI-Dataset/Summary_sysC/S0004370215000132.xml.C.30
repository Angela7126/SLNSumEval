<html>
<head>
<meta name="TextLength" content="SENT_NUM:29, WORD_NUM:787">
</head>
<body bgcolor="white">
<a href="#0" id="0">For the Monroe rule exactly K candidates are assigned to the voters and each selected candidate is assigned to about {a mathematical formula}nK voters (see the definitions in Section 2 for details); for the Chamberlin – Courant rule the number of selected candidates is at most K and there is no restriction on the number of voters each committee member might represent.</a>
<a href="#1" id="1">For the Monroe rule with the Borda scoring function we give a randomized {a mathematical formula}(0.715 − Ε )-approximation algorithm (often, the ratio is much better; see Section 4 and the comment on Algorithm A above).</a>
<a href="#2" id="2">In the case of an arbitrary positional scoring function we give a ({a mathematical formula}1 − 1e)-approximation algorithm (Theorem 10).</a>
<a href="#3" id="3">For the Chamberlin – Courant rule with the Borda scoring function we give a polynomial-time approximation scheme (that is, for each Ε , {a mathematical formula}0< Ε <1, we have a polynomial-time {a mathematical formula}(1 − Ε )-approximation algorithm; see Corollary 13 and the comment on Algorithm P above).</a>
<a href="#4" id="4">Consider the dissatisfaction-based variant of Chamberlin – Courant rule and the following assignment:{a mathematical formula} (Note that this is the best K-assignment function if both b and c are to be the representatives; also, this assignment happens to be a Monroe 2-assignment.)</a>
<a href="#5" id="5">The total dissatisfaction of the agents is {a mathematical formula} ℓ sum Α B,inc( Φ ″ )=1+1+2+1+0+0=4.</a>
<a href="#6" id="6">Since the optimal dissatisfaction is 1, this is a 4-approximate solution for {a mathematical formula} Α B,inc-CC-DisWinner.</a>
<a href="#7" id="7">(For the case of Monroe the optimal dissatisfaction is 2, so this is also a 2-approximate solution for {a mathematical formula} Α B,inc-Monroe-DisWinner.</a>
<a href="#8" id="8">Theorem 1</a>
<a href="#9" id="9">For each normal IPSF Α and each constant factor{a mathematical formula}r>1, there is no polynomial-time r-approximation algorithm for Α -Monroe-DisWinnerunless{a mathematical formula}P=NP.</a>
<a href="#10" id="10">For each normal IPSF Α and each constant factor{a mathematical formula}r>1, there is no polynomial-time r-approximation algorithm for Α -CC-DisWinnerunless{a mathematical formula}P=NP.</a>
<a href="#11" id="11">The core difficulty in computing the winners under the Monroe and Chamberlin – Courant rules is in selecting the alternatives that should be assigned to the agents.</a>
<a href="#12" id="12">Given a preference profile and a set S of up to K alternatives, using the standard network-flow argument, it is easy to find a (possibly partial) optimal assignment {a mathematical formula} Φ Α S of the agents to the alternatives from S.</a>
<a href="#13" id="13">Let Α be a normal DPSF, N be a set of agents, A be a set of alternatives, V be a preference profile of N over A, and S a K-element subset of A (where K divides{a mathematical formula} ‖ N ‖ ).</a>
<a href="#14" id="14">Then there is a polynomial-time algorithm that computes a (possibly partial) optimal K-assignment{a mathematical formula} Φ Α S(Monroe K-assignment{a mathematical formula} Φ Α S) of the agents to the alternatives from S.</a>
<a href="#15" id="15">Below we describe our algorithms for {a mathematical formula} Α B,dec-Monroe-SatWinner and for {a mathematical formula} Α B,dec-CC-SatWinner.</a>
<a href="#16" id="16">Formally speaking, every approximation algorithm for {a mathematical formula} Α B,dec-Monroe-SatWinner also gives feasible results for {a mathematical formula} Α B,dec-CC-SatWinner.</a>
<a href="#17" id="17">However, some of our algorithms are particularly well-suited for both problems and some are tailored to only one of them.</a>
<a href="#18" id="18">For every preference profile, Algorithm A returns a solution in which each agent is, on average, represented by an alternative that she prefers to at least{a mathematical formula}(1 − K − 12(m − 1) − HKK)fraction of the alternatives.</a>
<a href="#19" id="19">Algorithm A is a polynomial-time{a mathematical formula}(1 − K − 12(m − 1) − HKK)-approximation algorithm for{a mathematical formula} Α B,dec-Monroe-SatWinner.</a>
<a href="#20" id="20">Algorithm GM (greedy marginal improvement) was introduced by Lu and Boutilier for the case of the Chamberlin – Courant rule.</a>
<a href="#21" id="21">Here we generalize it to apply to the Monroe rule as well, and we show that it is a {a mathematical formula}(1 − 1e)-approximation algorithm for Α -Monroe-SatWinner.</a>
<a href="#22" id="22">We point out that this approximation result for the Monroe rule applies to all non-decreasing PSFs Α .</a>
<a href="#23" id="23">For the Monroe rule, the algorithm can be viewed as an extension of Algorithm B.</a>
<a href="#24" id="24">For the Borda satisfaction function, it inherits the approximation guarantees from Algorithm A, and for other cases Theorem 10 guarantees approximation ratio {a mathematical formula}1 − 1e (we do not know of any guarantees for Algorithm A for these cases).</a>
<a href="#25" id="25">For every preference profile, Algorithm P returns a solution in which each agent is, on average, represented by an alternative that she prefers to at least{a mathematical formula}1 − 2w(K)Kfraction of the alternatives.</a>
<a href="#26" id="26">Algorithm P is a polynomial-time{a mathematical formula}(1 − 2w(K)K)-approximation algorithm for{a mathematical formula} Α B,dec-CC-SatWinner.</a>
<a href="#27" id="27">Nonetheless, we see that for Monroe Algorithm C achieves {a mathematical formula}C/Cideal=0.925 even for {a mathematical formula}K/m=0.5 for the NetFlix data set.</a>
<a href="#28" id="28">For each normal IPSF Α and each constant{a mathematical formula}r>1, there is no polynomial-time r-approximation algorithm for Α -Monroe-DisWinnerunless{a mathematical formula}P=NP.</a>
</body>
</html>