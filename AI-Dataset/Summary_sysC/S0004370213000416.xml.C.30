<html>
<head>
<meta name="TextLength" content="SENT_NUM:33, WORD_NUM:674">
</head>
<body bgcolor="white">
<a href="#0" id="0">Let {a mathematical formula}F(B)j denote the result of the aggregation on issue j.</a>
<a href="#1" id="1">An integrity constraint is any formula {a mathematical formula}ic ∈ LPS.</a>
<a href="#2" id="2">Given an integrity constraint {a mathematical formula}ic ∈ LPS, an aggregation procedure {a mathematical formula}F:DN → D is called collectively rational (CR) with respect to ic, if for all rational profiles {a mathematical formula}B ∈ Mod(ic)N we have that {a mathematical formula}F(B) ∈ Mod(ic).</a>
<a href="#3" id="3">A paradox is a triple {a mathematical formula}(F,B,ic), where {a mathematical formula}F:DN → D is an aggregation procedure, B is a profile in {a mathematical formula}DN, ic is an integrity constraint in {a mathematical formula}LPS, and {a mathematical formula}Bi ∈ Mod(ic) for all {a mathematical formula}i ∈ N but {a mathematical formula}F(B) ∉ Mod(ic).</a>
<a href="#4" id="4">An aggregation procedure F satisfies A, I, and{a mathematical formula}MIon the full domain{a mathematical formula}DNif and only if it is a quota rule.</a>
<a href="#5" id="5">In Section 2.3 we called an aggregation procedure collectively rational with respect to a formula {a mathematical formula}ic ∈ LPS if the outcome on every rational profile satisfies the same integrity constraint ic.</a>
<a href="#6" id="6">We now extend this definition to collectively rational procedures with respect to a given language {a mathematical formula}L:</a>
<a href="#7" id="7">Given a language {a mathematical formula}L ⊆ LPS, call {a mathematical formula}CR[L] the class of aggregation procedures that lift all {a mathematical formula}ic ∈ L:{a mathematical formula}</a>
<a href="#8" id="8">An aggregation procedure F satisfies a set of axioms AX wrt.</a>
<a href="#9" id="9">a language {a mathematical formula}L ⊆ LPS, if F satisfies the axioms in AX on {a mathematical formula}Mod(ic)N for all constraints {a mathematical formula}ic ∈ L.</a>
<a href="#10" id="10">This defines the following class:{a mathematical formula}</a>
<a href="#11" id="11">{a mathematical formula}CR[L ∧ ]=CR[L]for all{a mathematical formula}L ⊆ LPS.</a>
<a href="#12" id="12">We have just proven that the class {a mathematical formula}CR[L] is invariant under closing the language under conjunction.</a>
<a href="#13" id="13">{a mathematical formula}CR[L ≡ ]=CR[L]for all{a mathematical formula}L ⊆ LPS.</a>
<a href="#14" id="14">A language for integrity constraints{a mathematical formula}L is a subset of {a mathematical formula}LPS that is closed under conjunction and logical equivalence.</a>
<a href="#15" id="15">In the first part of Section 3 we have associated with any language for integrity constraints {a mathematical formula}L a class of aggregation procedures that are collectively rational with respect to all formulas in {a mathematical formula}L. Once a set of issues {a mathematical formula}I is fixed, {a mathematical formula}CR[ − ] can therefore be viewed as an operator from the set of languages for integrity constraints (i.e., subsets of {a mathematical formula}LPS closed under conjunction and logical equivalence and containing ⊤ and ⊥ ) to subsets of the class {a mathematical formula}F of all aggregation procedures for {a mathematical formula}I.</a>
<a href="#16" id="16">Given a class of aggregation procedures {a mathematical formula}G ⊆ F, call {a mathematical formula}LF[G] the set of integrity constraints that are lifted by all {a mathematical formula}F ∈ G:{a mathematical formula}</a>
<a href="#17" id="17">Let{a mathematical formula}Ibe a set of issues,{a mathematical formula}La language for integrity constraints containing ⊤ and ⊥ , and{a mathematical formula}G ⊆ Fa class of aggregation procedures on{a mathematical formula}I.</a>
<a href="#18" id="18">{a mathematical formula}LF[CR[L]]=L;</a>
<a href="#19" id="19">{a mathematical formula}CR[literals]=Fliterals[U].</a>
<a href="#20" id="20">{a mathematical formula}CR[cubes]=Fcubes[U].</a>
<a href="#21" id="21">{a mathematical formula}CR[LXOR]=FLXOR[ND].</a>
<a href="#22" id="22">We have already remarked that, due to Proposition 12, all procedures in {a mathematical formula}CR[L → +] are also issue-neutral.</a>
<a href="#23" id="23">Recall that {a mathematical formula}F={F:DN → D} is the class of all aggregation procedures (for fixed {a mathematical formula}I).</a>
<a href="#24" id="24">{a mathematical formula}CR[LPS]=GDIC.</a>
<a href="#25" id="25">{a mathematical formula}CR[clauses]=GDIC.</a>
<a href="#26" id="26">Recall that {a mathematical formula}LF[G] is the set of integrity constraints lifted by all the aggregation procedures in {a mathematical formula}G, and let {a mathematical formula}L ⊤ , ⊥ be the language for integrity constraints generated by {a mathematical formula}{ ⊤ , ⊥ }.</a>
<a href="#27" id="27">The following hold:{a mathematical formula}</a>
<a href="#28" id="28">There is no language for integrity constraints{a mathematical formula}L ⊆ LPSsuch that{a mathematical formula}CR[L]=F[I].</a>
<a href="#29" id="29">The same holds for{a mathematical formula}F[A],{a mathematical formula}F[MI]and{a mathematical formula}F[MN].</a>
<a href="#30" id="30">The majority rule is in{a mathematical formula}CR[2-clauses].</a>
<a href="#31" id="31">If{a mathematical formula}|I| ≤ 2, then the majority rule is in{a mathematical formula}CR[LPS].</a>
<a href="#32" id="32">We end this section by proving an expected negative result for the characterisation of general languages of clauses inside the class of quota rules: {a mathematical formula}CR[k-clauses] ∩ QR= ∅ for all{a mathematical formula}k>2.</a>
</body>
</html>