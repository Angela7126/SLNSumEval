<html>
<head>
<meta name="TextLength" content="SENT_NUM:19, WORD_NUM:528">
</head>
<body bgcolor="white">
<a href="#0" id="0">1 is the cycle of arguments about therapies A, B, and C, so the set of these three arguments is deemed responsible by our structural approach that {a mathematical formula}LabArgpref is not a stable labelling, and consequently that no stable labelling exists.</a>
<a href="#1" id="1">Then there exists a revision{a mathematical formula}AF ⊛ of{a mathematical formula}AFw.r.t.</a>
<a href="#2" id="2">{a mathematical formula}Argsby{a mathematical formula}LabArgand a revision labelling{a mathematical formula}LabArg ⊛ of{a mathematical formula}AF ⊛ such that{a mathematical formula}LabArg ⊛ is a stable labelling of{a mathematical formula}AF ⊛ .</a>
<a href="#3" id="3">Note that, by Observation 2, a stable labelling obtained through such a revision is more committed than {a mathematical formula}LabArgpref (if {a mathematical formula}LabArgpref is not stable).</a>
<a href="#4" id="4">Note that Theorem 6 shows that in order to obtain a stable labelling (of a revision), it is sufficient to enforce the label in or out for certain arguments that are labelled undec by {a mathematical formula}LabArgpref.</a>
<a href="#5" id="5">a set of arguments not comprising any argument from some preventing set have no stable labelling that is more committed than {a mathematical formula}LabArgpref.</a>
<a href="#6" id="6">Thus, preventing sets define a sufficient condition for “ preventing ” the existence of a stable labelling that is more committed than {a mathematical formula}LabArgpref.</a>
<a href="#7" id="7">Then {a mathematical formula}{a,e}, {a mathematical formula}{b,e}, and {a mathematical formula}{c,e} are all the minimal sets containing an argument from each preventing set.</a>
<a href="#8" id="8">Let{a mathematical formula}undec(LabArgpref) ≠ ∅ .</a>
<a href="#9" id="9">The only complete labelling of{a mathematical formula}AF ↓ undec(LabArgpref)labels all arguments asundec.</a>
<a href="#10" id="10">Since the undec -part has only one complete labelling, which labels all arguments as undec, this labelling is also its only preferred labelling.</a>
<a href="#11" id="11">Thus, the question as to why {a mathematical formula}LabArgpref is not a stable labelling can be reduced to the question as to why the only preferred labelling of the undec -part is not a stable labelling.</a>
<a href="#12" id="12">Applying our notion of responsible SCCs, we obtain that the preferred labelling of the undec -part is not a stable labelling because of its “ first ” SCCs that have no stable labelling.</a>
<a href="#13" id="13">These “ first ” SCCs are the initial SCCs of the undec -part since no SCC in the undec -part has a stable labelling.</a>
<a href="#14" id="14">This observation results in the following new characterisation of sets of arguments responsible if {a mathematical formula}LabArgpref is not a stable labelling: a set of arguments is responsible if it is an initial SCC of the undec -part.</a>
<a href="#15" id="15">SCUPs and preventing sets share the property that if none of their arguments is involved in a revision, then the revision has no stable labelling that is more committed than {a mathematical formula}LabArgpref (see Theorem 9, Theorem 23).</a>
<a href="#16" id="16">By Theorem 12, we know that if a revision has a stable labelling that is more committed than {a mathematical formula}LabArgpref, the set of arguments used for the revision must be a superset of some enforcement set.</a>
<a href="#17" id="17">These results imply that odd-length cycles of arguments labelled undec by {a mathematical formula}LabArgpref are an important characteristic of sets of arguments that prevent {a mathematical formula}LabArgpref from being a stable labelling (Theorem 35).</a>
<a href="#18" id="18">Furthermore, it is sufficient to revise (specific) arguments in odd-length cycles to obtain a stable labelling (of the revision) that is more committed than {a mathematical formula}LabArgpref (Theorem 34).</a>
</body>
</html>