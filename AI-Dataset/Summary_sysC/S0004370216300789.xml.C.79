<html>
<head>
<meta name="TextLength" content="SENT_NUM:15, WORD_NUM:678">
</head>
<body bgcolor="white">
<a href="#0" id="0">The outcome {a mathematical formula}f( ⪰ ) is the social outcome defined by the social choice rule f. Mechanism design is concerned with the problem of constructing a mechanism — a strategic game form — which implements a social choice rule assuming a specific rational behaviour of the agents.</a>
<a href="#1" id="1">Normative behaviour functionWe assume that the preference of the system designer is represented by the following normative behaviour function, which indicates that in all cases the first car should reach its end position directly: {a mathematical formula}f( Γ → i)= ◯ p1e.</a>
<a href="#2" id="2">The difficulty in the construction is to ensure that the guessed normative system does not affect “ good parts ” of the model used in the construction of the two previous hardness results (Theorems 4 and 5) because after a normative system has been guessed the two players should essentially simulate the semantics of Φ by guessing truth assignments of the variables under the scope of the other two quantifiers in the given QSAT3-formula, followed by playing the game theoretic game to evaluate the resulting propositional formula.</a>
<a href="#3" id="3">Given this observation, a lower bound of {a mathematical formula} Σ 2P=NPNP seems intuitive for weak implementation (an existential problem: guess a strategy profile with specific properties and verify it against all deviations) and a lower bound of {a mathematical formula} Π 2P=coNPNP for strong implementation (a universal problem).</a>
<a href="#4" id="4">That our strong implementation problem is more difficult than its weak version, {a mathematical formula} Σ 3P-complete, stems from the fact that an additional normative system has to be guessed such that all Nash equilibria satisfy a specific property.</a>
<a href="#5" id="5">This implies that some possible action profiles from {a mathematical formula}Act1× … ×Actk may not be specified in {a mathematical formula}Aspec in which case we assume that their executions will not change the state of the multi-agent environment program and loop in those states.</a>
<a href="#6" id="6">In the following, we use {a mathematical formula}Tbasic to denote the set of transition rules from Definition 16, {a mathematical formula}trans(F,Act1, … ,Actk,Aspec,Tbasic) to denote the set of all transitions that are derivable from transition rules {a mathematical formula}Tbasic based on the environment program {a mathematical formula}(F,(Act1, … ,Actk),Aspec), and {a mathematical formula}trans(Act1, … ,Actk,Aspec,Tbasic) to denote the set of all transitions that are derivable from transition rules {a mathematical formula}Tbasic based on environment programs {a mathematical formula}(F,(Act1, … ,Actk),Aspec) for any {a mathematical formula}F ⊆ Π .</a>
<a href="#7" id="7">Program statesLet {a mathematical formula}F ⊆ Π be a set of facts and Τ be a set of transitions.</a>
<a href="#8" id="8">The set of states reached from F by subsequent transitions from Τ , denoted by {a mathematical formula}gen( Τ ,F), is defined as follows:{a mathematical formula}{a mathematical formula}{a mathematical formula}</a>
<a href="#9" id="9">Observe that {a mathematical formula}gen( Τ ,F) is finite when Τ is finite.</a>
<a href="#10" id="10">For this purpose, we use the function {a mathematical formula}SanN(X, Α → ), as defined in Definition 10, to determine the sanction set that should be imposed when the agents perform action profile {a mathematical formula} Α → in state X.</a>
<a href="#11" id="11">Note that Definition 18 can be applied as norm-based environment programs have the required ingredients such as an initial state {a mathematical formula}F0, a sets of actions for each agent, and a set of action profile specifications.</a>
<a href="#12" id="12">We now investigate the relation between the concurrent game structure {a mathematical formula}Mn that is generated by a norm-based environment program, and the concurrent game structure {a mathematical formula}M ′ that is generated by the corresponding environment program without norms (i.e., the same initial state, actions, and action specifications) which is then updated with the same norms.</a>
<a href="#13" id="13">To establish Condition 3 we consider another arbitrary action profile {a mathematical formula} Β → ∈ Act1× … ×Actk.</a>
<a href="#14" id="14">For this purpose the following consistency constraints — temporal formulae — are introduced for each {a mathematical formula}i ∈ {1, … ,n}:{a mathematical formula} It is easy to see that if {a mathematical formula}Ti is true along a path then this path — or the associated strategy of the player that controls {a mathematical formula}xi — represents a truth assignment of {a mathematical formula}xi.</a>
</body>
</html>