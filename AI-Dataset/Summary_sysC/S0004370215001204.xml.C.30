<html>
<head>
<meta name="TextLength" content="SENT_NUM:29, WORD_NUM:779">
</head>
<body bgcolor="white">
<a href="#0" id="0">FODD evaluationGiven diagram B, interpretation I with finite domain, and value {a mathematical formula}V ≥ 0: return Yes iff {a mathematical formula}MAPB(I) ≥ V.</a>
<a href="#1" id="1">In the special case when the leaves are restricted to {a mathematical formula}{0,1} and {a mathematical formula}V=1 this can be seen as a returning Yes iff {a mathematical formula}MAPB(I) is true.</a>
<a href="#2" id="2">FODD satisfiabilityGiven diagram B with leaves in {a mathematical formula}{0,1}: return Yes iff there is some I such that {a mathematical formula}MAPB(I) is true.</a>
<a href="#3" id="3">FODD valueGiven diagram B and value {a mathematical formula}V ≥ 0: return Yes iff there is some I such that {a mathematical formula}MAPB(I)=V.</a>
<a href="#4" id="4">FODD equivalenceGiven diagrams {a mathematical formula}B1 and {a mathematical formula}B2: return Yes iff {a mathematical formula}MAPB1(I)=MAPB2(I) for all I.</a>
<a href="#5" id="5">GFODD satisfiabilityGiven diagram B with leaves in {a mathematical formula}{0,1} and integer N in unary: return Yes iff there is some I, with at most N objects, such that {a mathematical formula}MAPB(I) is true.</a>
<a href="#6" id="6">GFODD valueGiven diagram B, integer N in unary and value {a mathematical formula}V ≥ 0: return Yes iff there is some I, with at most N objects, such that {a mathematical formula}MAPB(I)=V.</a>
<a href="#7" id="7">GFODD equivalenceGiven diagrams {a mathematical formula}B1 and {a mathematical formula}B2 (with the same aggregation functions) and integer N in unary: return Yes iff for all I with at most N objects, {a mathematical formula}MAPB1(I)=MAPB2(I).</a>
<a href="#8" id="8">GFODD edge removalGiven diagrams {a mathematical formula}B1 and {a mathematical formula}B2 (with the same aggregation functions), where {a mathematical formula}B2 can be obtained from {a mathematical formula}B1 by redirecting one edge to a zero valued leaf, and given integer N in unary: return Yes iff for all I with at most N objects, {a mathematical formula}MAPB1(I)=MAPB2(I).</a>
<a href="#9" id="9">For any FODD B with k variables and constants, if{a mathematical formula}MAPB(I)=Vfor some I then there is an interpretation{a mathematical formula}I ′ with at most k objects such that{a mathematical formula}MAPB(I ′ )=V.Let I be as in the statement.</a>
<a href="#10" id="10">Using these values we return Yes or No accordingly.</a>
<a href="#11" id="11">To calculate the map values, let B be one of these diagrams, and let the leaf values of the diagram be {a mathematical formula}v1,v2, … ,vk.</a>
<a href="#12" id="12">We make k calls to FODD Evaluation with {a mathematical formula}(B,I,vi) as input.</a>
<a href="#13" id="13">{a mathematical formula}MAPB(I) is the largest value on which the oracle returns Yes.</a>
<a href="#14" id="14">The reduction gets a {a mathematical formula}QBFk formula, {a mathematical formula}Q1x1Q2x2 … Qmxmf, with {a mathematical formula}Qi either a ∀ or ∃ quantifier.</a>
<a href="#15" id="15">We first construct two diagrams {a mathematical formula}B1 and {a mathematical formula}B2, where {a mathematical formula}B2, the QBF validation diagram, is exactly as in the proof of Theorem 20, that is, it includes consistency blocks followed by clause blocks.</a>
<a href="#16" id="16">The diagram {a mathematical formula}B1 has two portions.</a>
<a href="#17" id="17">The first verifies that I has at least two objects and the truth values of {a mathematical formula}PT() on these objects are different.</a>
<a href="#18" id="18">The second portion verifies that I has at most two objects.</a>
<a href="#19" id="19">This is implemented using min variables such that if we identify three distinct objects we set the value to 0.</a>
<a href="#20" id="20">The two portions are put together so as to respect predicate order, and the final diagram {a mathematical formula}B1 is shown in Fig.</a>
<a href="#21" id="21">GFODD Equivalence and GFODD Edge Removal for diagrams with aggregation depth k (where{a mathematical formula}k ≥ 2) are{a mathematical formula} Π k+1P-complete.By Corollary 18, it suffices to show that this holds for max-k-alternating GFODDs.</a>
<a href="#22" id="22">Since Edge Removal is a special case of Equivalence it suffices to show membership for Equivalence and hardness for Edge Removal.To show membership we show that the complement, nonequivalence, is in {a mathematical formula} Σ k+1P.</a>
<a href="#23" id="23">Given two max-k-alternating GFODDs {a mathematical formula}B1 and {a mathematical formula}B2 as input, we guess an interpretation I of the appropriate size, and then appeal to an oracle for GFODD Evaluation to calculate {a mathematical formula}MAPB1(I) and {a mathematical formula}MAPB2(I).</a>
<a href="#24" id="24">This is shown for the predicate {a mathematical formula}T() in Fig.</a>
<a href="#25" id="25">GFODD Value for diagrams with aggregation depth k (where{a mathematical formula}k ≥ 2) is{a mathematical formula} Σ k+1P-complete.The proof of Theorem 16 goes through almost directly and requires only a slight wording variation.</a>
<a href="#26" id="26">For membership we get the bound on interpretation size by the assumption on the input; then the algorithm is the same.For the reduction, we use Theorem 1 to calculate {a mathematical formula}B=Apply(B1,B2,+).</a>
<a href="#27" id="27">As stated in that theorem, we can mesh together the aggregation lists of {a mathematical formula}B1 and {a mathematical formula}B2 interleaving the max and min blocks from each diagram without increasing quantifier depth and the diagram B has the same quantifier prefix and depth as those of {a mathematical formula}B1 and {a mathematical formula}B2.</a>
<a href="#28" id="28">GFODD Satisfiability for min-k-alternating GFODDs (where{a mathematical formula}k ≥ 2) is{a mathematical formula} Σ k+1P-complete.</a>
</body>
</html>