<html>
<head>
<meta name="TextLength" content="SENT_NUM:5, WORD_NUM:223">
</head>
<body bgcolor="white">
<a href="#0" id="0">Although [11] did not consider loops as formal objects, the truth is that they can be easily detected in any structure {a mathematical formula}chain(s) by recognizing two (possibly non-consecutive) crossings through the same hole with the general pattern:{a mathematical formula} where {a mathematical formula}f,f ‾ are the two faces of a same hole.</a>
<a href="#1" id="1">6 has a loop formed by the interaction of Str and the hole PostH that can be directly seen in {a mathematical formula}chain(Str) as:{a mathematical formula}</a>
<a href="#2" id="2">An interesting observation is that loops formed in this way also constitute a new kind of “ hole ” on which we can apply the same actions we use for normal or permanent holes (passing objects through them, picking or pulling other strings, etc.)</a>
<a href="#3" id="3">One first obvious way to build a state containing loops is by starting with a free string s and successively passing its end tip {a mathematical formula}se through all the involved holes in the order represented by {a mathematical formula}chain(s).</a>
<a href="#4" id="4">For instance, it may be the case that the string tips are linked to some object that cannot pass through the hole, so we cannot create the loop in state 2 by performing {a mathematical formula}pass(se,h+) and then {a mathematical formula}pass(se,h − ) as before, but we can still pick the string to {a mathematical formula}h+ to form the loop.</a>
</body>
</html>