<html>
<head>
<meta name="TextLength" content="SENT_NUM:15, WORD_NUM:494">
</head>
<body bgcolor="white">
<a href="#0" id="0">We introduce a new variant of {a mathematical formula}LA ⁎ called Rational Lazy{a mathematical formula}A ⁎ ({a mathematical formula}RLA ⁎ ), as well as a new variant of {a mathematical formula}LIDA ⁎ called Rational Lazy{a mathematical formula}IDA ⁎ ({a mathematical formula}RLIDA ⁎ ).</a>
<a href="#1" id="1">These new rational algorithms are based on rational metareasoning in the sense of [1], and use a myopic regret criterion to decide whether to compute {a mathematical formula}h2(n) or to bypass the computation of {a mathematical formula}h2 and expand n instead.</a>
<a href="#2" id="2">They aim to reduce search time, even at the expense of more node expansions than {a mathematical formula}A ⁎ or {a mathematical formula}IDA ⁎ with the maximum of the heuristics.</a>
<a href="#3" id="3">Empirical results on several heuristic search problems, as well as on numerous planning domains demonstrate that {a mathematical formula}RLA ⁎ and {a mathematical formula}RLIDA ⁎ lead to better performance than their non-rational versions in many cases.</a>
<a href="#4" id="4">In this section we study {a mathematical formula}LA ⁎ and {a mathematical formula}LIDA ⁎ .</a>
<a href="#5" id="5">The time overhead of {a mathematical formula}A ⁎ MAX and {a mathematical formula}LA ⁎ is summarized in Table 1.</a>
<a href="#6" id="6">In this paper we focus on just one decision type, made in the context of {a mathematical formula}LA ⁎ and {a mathematical formula}LIDA ⁎ — that of deciding whether to evaluate or to bypass the computation of {a mathematical formula}h2 for some node n. We have two options: (1) Evaluate the second heuristic {a mathematical formula}h2(n), and proceed using the value {a mathematical formula}fmax(n), or (2) bypass the computation of {a mathematical formula}h2(n) and use {a mathematical formula}f1(n), thereby saving time by not computing {a mathematical formula}h2, at the risk of additional expansions and evaluations of {a mathematical formula}h1.</a>
<a href="#7" id="7">Therefore, if {a mathematical formula}h2 is expected to be helpful for more than half of the nodes n on which the search algorithm evaluates {a mathematical formula}h2(n), then one should simply use {a mathematical formula}LA ⁎ or {a mathematical formula}LIDA ⁎ .</a>
<a href="#8" id="8">We have described two new algorithms, {a mathematical formula}RLA ⁎ and {a mathematical formula}RLIDA ⁎ , which are based on rational metareasoning.</a>
<a href="#9" id="9">These algorithms have a decision rule based on some parameters, most importantly {a mathematical formula}ph2 (the probability that {a mathematical formula}h2 is helpful) and {a mathematical formula}ph1 (the probability that {a mathematical formula}h1 is helpful).</a>
<a href="#10" id="10">We begin with an empirical evaluation of {a mathematical formula}RLA ⁎ , which we compare to {a mathematical formula}A ⁎ -based search algorithms.</a>
<a href="#11" id="11">Furthermore, looking at search time, we see the benefits of using {a mathematical formula}RLA ⁎ .</a>
<a href="#12" id="12">We now turn to {a mathematical formula}RLIDA ⁎ , which we compare to {a mathematical formula}IDA ⁎ based search algorithms.</a>
<a href="#13" id="13">Examining the geometric mean of the number of expanded nodes in each search algorithm (Table A.21 provides per-domain results), we can see that, {a mathematical formula}IDA ⁎ MAX has the fewest expanded nodes, and {a mathematical formula}LIDA ⁎ is very close.</a>
<a href="#14" id="14">The two variants of {a mathematical formula}RLIDA ⁎ have more expanded nodes.</a>
</body>
</html>