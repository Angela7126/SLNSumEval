<html>
<head>
<meta name="TextLength" content="SENT_NUM:26, WORD_NUM:620">
</head>
<body bgcolor="white">
<a href="#0" id="0">A nondeterministic planning problem is a triple {a mathematical formula}P=(D,S0,G), where {a mathematical formula}D=(L,O) is a nondeterministic planning domain.</a>
<a href="#1" id="1">A planning domain {a mathematical formula}D=(L,O) is classical if every operator in O is classical.</a>
<a href="#2" id="2">A planning problem {a mathematical formula}P=(D,S0,G) is classical if D is classical and there is just one initial state, i.e., {a mathematical formula}S0={s0} for some {a mathematical formula}s0 ∈ S.</a>
<a href="#3" id="3">Given a planning problem {a mathematical formula}P=(D,s0,G), a state s is solvable if there is a plan p such that {a mathematical formula} Γ (s,p) ∈ G.</a>
<a href="#4" id="4">The determinization of a nondeterministic planning domain {a mathematical formula}D=(L,O) is a classical planning domain {a mathematical formula}D¯=(L,O¯), where {a mathematical formula}O¯= ⋃ o ∈ Oo¯.</a>
<a href="#5" id="5">The determinization of a nondeterministic planning problem {a mathematical formula}P=(D,{s0},G) is a classical planning problem {a mathematical formula}P¯=(D¯,s0,G).</a>
<a href="#6" id="6">Algorithm 1, NDPR, takes as input a nondeterministic planning problem {a mathematical formula}P=(D,S0,G) and a classical planner CP.</a>
<a href="#7" id="7">Consider the nondeterministic planning problem {a mathematical formula}P=(D,{s0},{s2}), in which the set of initial states is {a mathematical formula}{s0} and there is a single goal state, {a mathematical formula}s2.</a>
<a href="#8" id="8">Find-Acceptable-Plan's parameters consist of a nondeterministic planning domain D, its determinization {a mathematical formula}D¯, an initial state {a mathematical formula}s0, a set of goal states G, a classical planner CP, and a set U of states to avoid.</a>
<a href="#9" id="9">Planning will restart at the state just before {a mathematical formula}ai.</a>
<a href="#10" id="10">Let D and {a mathematical formula}D¯ be as in Fig.</a>
<a href="#11" id="11">In this case, the solution to the planning problem is the same hyperpolicy {a mathematical formula} Π ⁎ as in Eq.</a>
<a href="#12" id="12">If is a planning operator (or an action), then an abstraction of o is an operator (or action) {a mathematical formula}o ⁎ such that</a>
<a href="#13" id="13">An abstraction of a nondeterministic planning domain D is a planning domain {a mathematical formula}D ⁎ in which the set of operators is {a mathematical formula}O ⁎ ∪ Σ , where</a>
<a href="#14" id="14">{a mathematical formula}O ⁎ contains an abstraction of each planning operator o in D;</a>
<a href="#15" id="15">Let {a mathematical formula}P ⁎ =(D ⁎ ,S0,G) be an abstraction of a planning problem {a mathematical formula}P=(D,S0,G).</a>
<a href="#16" id="16">Let Σ and {a mathematical formula}O ⁎ be the sets of splitting operators and planning operators in {a mathematical formula}P ⁎ .</a>
<a href="#17" id="17">Algorithm 8 in Appendix B is an algorithm to translate a compound-abstract solution {a mathematical formula} Π ⁎ ⁎ for {a mathematical formula}P ⁎ ⁎ into an abstract policy {a mathematical formula} Π ⁎ .</a>
<a href="#18" id="18">Thus NDP2 should have to make {a mathematical formula}O(n3) calls to the classical planner to develop a policy for an LiS planning problem.</a>
<a href="#19" id="19">By construction, the plan p is a solution for the classical planning problem {a mathematical formula}(D¯,s,G).</a>
<a href="#20" id="20">More formally, a plan p is U-acceptable in a state s with respect to a nondeterministic domain D, its determinization {a mathematical formula}D¯, a classical planning problem {a mathematical formula}(D¯,s,G) and a set of states U if:</a>
<a href="#21" id="21">p is applicable in the state s in the classical planning domain {a mathematical formula}D¯.</a>
<a href="#22" id="22">Since there are finitely many states, there can be at most {a mathematical formula}|S| many iterations of the main planning loop before NDP2 either returns or adds a state to U.Once a state is in U, since Find-Acceptable-Plan is sound, no action added to the policy will lead to that state.</a>
<a href="#23" id="23">Let {a mathematical formula}P ⁎ ⁎ be a compound-abstract version of {a mathematical formula}P ⁎ , and {a mathematical formula} Π ⁎ ⁎ be a solution for {a mathematical formula}P ⁎ ⁎ .</a>
<a href="#24" id="24">Algorithm 8 is an algorithm to extract an abstract plan {a mathematical formula} Π ⁎ from {a mathematical formula} Π ⁎ ⁎ .</a>
<a href="#25" id="25">It terminates when none of the actions in {a mathematical formula} Π ⁎ ⁎ is compound.</a>
</body>
</html>