<html>
<head>
<meta name="TextLength" content="SENT_NUM:22, WORD_NUM:847">
</head>
<body bgcolor="white">
<a href="#0" id="0">Unless specific domain knowledge is available, the choice is often arbitrary and may lead to a very large number of extracted patterns which can reduce the success of any subsequent data analysis.</a>
<a href="#1" id="1">First, we detail a static method (called Aetheris) based on the theoretical relationships with condensed representations of patterns (representations which return a subset of the patterns having the same expressiveness as the whole set of patterns [23]).</a>
<a href="#2" id="2">Second, we describe a dynamic method (called {a mathematical formula}CP+Sky) which involves a continuous refinement of the skyline constraints based on the extracted patterns.</a>
<a href="#3" id="3">All the measures discussed in this study are based on the set of primitive-based measures{a mathematical formula}M that were defined in the context of constraint-based pattern mining [50].</a>
<a href="#4" id="4">Table 2 presents some general definitions of measures and Table 1b gives some specific examples (gr denotes the growth rate [11], {a mathematical formula}freq ∨ the disjunctive support, measures such as bond and aconf are detailed in [51]).</a>
<a href="#5" id="5">Given a set of measures {a mathematical formula}M ⊆ M, the skypattern mining problem is to evaluate the query{a mathematical formula}Sky(L,M).</a>
<a href="#6" id="6">As {a mathematical formula}Sky(L,M) ⊆ P ⊆ L and {a mathematical formula}|P| ≤ |L|, we argue that evaluating {a mathematical formula}Sky(P,M) is generally much less costly than evaluating {a mathematical formula}Sky(L,M) since the cost of {a mathematical formula}Sky(x,M) generally decreases with the cardinality of x. Consequently, we aim to reduce the cost of evaluating {a mathematical formula}Sky(P,M) by finding a small but relevant set P (i.e.</a>
<a href="#7" id="7">Therefore, our problem can be reformulated as follows: given a set of measures M, how to identify a smaller set of measures{a mathematical formula}M ′ which allows the computation of a concise representation on the patterns (i.e.</a>
<a href="#8" id="8">After the user's preferences selection, in a common first step, Aetheris and {a mathematical formula}CP+Sky automatically identify a smaller set of measures {a mathematical formula}M ′ which allows for the computation of a concise representation on the patterns thanks to the use of converters (cf.</a>
<a href="#9" id="9">For that purpose, Aetheris builds a static set of representative patterns according to the set {a mathematical formula}M ′ , which is based on the notion of converting the initial set of preference M (cf.</a>
<a href="#10" id="10">From the previous definitions, given a set of measures M which is maximally {a mathematical formula}M ′ -skylineable, if {a mathematical formula}x=M ′ y and {a mathematical formula}x ⊃ y, it is clear that x cannot be dominated by y on M. For instance, {a mathematical formula}M={freq,area} is strictly maximally {a mathematical formula}{freq}-skylineable because {a mathematical formula}area(x) strictly increases with the cardinality of x (when the frequency remains constant).</a>
<a href="#11" id="11">We propose two operators to automatically build {a mathematical formula}M ′ given the initial set of measures M. Basically, the construction of {a mathematical formula}M ′ consists in identifying primitives that must remain constant in order that minimal or maximal patterns are always dominant patterns.</a>
<a href="#12" id="12">In order that the closed patterns maximize the area, the frequency has to belong to {a mathematical formula}M ′ .</a>
<a href="#13" id="13">Minimal and maximal skylineable convertersThe minimal and maximal skylineable converters defined by Table 3 for any primitive-based measure are naturally extended to a set of primitive-based measures {a mathematical formula}M ⊆ M: {a mathematical formula}c ‾ (M)= ⋃ m ∈ Mc ‾ (m) and {a mathematical formula}c_(M)= ⋃ m ∈ Mc_(m).</a>
<a href="#14" id="14">{a mathematical formula}c ‾ ({freq(x),area(x)})={freq(x)} means that the most specific patterns (when the frequency remains unchanged) maximize the measures {a mathematical formula}{freq(x),area(x)}.</a>
<a href="#15" id="15">This observation enables us to properly answer the question: instead of directly evaluating the skypattern query on {a mathematical formula}L, we can compute the skypatterns on a condensed representation of {a mathematical formula}L and then generate the entire set of skypatterns.</a>
<a href="#16" id="16">Distinct operatorGiven a set of measures {a mathematical formula}M ′ ⊆ M, the distinct operator for {a mathematical formula}P ⊆ L with respect to {a mathematical formula}M ′ and {a mathematical formula} Θ ∈ { ⊂ , ⊃ } returns all the patterns x of P such that their generalizations (or specializations) are distinct from x with respect to {a mathematical formula}M ′ :{a mathematical formula} where {a mathematical formula} Θ ∈ { ⊂ , ⊃ }.</a>
<a href="#17" id="17">Given a set of measures {a mathematical formula}M ′ , the set of free (respectively closed) patterns adequate to {a mathematical formula}M ′ corresponds exactly to {a mathematical formula}Dis ⊂ (L,M ′ ) (respectively {a mathematical formula}Dis ⊃ (L,M ′ )).</a>
<a href="#18" id="18">Following our principle of dealing with measures used in the experiments, we give the examples of {a mathematical formula}M ′ ={freq} and {a mathematical formula}M ′ ={max} because applying the minimal converter {a mathematical formula}c_ on mean gives max (cf.</a>
<a href="#19" id="19">Another interesting result provided by Table 5 is the number of closed patterns extracted by Aetheris in comparison with the number of candidates generated by {a mathematical formula}CP+Sky.</a>
<a href="#20" id="20">This figure highlights the discrepancy between the methods with the distinct lower number of representative patterns required by {a mathematical formula}CP+Sky in comparison to the Aetheris method.</a>
<a href="#21" id="21">The time complexity of this approach is {a mathematical formula}O(n2) where n is the number of representative patterns generated in the first step.</a>
</body>
</html>