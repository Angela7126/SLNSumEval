<html>
<head>
<meta name="TextLength" content="SENT_NUM:11, WORD_NUM:317">
</head>
<body bgcolor="white">
<a href="#0" id="0">In this work, we consider the design of stochastic local search (SLS) solvers for the propositional satisfiability problem (SAT).</a>
<a href="#1" id="1">We first introduce a generalized, highly parameterized solver framework, dubbed SATenstein, that includes components drawn from or inspired by existing high-performance SLS algorithms for SAT.</a>
<a href="#2" id="2">The parameters of SATenstein determine which components are selected and how these components behave; they allow SATenstein to instantiate many high-performance solvers previously proposed in the literature, along with trillions of novel solver strategies.</a>
<a href="#3" id="3">We used an automated algorithm configuration procedure to find instantiations of SATenstein that perform well on several well-known, challenging distributions of SAT instances.</a>
<a href="#4" id="4">Our experiments show that SATenstein solvers achieved dramatic performance improvements as compared to the previous state of the art in SLS algorithms; for many benchmark distributions, our new solvers also significantly outperformed all automatically tuned variants of previous state-of-the-art algorithms.</a>
<a href="#5" id="5">In order to study the effectiveness of our proposed approach for algorithm design, we configured SATenstein-LS on training sets from various distributions of SAT instances and compared the performance of the SATenstein-LS solvers thus obtained against that of several existing high-performance SAT solvers on disjoint test sets.</a>
<a href="#6" id="6">For each instance distribution D, we compared the performance of SATenstein-LS[D] against that of 11 high-performance SLS-based SAT solvers on the respective test set.</a>
<a href="#7" id="7">We included every SLS algorithm that won a medal in any category of a SAT competitions between 2002 and 2007, because those algorithms are all part of the SATenstein-LS design space.</a>
<a href="#8" id="8">This indicates that many interesting designs that could compete with existing high-performance solvers still remain unexplored in SLS design space.</a>
<a href="#9" id="9">In addition, we found that all SATenstein-LS configurations differ from existing SLS algorithms (except for SATenstein[FAC], whose configuration and performance is similar to SAPS).</a>
<a href="#10" id="10">Overall, our results clearly indicate that SATenstein-LS can be augmented with components from more recent SLS-based SAT solvers, and doing so achieves performance comparing favorably even with newer high-performance algorithms.</a>
</body>
</html>