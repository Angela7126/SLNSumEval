<html>
<head>
<meta name="TextLength" content="SENT_NUM:4, WORD_NUM:209">
</head>
<body bgcolor="white">
<a href="#0" id="0">Completeness of GIC1 is obvious: searchSolutionFor is called for all values (line 3), so if a value {a mathematical formula}(x,a) is not GIC, it will necessarily be removed in line 5.In GIC2 (Algorithm 4), a value {a mathematical formula}(x,a) is let in the domain without checking if it belongs to a solution when {a mathematical formula}nbGic[x] ≥ |dom(x)| (line 4) or {a mathematical formula}stamp[x][a] ≥ time (line 5).</a>
<a href="#1" id="1">As time is incremented at each new call to GIC2 (line 1), {a mathematical formula}stamp[x][a] is (greater than or) equal to time only if line 3 of Algorithm 2 has been executed, which means that a solution containing {a mathematical formula}(x,a) has already been found, and thus {a mathematical formula}(x,a) is GIC.</a>
<a href="#2" id="2">Lines 2 and 4 of Algorithm 2 ensure that {a mathematical formula}nbGic[x] is equal to the number of values in {a mathematical formula}dom(x) that GIC2 has already found in a solution at the current call to GIC2 ({a mathematical formula}timeth call).</a>
<a href="#3" id="3">Hence, if {a mathematical formula}nbGic[x] ≥ |dom(x)|, all values of x have been proved GIC.Like GIC2, GIC3 (Algorithm 4) lets a value {a mathematical formula}(x,a) in the domain without checking if it belongs to a solution when {a mathematical formula}nbGic[x] ≥ |dom(x)| or {a mathematical formula}stamp[x][a] ≥ time.</a>
</body>
</html>