<html>
<head>
<meta name="TextLength" content="SENT_NUM:30, WORD_NUM:517">
</head>
<body bgcolor="white">
<a href="#0" id="0">Act is the set of actions.</a>
<a href="#1" id="1">An action {a mathematical formula}a ∈ Act is a quadruple {a mathematical formula}a= 〈 id(a),in(a),precond(a),effects(a) 〉 , where:</a>
<a href="#2" id="2">{a mathematical formula}X={x1, … ,xn} is a finite set of n variables.</a>
<a href="#3" id="3">{a mathematical formula}D={D1, … ,Dn} is the set of finite domains of the variables in X, so that {a mathematical formula}xi ∈ Di.</a>
<a href="#4" id="4">{a mathematical formula}</a>
<a href="#5" id="5">The general constraints are also translated at the level of CSP variables as constraints that should hold at all states.</a>
<a href="#6" id="6">{a mathematical formula}</a>
<a href="#7" id="7">{a mathematical formula}</a>
<a href="#8" id="8">{a mathematical formula}</a>
<a href="#9" id="9">{a mathematical formula}</a>
<a href="#10" id="10">{a mathematical formula}</a>
<a href="#11" id="11">{a mathematical formula}</a>
<a href="#12" id="12">{a mathematical formula}</a>
<a href="#13" id="13">Definition 4</a>
<a href="#14" id="14">State transition systemA state transition system based on a planning domain extended with the knowledge-level representation {a mathematical formula}PD ′ = 〈 V,Par,Act 〉 is a triple {a mathematical formula} Σ = 〈 S,Act, Γ 〉 , such that:</a>
<a href="#15" id="15">{a mathematical formula}</a>
<a href="#16" id="16">We extend the function {a mathematical formula} Γ ˆ to capture the set of states that are brought forth by applying the actions in Π , starting from {a mathematical formula}S0[inPars0], where {a mathematical formula}S0[inPars0] is {a mathematical formula}S0 with the domains of input parameters updated according to {a mathematical formula}inPars0.</a>
<a href="#17" id="17">The notion of goal satisfaction is defined in terms of the execution path {a mathematical formula}S ˜ ={a mathematical formula} 〈 S0[inPars0], … ,Sk 〉 induced by a planning problem {a mathematical formula}P= 〈 Σ ,S0,g 〉 , input parameters assignment inPars, and a sequence of action sets {a mathematical formula} Π = 〈 A0, … ,Ak − 1 〉 .</a>
<a href="#18" id="18">We will use the notation {a mathematical formula}S ⊇ props if there is at least one state {a mathematical formula}s ∈ S that satisfies the propositional formula props.</a>
<a href="#19" id="19">We say that a plan has the potential to solve the planning problem, if it corresponds to an execution path which subsumes a sequence of states that satisfy the propositions inferred by the goal.</a>
<a href="#20" id="20">We denote the index of the last state set in an execution path with {a mathematical formula}last(S ˜ ).</a>
<a href="#21" id="21">We first introduce the notion of the minimal execution path.</a>
<a href="#22" id="22">We say that an execution path {a mathematical formula}S ˜ = 〈 S0, Γ (S0), … , Γ k(S0) 〉 has the potential to solve the planning problem P given a set of initial states {a mathematical formula}S0 and a goal g, and we write {a mathematical formula}S ˜ ⊨ g if:</a>
<a href="#23" id="23">{a mathematical formula}S ˜ ⊨ all_states(props):{a mathematical formula} ∀ Sj ∈ S ˜ :Sj ⊇ props_and_known</a>
<a href="#24" id="24">{a mathematical formula}S ˜ ⊨ achieve(props):{a mathematical formula} ∃ Sj ∈ S ˜  such that Sj ⊇ props_and_known</a>
<a href="#25" id="25">{a mathematical formula}S ˜ ⊨ ⋀ igoali:{a mathematical formula} ⋀ i(S ˜ ⊨ goali)</a>
<a href="#26" id="26">{a mathematical formula}</a>
<a href="#27" id="27">{a mathematical formula}</a>
<a href="#28" id="28">Definition 9</a>
<a href="#29" id="29">Orchestration problemAn orchestration problem is a triple {a mathematical formula}OP={a mathematical formula} 〈 Σ e,S0,g 〉 , where {a mathematical formula} Σ e is an execution-level state transition system, {a mathematical formula}S0 is the set of all states that satisfy a conjunction of propositions {a mathematical formula} ⋀ iprop_init_i, and g is a goal as specified in Section 2.3.</a>
</body>
</html>