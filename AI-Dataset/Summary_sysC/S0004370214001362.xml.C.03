<html>
<head>
<meta name="TextLength" content="SENT_NUM:19, WORD_NUM:507">
</head>
<body bgcolor="white">
<a href="#0" id="0">Our hybrid representation integrates pseudo-tags learned from content into the tag representation of a track, and a dynamic weighting scheme limits the number of pseudo-tags that are allowed to contribute.</a>
<a href="#1" id="1">Pseudo-tags are tags that are assigned to a track algorithmically, based on the content representation of the track.</a>
<a href="#2" id="2">This generation of pseudo-tags allows for recommendations to be made using tags directly, rather than using content for recommendation.</a>
<a href="#3" id="3">Each of these K retrieved tracks will have an associated tag representation, which can then be used to learn pseudo-tags for track {a mathematical formula}T.</a>
<a href="#4" id="4">A threshold may be set based on the number of tags a query has, and a decision made as to whether or not the track is a cold-start item.</a>
<a href="#5" id="5">This increased number of pseudo-tags over the typical number of tags can provide problems when computing similarity between a pseudo-tag vector and tag vector, and so only the most relevant pseudo-tags should be selected.</a>
<a href="#6" id="6">As the number of tags in a track increases, so does the recommendation quality, and so, intuitively, as the number of tags T increases, the number of pseudo-tags P should decrease.</a>
<a href="#7" id="7">Using this method of combining pseudo-tags with tags, we are now able to represent every track by a hybrid vector h. For tracks which are well-tagged, the tag vector will be the main contributor to h, and therefore allow recommendation to be made using the strengths of tag representation.</a>
<a href="#8" id="8">For weakly-tagged tracks, any tags which they have will not be ignored, but instead enhanced by the inclusion of pseudo-tags in h. Recommendations are made using this hybrid representation based on cosine similarity, and will be referred to as Hybrid.</a>
<a href="#9" id="9">To further examine how this dynamic generation of a hybrid representation affects recommendation, we show the results by the number of tags a query has, in Fig.</a>
<a href="#10" id="10">The effect of pseudo-tags on tracks with a large number of tags is refinement.</a>
<a href="#11" id="11">That is, the recommendation quality of a hybrid system must always be greater than the maximum quality of both content and tags, for all given numbers of tags in a representation.</a>
<a href="#12" id="12">For more than 20 tags Hybrid always performs at least as well as Tag (see Fig.</a>
<a href="#13" id="13">These pseudo-tags allow the hybrid approach to have a distinct advantage when less tags are available, instead of reverting to the random recommendations of Tag.</a>
<a href="#14" id="14">These results show that the ability to learn correct pseudo-tags can have a positive impact on recommendation quality regardless of how many tags a track has.</a>
<a href="#15" id="15">To gain further insight into how our hybrid recommendation approach behaves, we examine the quality of pseudo-tags produced by our PseudoTag method.</a>
<a href="#16" id="16">The horizontal axis shows the number of tags a track has, and the vertical shows the percentage of tracks which have this number of tags.</a>
<a href="#17" id="17">Our method for generating pseudo-tags is based on summarising the tag vectors of the K nearest neighbours of a track using Eq.</a>
<a href="#18" id="18">T is the number of tags in the tag vector of track s, and P is the number of pseudo-tags generated for track s.</a>
</body>
</html>