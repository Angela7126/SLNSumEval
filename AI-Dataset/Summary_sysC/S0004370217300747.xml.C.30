<html>
<head>
<meta name="TextLength" content="SENT_NUM:28, WORD_NUM:620">
</head>
<body bgcolor="white">
<a href="#0" id="0">The first two rows and parts of the third row are assigned, allowing many of the scalar product constraints to be simplified.</a>
<a href="#1" id="1">Each row has a sum constraint such as:{a mathematical formula}</a>
<a href="#2" id="2">An Associative – Commutative Common Subexpression (AC-CS) of a set of associative and commutative (AC) expressions is a set of at least two terms that appear in each of the AC expressions.</a>
<a href="#3" id="3">In the example above, the terms {a mathematical formula}w,y,z appear in both the original sum constraints, hence {a mathematical formula}{w,y,z} is an AC-CS of the two sum constraints.</a>
<a href="#4" id="4">To find the value of ub (lb) for a given allDifferent or GCC constraint, we find an assignment to all the relevant variables such that each variable takes a value from its domain, the sum of the assignment is maximized (minimized), and the number of occurrences of each value is within the interval permitted for the value (for AllDifferent, the interval is {a mathematical formula}{0 … 1} for every value).</a>
<a href="#5" id="5">For example, given constraint {a mathematical formula}allDifferent(x,y,z) where all variables have domain {a mathematical formula}{1,3,5,7}, Savile Row adds constraints {a mathematical formula}x+y+z ≥ 1+3+5 and {a mathematical formula}x+y+z ≤ 3+5+7.</a>
<a href="#6" id="6">Suppose {a mathematical formula}x×y occurs three times in a model.</a>
<a href="#7" id="7">Identical CSE would introduce a new decision variable a and new constraint {a mathematical formula}x×y=a.</a>
<a href="#8" id="8">The original occurrences of {a mathematical formula}x×y would be replaced by a.</a>
<a href="#9" id="9">In Savile Row, Identical CSE is implemented with Algorithm 3.</a>
<a href="#10" id="10">Andrea Rendl's Tailor [31], [59] and MiniZinc [65], [39] also implement Identical CSE.</a>
<a href="#11" id="11">In contrast to Tailor and MiniZinc, our algorithm is not tied to the process of flattening nested expressions into primitive expressions supported directly by the constraint solver.</a>
<a href="#12" id="12">With the SAT backend, Identical CSE is particularly helpful for Car Sequencing, EFPA and Golomb Ruler.</a>
<a href="#13" id="13">In Car Sequencing the identical expressions are {a mathematical formula}x ∈ S for some variable x and integer set S that are contained in sums.</a>
<a href="#14" id="14">For EFPA the decomposition of lexicographic ordering constraints (described in Section 3.5) is improved by Identical CSE and is also cross-connected with constraints requiring d differences between rows of the matrix.</a>
<a href="#15" id="15">Golomb Ruler has identical common subexpressions within the decomposition of allDifferent, as described in the section above.</a>
<a href="#16" id="16">The time taken by Savile Row increased from 1.7 s to 2.6 s. X-CSE typically increases the number of constraints and auxiliary variables, reducing the node rate of the CP solver.</a>
<a href="#17" id="17">With the SAT solver we found that the same 2 instances timed out with both IdentCSE and X-CSE.</a>
<a href="#18" id="18">For the other 24, X-CSE reduces the median search nodes for 22 instances and increases 2, as shown in Fig.</a>
<a href="#19" id="19">10 (left) plots the speed-up quotient with the CP solver for Molnar's Problem on the twelve instances where {a mathematical formula}k ∈ {2 … 4} and {a mathematical formula}d ∈ {2 … 5}.</a>
<a href="#20" id="20">X-CSE is more useful for the more difficult instances.</a>
<a href="#21" id="21">Instances where {a mathematical formula}k=4 and {a mathematical formula}d ≥ 3 time out with both IdentCSE and X-CSE.</a>
<a href="#22" id="22">Each allDifferent constraint on a row, column or subsquare represents a permutation of {a mathematical formula}{1 … 16} which sum to 136.</a>
<a href="#23" id="23">Savile Row automatically adds implied sum constraints as described in Section 4.4.</a>
<a href="#24" id="24">In the first tailoring process the implied sums will be {a mathematical formula} ∑ X=136 where X is the set of variables in the row, column or subsquare.</a>
<a href="#25" id="25">In the second tailoring process some variables may be assigned and deleted, with the assigned value removed from other variables in the same row, column or subsquare.</a>
<a href="#26" id="26">The implied sums for rows, columns and subsquares will be of the form {a mathematical formula} ∑ X=c but the constant c may differ.</a>
<a href="#27" id="27">X-CSE then finds AC-CSs among rows, columns, subsquares and clues.</a>
</body>
</html>