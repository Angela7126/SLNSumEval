<html>
<head>
<meta name="TextLength" content="SENT_NUM:18, WORD_NUM:500">
</head>
<body bgcolor="white">
<a href="#0" id="0">To evaluate the efficiency of the CFN approach, we model the CPD problem using several combinatorial optimization formalisms.</a>
<a href="#1" id="1">We compare the performance of the 0/1 linear programming and 0/1 quadratic programming solver cplex, the semidefinite programming based Boolean quadratic optimization tool biqmac, several weighted partial MaxSAT solvers, the Markov random field optimization solvers daoopt and mplp[80], and the CFN solver toulbar2, against that of a well-established CPD approach implementing {a mathematical formula}DEE/A ⁎ , on various realistic protein design problems.</a>
<a href="#2" id="2">We observe drastic differences in the difficulty that these instances represent for different solvers, despite often closely related models and solving techniques.</a>
<a href="#3" id="3">Modeling the CPD problem as a CFN is straightforward.</a>
<a href="#4" id="4">The set of variables X has one variable i per residue i.</a>
<a href="#5" id="5">The domain of each variable is the set of (amino acid,conformation) pairs in the rotamer library used.</a>
<a href="#6" id="6">The global energy function can be represented by 0-ary, unary and binary cost functions, capturing the constant energy term {a mathematical formula}w ∅ =E ∅ , the unary energy terms {a mathematical formula}wi(r)=E(ir), and the binary energy terms {a mathematical formula}wij(r,s)=E(ir,js), respectively.</a>
<a href="#7" id="7">In the rest of the paper, for simplicity and consistency, we use notations {a mathematical formula}E ∅ , {a mathematical formula}E( ⋅ ) and {a mathematical formula}E( ⋅ , ⋅ ) to denote cost functions and restrict ourselves to binary CFN (extensions to higher orders are well-known).</a>
<a href="#8" id="8">For every assignment {a mathematical formula}ir of every variable i, there is a Boolean variable {a mathematical formula}dir that is equal to 1 iff {a mathematical formula}i=r.</a>
<a href="#9" id="9">Additional constraints enforce that exactly one value is selected for each variable.</a>
<a href="#10" id="10">For every pair of values of different variables {a mathematical formula}(ir,js) involved in a binary energy term, there is a Boolean variable {a mathematical formula}pirjs that is equal to 1 iff the pair {a mathematical formula}(ir,js) is used.</a>
<a href="#11" id="11">Constraints enforce that a pair is used iff the corresponding values are used.</a>
<a href="#12" id="12">Then, finding a GMEC reduces to the following ILP:{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}{a mathematical formula}</a>
<a href="#13" id="13">Several solvers were unable to solve any of the instances in the 9000 s allocated globally per problem for each approach (including any pre-processing used in the method such as DEE in the {a mathematical formula}DEE/A ⁎ approach).</a>
<a href="#14" id="14">Despite the compact associated models, neither cplex for the quadratic programming model, nor biqmac for the quadratic Boolean optimization model could solve any single instance in less than 9000 s. Similarly, most of the WPMS solvers failed to solve any instance, in either of the two encoding tested.</a>
<a href="#15" id="15">The only exception to this is the maxhs solver when applied to the tuple encoding.</a>
<a href="#16" id="16">Finally, neither Opturion/CPX nor gecode nor mistral could solve any single instance.</a>
<a href="#17" id="17">In Table 1, we therefore only report the results obtained by the WPMS solver maxhs, the CPD solver osprey, the ILP solver cplex, the MAP-MRF solvers daoopt and mplp, and the CFN solver toulbar2 in its vanilla version (using the default variable ordering heuristics and no DEE).</a>
</body>
</html>