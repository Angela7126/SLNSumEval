<html>
<head>
<meta name="TextLength" content="SENT_NUM:23, WORD_NUM:933">
</head>
<body bgcolor="white">
<a href="#0" id="0">We restrict our attention here to formulas of the form{a mathematical formula} which correspond in a natural way to rules of form (1) where for {a mathematical formula}l=0, the formula {a mathematical formula}a1 ∨ ⋯ ∨ al is ⊥ ; every program P corresponds then similarly to a theory (set of formulas) {a mathematical formula} Γ P.</a>
<a href="#1" id="1">They show that {a mathematical formula}SEQ-model semantics is with respect to model checking (MCH) and inference (INF) one level higher up in the polynomial hierarchy than the {a mathematical formula}EQ-model (i.e., answer set) semantics; this is not surprising as the characterization of a {a mathematical formula}SEQ-model in Theorem 2 involves besides h-minimality also gap-minimality, while the {a mathematical formula}EQ-model definition involves only h-minimality.</a>
<a href="#2" id="2">As gap-minimality is a global property and has to be checked across all h-minimal HT-models of a program, intuitively an (additional) quantifier is needed to express that no h-minimal HT-model with smaller gap exists; in particular, this causes {a mathematical formula}SEQ-model checking for normal programs to become intractable.</a>
<a href="#3" id="3">For semi-stable models, similar results hold as for {a mathematical formula}SEQ-models in Table 1.</a>
<a href="#4" id="4">The reason is that model checking for semi-stable models amounts, by the characterization of Theorem 1, to a test that is similar to the one for {a mathematical formula}SEQ-models according to Theorem 2: testing {a mathematical formula}(I,J) ⊨ Β P is like testing {a mathematical formula}(I,J) ⊨ P feasible in polynomial time, and the conditions (i) and (ii) are analog to the conditions {a mathematical formula}(i ′ ) and {a mathematical formula}(ii ′ ).</a>
<a href="#5" id="5">Similar arguments as for {a mathematical formula}SEQ-models establish then the membership results for {a mathematical formula}SST-models.</a>
<a href="#6" id="6">It assigns each normal logic program P, in our terminology, an HT-model {a mathematical formula}WF(P)=(I,J) (called the well-founded model) such that all atoms in I are regarded as being true and all atoms not in J being false; all the remaining atoms (i.e., those in {a mathematical formula}gap(WF(P))) are regarded as undefined (rather than possibly true, as in HT-logic).</a>
<a href="#7" id="7">For example, the program P in Example 4 has a single P-stable model, and thus P has a single L-stable model which coincides with its well-founded model; thus we cannot conclude under L-stable semantics from P that {a mathematical formula}visits_barber(joe) is false.</a>
<a href="#8" id="8">Also the program in Example 22 has a single P-stable (and L-stable) model in which all atoms are undefined, while c is true under {a mathematical formula}SEQ-model semantics.</a>
<a href="#9" id="9">Similarly, the program{a mathematical formula} has a single P-stable (and thus L-stable) model in which all atoms are undefined; if we add the rules {a mathematical formula}d ← a, {a mathematical formula}d ← b, and {a mathematical formula}d ← c to P, the new program cautiously entails under both semi-stable and {a mathematical formula}SEQ-model semantics that d is true, but not under L-stable semantics.</a>
<a href="#10" id="10">Possible{a mathematical formula}SEQ-refinement of the L-stable semantics.</a>
<a href="#11" id="11">Let P be a normal program (possibly containing constraints) such that{a mathematical formula}WF(P)exists and let S be an arbitrary splitting sequence of P. Then P has some{a mathematical formula}SEQS-model M such that{a mathematical formula}M ⊑ WF(P), and moreover every{a mathematical formula}SEQS-model M of P such that{a mathematical formula}gap(M) ⊆ gap(WF(P))satisfies{a mathematical formula}M ⊑ WF(P).</a>
<a href="#12" id="12">This lemma in turn follows from Proposition 12 in [19], which states this property for partial stable models of constraint-free (even disjunctive) programs, and {a mathematical formula}WF(P) is the least partial stable model; note also that constraints in P merely determine the existence of {a mathematical formula}WF(P) but do not influence the truth valuation of atoms.</a>
<a href="#13" id="13">As a consequence of Proposition 23, Proposition 24, in particular the {a mathematical formula}SCC- and {a mathematical formula}MJC-models of a normal program can be easily restricted such that they refine its well-founded semantics in a paracoherent manner, as discussed at the end of Subsection 8.2.3.</a>
<a href="#14" id="14">As mentioned earlier, we concentrate in this article on finite splitting sequences; however split {a mathematical formula}SEQ-models can be easily extended to infinite splitting sequences {a mathematical formula}S=(S1,S2, … ,Si, … ).</a>
<a href="#15" id="15">The computational complexity of the reasoning tasks that we considered in Section 7 (Table 1, Table 2) remains the same except that Problem COH is {a mathematical formula} Σ 2p-complete for disjunctive and disjunctive stratified programs (the problem amounts to deciding whether some h-minimal HT-model {a mathematical formula}(X,Y) of the program P exists such that {a mathematical formula}gap(X,Y) ⊆ B, which is in {a mathematical formula} Σ 2p; the matching hardness follows immediately from the results on answer set existence in [16]).</a>
<a href="#16" id="16">Then, there exists {a mathematical formula}M ′ ∈ AS(P Κ ) such that {a mathematical formula}gap(M ′ ) ⊂ gap(M).</a>
<a href="#17" id="17">Let {a mathematical formula}(I ′ ,J ′ )= Β (M ′ ∩ Σ Κ ).</a>
<a href="#18" id="18">By Lemma 6, {a mathematical formula}(I ′ ,J ′ ) satisfies (i), and by construction since {a mathematical formula}gap(M ′ ) ⊂ gap(M), it holds that {a mathematical formula}J ′ ∖ I ′ ⊂ J ∖ I.</a>
<a href="#19" id="19">However, this contradicts the assumption that {a mathematical formula}(I,J) satisfies (iii).</a>
<a href="#20" id="20">Therefore, M is maximal canonical, and hence {a mathematical formula}(I,J) Κ ∈ SST(P).Part (2).</a>
<a href="#21" id="21">Formally, one can show:{a mathematical formula} Note that the program P is stratified; it follows that brave reasoning under {a mathematical formula}SEQ-semantics is {a mathematical formula} Σ 3P-hard for disjunctive and stratified disjunctive programs; this proves the respective hardness parts of item (i) in Theorem 11.</a>
<a href="#22" id="22">For cautious reasoning from disjunctive and stratified disjunctive programs under {a mathematical formula}SEQ-semantics, {a mathematical formula} Π 3P-hardness of item (ii) in Theorem 11 is shown by a slight extension of the reduction, which is carried out in Appendix C.2 to derive this result for fixed truth value v.</a>
</body>
</html>