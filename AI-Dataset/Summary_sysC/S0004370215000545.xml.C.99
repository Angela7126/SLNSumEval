<html>
<head>
<meta name="TextLength" content="SENT_NUM:7, WORD_NUM:244">
</head>
<body bgcolor="white">
<a href="#0" id="0">We assume familiarity with the A* algorithm [2]: {a mathematical formula}g(s) denotes the cost of the path from the start state to s, and {a mathematical formula}f(s) is defined as {a mathematical formula}g(s)+h(s).</a>
<a href="#1" id="1">LSS-LRTwA* differs from LSS-LRTA* only in that Weighted A* (i.e., A* run with {a mathematical formula}f=g+wh) instead of A* is called in Line 2 of Algorithm 1, with the stop condition left intact.</a>
<a href="#2" id="2">As with LSS-LRTA* we assume the user provides an initial heuristic h, but, in addition, LSS-LRTwA* also requires an input weight w.</a>
<a href="#3" id="3">Let {a mathematical formula}f ⁎ be the f-value of state that would have been expanded in the {a mathematical formula}(k+1)-th iteration of the A* run.</a>
<a href="#4" id="4">More specifically, after the A* lookahead returns, the state chosen to move to, next, is given by:{a mathematical formula} where {a mathematical formula} Γ ={s ∈ Open| Δ (s) ≤ Δ (s ′ ),for all t ′ ∈ Open}, and {a mathematical formula} Δ (s) denotes {a mathematical formula}h(s) − h0(s), where {a mathematical formula}h0(s) is the initial h-value of s. daLSS-LRTA* has been shown to have good performance compared to LSS-LRTA* in path-finding tasks [14], outperforming it by one order of magnitude when time constraints are tight.</a>
<a href="#5" id="5">As such, we were interested to see whether incorporating weights could improve this algorithm.</a>
<a href="#6" id="6">As is the case with all other algorithms, wdaLSS-LRTA* is obtained from daLSS-LRTA* by simply multiplying the costs of the graph by w while running the Modified Dijkstra's algorithm.</a>
</body>
</html>