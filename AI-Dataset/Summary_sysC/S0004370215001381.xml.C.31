<html>
<head>
<meta name="TextLength" content="SENT_NUM:9, WORD_NUM:203">
</head>
<body bgcolor="white">
<a href="#0" id="0">Based on the mapped values, we define meta feature templates in {a mathematical formula}FM for dependency parsing.</a>
<a href="#1" id="1">The meta feature templates are listed in Table 2, where {a mathematical formula}fb is a base feature of {a mathematical formula}FB, {a mathematical formula}hp refers to the part-of-speech tag of the head and {a mathematical formula}hw refers to the surface word of the head.</a>
<a href="#2" id="2">Of the table, the first template uses the mapped value only, the second and third templates combine the value with the head information.</a>
<a href="#3" id="3">We remove any feature related to the surface form if the word is not one of the Top-K{sup:2} most frequent words in the training data.</a>
<a href="#4" id="4">This method can reduce the size of the feature sets.</a>
<a href="#5" id="5">The number of the meta features is relatively small.</a>
<a href="#6" id="6">It is possible to have {a mathematical formula}3×N(TB) for the first type, {a mathematical formula}3×N(TB)×N(POS) for the second type, and {a mathematical formula}3×N(TB)×N(WORD) for the third one, where {a mathematical formula}N(POS) refers to the number of part-of-speech tags, {a mathematical formula}N(WORD) refers to the number of words.</a>
<a href="#7" id="7">A meta tagger is implemented by following the learning framework.</a>
<a href="#8" id="8">Firstly, we perform word segmentation (if applicable) and POS tagging for the unlabeled data using the baseline tagger.</a>
</body>
</html>