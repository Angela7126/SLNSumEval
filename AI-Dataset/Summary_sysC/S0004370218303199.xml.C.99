<html>
<head>
<meta name="TextLength" content="SENT_NUM:15, WORD_NUM:556">
</head>
<body bgcolor="white">
<a href="#0" id="0">Now, for an EV to execute a task, its full range, calculated based on the battery level at the starting time of the task, must not be violated (Equation (11)) (i.e., in case trip requests are not within the range of a single battery load, the solver will not schedule them).</a>
<a href="#1" id="1">This can be explained by the fact that given the number of EVs remains stable and the number of tasks increases, the greedy algorithm already calculates a schedule which covers most of the EVs' availability and for this reason the local search cannot improve the solution a lot.</a>
<a href="#2" id="2">Thus, it terminates sooner compared to other settings where the space for improvement is larger.</a>
<a href="#3" id="3">As will be described in Section 7.2, when the Off-Greedy-Swap is combined with the MaxFlow and under some assumptions, it provides the optimal solution.</a>
<a href="#4" id="4">Thus, there was no point to combine the local search with battery swap.</a>
<a href="#5" id="5">Here we assume the full range of some EVs (i.e., 20% of the available EVs) not to be long enough to execute some of the longer trips.</a>
<a href="#6" id="6">Thus, the MaxFlow provides the upper limit of all feasible tasks (see more details on this in Section 7.2) (i.e., the Off-Greedy-Swap does not provide the optimal solution any more).</a>
<a href="#7" id="7">Given the execution time of the incremental and the greedy algorithms combined with local search, we argue that for a setting where the EVs carry different battery types, and when the number of tasks is larger than 1000, the incremental-MIP is the appropriate solution.</a>
<a href="#8" id="8">This is an interesting observation which can be explained as follows: 1) as the number of locations increases, the average number of EVs at one location at {a mathematical formula}t=0, decreases and therefore, the probability of an EV being able to execute a future task starting from a given location decreases, and 2) as the number of locations increases, the number of all possible trips increases exponentially, and therefore, EVs tend to spread around too much.</a>
<a href="#9" id="9">Thus, similarly to the previous point, the probability of an EV being able to execute a future task decreases.</a>
<a href="#10" id="10">Thus, the optimization of the number and the location of the pick-up and drop-off points is an important problem to be solved by any MoD company [21] as it is related to the cost of a possible MoD deployment (i.e., number and locations of stations), as well as its performance in terms of serviced tasks and profit.</a>
<a href="#11" id="11">Here, we evaluate our proposed battery swap optimization algorithm against a setting where no such optimization takes place, based on the tasks assigned by the scheduling algorithms to each EV.</a>
<a href="#12" id="12">In doing so, we assume all EVs to carry the same battery type, which has a discharge rate {a mathematical formula}conj=10 (i.e., at each time point, 10% of the battery is discharged) and the average trip duration to be 2 time points.</a>
<a href="#13" id="13">Also, the execution time for each Η is similar to the times presented for the optimal offline algorithms for the same number of tasks.</a>
<a href="#14" id="14">Thus, based on the number and the types of computers the MoD company possesses, Η and r can be chosen accordingly so as better accuracy in the prediction to be achieved,{sup:22} while the schedule to be calculated within the available time (i.e., the schedule of the tasks must be decided before the actual execution of them).</a>
</body>
</html>