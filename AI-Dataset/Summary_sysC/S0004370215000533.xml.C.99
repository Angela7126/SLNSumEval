<html>
<head>
<meta name="TextLength" content="SENT_NUM:6, WORD_NUM:220">
</head>
<body bgcolor="white">
<a href="#0" id="0">(Fact 1) Every propositional disjunctive rule of the form{a mathematical formula} can be equivalently transformed into a set of rules with implications in the bodies as follows{a mathematical formula}(Fact 2) An implication {a mathematical formula}p → q is strongly equivalent to the following aggregate atom{a mathematical formula} where two expressions are said to be strongly equivalent in Answer Set Programming if replacing one by another in any logic program does not change the answer sets.</a>
<a href="#1" id="1">He showed that, in the propositional case, there exists an aggregate context such that disjunctive programs can be converted into normal logic programs with aggregate atoms under this context.</a>
<a href="#2" id="2">We further proved that this is the case for all non-convex aggregate context, both in the propositional case and in the first-order case.</a>
<a href="#3" id="3">As a consequence, convex aggregates exactly draw a boundary of the expressive power as well as computational complexity of aggregates in normal logic programs.</a>
<a href="#4" id="4">That is, in the propositional case, the complexity of checking the answer set existence for normal logic programs with any convex aggregate atoms is NP-complete, which is the same as that for normal logic program without aggregates.</a>
<a href="#5" id="5">In contrast, the complexity of checking the answer set existence for normal logic programs under any non-convex aggregate context is {a mathematical formula} Σ 2P-complete, which is on a higher complexity level.</a>
</body>
</html>