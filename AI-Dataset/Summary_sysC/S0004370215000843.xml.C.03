<html>
<head>
<meta name="TextLength" content="SENT_NUM:31, WORD_NUM:819">
</head>
<body bgcolor="white">
<a href="#0" id="0">To this end we propose the KnowRob knowledge processing system for robots.</a>
<a href="#1" id="1">In this article, we discuss why the requirements of a robot knowledge processing system differ from what is commonly investigated in AI research, and propose to re-consider a KR system as a semantically annotated view on information and algorithms that are often already available as part of the robot's control system.</a>
<a href="#2" id="2">The KnowRob system has been released as open-source software and is being used on several robots performing complex object manipulation tasks.</a>
<a href="#3" id="3">To this end, a robot needs to supply the “ delta ” between the information in the (abstract, symbolic and often vague) instructions and the (specific, explicit, and often real-valued) parameters needed by its action components.</a>
<a href="#4" id="4">This is the approach taken by the KnowRob knowledge processing system that we present in this article.</a>
<a href="#5" id="5">Besides providing information at the right level of abstraction, this approach also alleviates the problem that the symbolic knowledge deviates from the continuous-level data since the former is computed from the latter at query time.</a>
<a href="#6" id="6">Symbolic representations are undeniably very useful for structuring the knowledge base by providing a “ type system ” and for performing logical and qualitative inference.</a>
<a href="#7" id="7">Our knowledge base only has a rather shallow symbolic representation of general concepts, while most information about the robot, its environment and perceptions is merely a “ virtual knowledge base ” computed at runtime from the data structures of the robot's control program.</a>
<a href="#8" id="8">One query to the knowledge base may require the use of different inference methods and different information sources.</a>
<a href="#9" id="9">These reasoners need access to the robot's task logs, to proprioceptive information about the gripper movements, to the environment model and to general knowledge about types of objects.</a>
<a href="#10" id="10">The concepts explained in the previous section have been implemented in the current version of the KnowRob robot knowledge processing system.</a>
<a href="#11" id="11">We approach the former by representing all knowledge in the system with respect to a common ontology.</a>
<a href="#12" id="12">We start with class-level knowledge about objects types, continue with object instances, the representation of positions and orientations, the computation of qualitative spatial relations, and the representation of the object geometry and their composition from parts.</a>
<a href="#13" id="13">The two most common reasoning tasks at the object class level are the selection of all subclasses of a generic concept (e.g.</a>
<a href="#14" id="14">Object instances can be composed in a part-of hierarchy to describe the composition of complex objects or kinematic structures such as robot parts or kitchen cabinets (Fig.</a>
<a href="#15" id="15">Since there is no structural difference between static objects in an environment map, movable objects detected by the robot's perception system, and parts of the robot, any kind of object information in the system can easily be compared.</a>
<a href="#16" id="16">Among the most important information for a robot are object poses (i.e.</a>
<a href="#17" id="17">The representation of object poses using MentalEvents provides the information for evaluating qualitative spatial relations between objects over time.</a>
<a href="#18" id="18">In particular fine manipulation or tool usage require detailed geometric information about the objects involved that is difficult to represent in a symbolic knowledge base.</a>
<a href="#19" id="19">This representation can automatically be generated from a URDF robot model and is again very similar to the models of composite objects in general (Fig.</a>
<a href="#20" id="20">The description of a concrete task usually derives specific sub-classes from the general action classes in the KnowRob ontology and annotates them with task-specific information about objects, tools, locations or timing.</a>
<a href="#21" id="21">The separation of task-specific classes in a task description and generic classes in the main action ontology allows to extract re-usable knowledge and put it into the main knowledge base, from where it can be inherited by other tasks derived from the same action classes.</a>
<a href="#22" id="22">A robot has to reason about the effects of its actions on the objects it manipulates.</a>
<a href="#23" id="23">While the declarative axioms are defined at the class level, the projection rules assert these relations for a concrete set of action and object instances.</a>
<a href="#24" id="24">This additional information is important for reasoning about how objects are transformed during a task and for identifying inconsistencies and knowledge gaps.</a>
<a href="#25" id="25">For formulating queries to this system and for integrating the results with the existing knowledge base, it is important to have all information in the same language.</a>
<a href="#26" id="26">To ground the abstract object descriptions in an instruction into actual objects in the environment, the robot needs to add actions for searching for these objects and for retrieving them from their storage locations.</a>
<a href="#27" id="27">Then, the system has to reason about likely locations given the available knowledge about the locations of other objects and their properties.</a>
<a href="#28" id="28">This query combines information from the action instances with the action and object ontology and the logged continuous movements.</a>
<a href="#29" id="29">This example shows how logical rules can be formulated in the knowledge base that are evaluated on the object components extracted using geometric analysis.</a>
<a href="#30" id="30">To further promote the use of knowledge representation and reasoning methods for robotics applications, we have created a web-based version of the KnowRob system called Open-EASE.</a>
</body>
</html>