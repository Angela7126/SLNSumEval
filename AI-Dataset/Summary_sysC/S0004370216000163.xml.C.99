<html>
<head>
<meta name="TextLength" content="SENT_NUM:13, WORD_NUM:541">
</head>
<body bgcolor="white">
<a href="#0" id="0">We observe that when we are looking for an Ε bounded solution, we can reuse the old path cost {a mathematical formula}v(s) for an underconsistent state s (selected for expansion), as long as {a mathematical formula}g Π (s)+h(s) ≤ Ε ⋅ (v(s)+h(s)).</a>
<a href="#1" id="1">This stems from the fact that for an underconsistent state s selected for expansion, {a mathematical formula}v(s)+h(s) is a lower bound on the solution cost through s, as {a mathematical formula}v(s) holds previous shortest path cost (from {a mathematical formula}sstart) and {a mathematical formula}h(s) is a consistent heuristic.</a>
<a href="#2" id="2">If the current path to s (from {a mathematical formula}sstart) satisfies the bound on {a mathematical formula}v(s)+h(s), any state {a mathematical formula}s ′ that uses {a mathematical formula}v(s) to compute its {a mathematical formula}g(s ′ ) will never underestimate the actual solution cost by more than the Ε factor.</a>
<a href="#3" id="3">In other words, even if we compute the new solution using the old{a mathematical formula}v(s), the obtained solution cost will be less than or equal to {a mathematical formula} Ε ⋅ g ⁎ (sgoal), as the old paths have not deteriorated beyond the chosen bound.</a>
<a href="#4" id="4">LPA* propagates this cost change until {a mathematical formula}Key(sgoal) becomes the minimum Key value in OPEN, i.e., it expands E and H before returning the previous solution as the minimum cost solution (Fig.</a>
<a href="#5" id="5">The cost of every edge along this path is added to {a mathematical formula}g Π (s) (the states are added to {a mathematical formula} Π (s)).</a>
<a href="#6" id="6">Thus, when s is truncated, the path followed in {a mathematical formula}ComputeGpi(s) routine is a valid one, with cost {a mathematical formula}g Π (s), stored in {a mathematical formula} Π (s).Now, let us assume that the Lemma statement holds for all prior truncation, and we will prove it for a current underconsistent state {a mathematical formula}s ′ which is truncated.</a>
<a href="#7" id="7">If the path followed by {a mathematical formula}ComputeGpi(s ′ ) does not visit any truncated state then the Lemma is valid (from the earlier case).</a>
<a href="#8" id="8">Whereas, if it encounters a state {a mathematical formula}s ″ ∈ TRUNCATED, we augment {a mathematical formula}g Π (s ′ ) with {a mathematical formula}g Π (s ″ ) and concatenate {a mathematical formula} Π (s ″ ) to {a mathematical formula} Π (s ′ ).</a>
<a href="#9" id="9">As {a mathematical formula}s ″ ∈ TRUNCATED, {a mathematical formula} Π (s ″ ) is valid and has cost {a mathematical formula}g Π (s ″ ) (from induction hypothesis), which means {a mathematical formula} Π (s ′ ) is valid and has cost {a mathematical formula}g Π (s ′ ).</a>
<a href="#10" id="10">This optimization ensures that D* Lite does need not to alter the Key values of states that already in OPEN (i.e., no reordering required), and also that the Key values of newly generated states maintain the lower bound on the total path cost (note that, {a mathematical formula}h(slast,sstart) ≤ c ⁎ (slast,sstart)).</a>
<a href="#11" id="11">TLPA* truncates the cost propagation for an underconsistent state s (selected for expansion), if {a mathematical formula}g Π (s)+h(s) ≤ Ε ⋅ (v(s)+h(s)).</a>
<a href="#12" id="12">In ATD*, when an underconsistent state s is selected for expansion for the first time, we compute its {a mathematical formula}g Π value and check whether {a mathematical formula}g Π (s)+h(s) ≤ Ε 2 ⋅ (v(s)+h(s)), in the same manner as TLPA*.</a>
</body>
</html>