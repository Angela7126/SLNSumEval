<html>
<head>
<meta name="TextLength" content="SENT_NUM:17, WORD_NUM:550">
</head>
<body bgcolor="white">
<a href="#0" id="0">Next, when D is selected for expansion, we find that {a mathematical formula}g Π (D)+h(D) ≤ Ε ⋅ (v(D)+h(D)), as {a mathematical formula}g Π (D)=3 and {a mathematical formula}v(D)=2, i.e., D satisfies the truncation condition.</a>
<a href="#1" id="1">An underconsistent state s having{a mathematical formula}Key(s) ≤ Key(u), ∀ u ∈ OPENis truncated (removed from OPEN without expansion) if{a mathematical formula}g Π (s)+h(s) ≤ Ε ⋅ (v(s)+h(s)).</a>
<a href="#2" id="2">A state s having{a mathematical formula}Key(s) ≤ Key(u), ∀ u ∈ OPENis truncated if{a mathematical formula}g Π (sgoal) ≤ Ε ⋅ Key1(s).</a>
<a href="#3" id="3">Also, if any state s is truncated usingRule 2, all states{a mathematical formula}s ′ ∈ OPENare truncated as,{a mathematical formula} ∀ s ′ ∈ OPEN,Key1(s ′ ) ≥ Key1(s).</a>
<a href="#4" id="4">ComputePath in TLPA* uses the {a mathematical formula}g Π values to apply the truncation rules.</a>
<a href="#5" id="5">Before each expansion, {a mathematical formula}g Π (sgoal) is computed to check whether Rule 2 can be applied.</a>
<a href="#6" id="6">If the check at line 21 (Algorithm 3) is satisfied, ComputePath terminates with solution cost equal to {a mathematical formula}g Π (sgoal).</a>
<a href="#7" id="7">When an underconsistent state s is selected for expansion, its {a mathematical formula}g Π (s) is used to check whether Rule 1 can be applied.</a>
<a href="#8" id="8">If the check at line 30 is satisfied, s is truncated, otherwise it expanded in the same manner as LPA*.</a>
<a href="#9" id="9">Unfortunately, this only works for the truncation of overconsistent states, and not for underconsistent states.</a>
<a href="#10" id="10">This is due to the fact that in AD*, heuristic values for overconsistent states are inflated, whereas an underconsistent state uses an uninflated heuristic.</a>
<a href="#11" id="11">Therefore, when an overconsistent {a mathematical formula}s1 is selected for expansion (in AD*), we have {a mathematical formula}g(s1) ≤ Ε 1 ⋅ g ⁎ (s1), but when an underconsistent state ({a mathematical formula}s2) is selected for expansion, there is no guarantee that {a mathematical formula}v(s2) ≤ Ε 1 ⋅ g ⁎ (s2).</a>
<a href="#12" id="12">Now, if we apply the truncation rule (say Truncation Rule 1) to a state s having {a mathematical formula}v(s) ≥ Ε 1 ⋅ g ⁎ (s), the total path cost {a mathematical formula}C ≤ Ε 2 ⋅ (v(s)+h(s)) does not ensure that {a mathematical formula}C ≤ Ε 1 ⋅ Ε 2 ⋅ (g ⁎ (s)+h(s)).</a>
<a href="#13" id="13">TLPA* truncates the cost propagation for an underconsistent state s (selected for expansion), if {a mathematical formula}g Π (s)+h(s) ≤ Ε ⋅ (v(s)+h(s)).</a>
<a href="#14" id="14">In ATD*, when an underconsistent state s is selected for expansion for the first time, we compute its {a mathematical formula}g Π value and check whether {a mathematical formula}g Π (s)+h(s) ≤ Ε 2 ⋅ (v(s)+h(s)), in the same manner as TLPA*.</a>
<a href="#15" id="15">A state s having{a mathematical formula}Key(s) ≤ Key(u), ∀ u ∈ OPENis truncated if{a mathematical formula}g Π (sgoal) ≤ Ε 2 ⋅ Key1(s)and if either{a mathematical formula}v(s)>g(s)or{a mathematical formula}s ∈ MARKED.Also, if any state s is truncated usingRule 2, all states{a mathematical formula}s ′ ∈ OPENare truncated as{a mathematical formula} ∀ s ′ ∈ OPEN,Key1(s ′ ) ≥ Key1(s).</a>
<a href="#16" id="16">InComputePath, any state s selected for expansion/truncation (i.e., if{a mathematical formula}Key(s) ≤ Key(u), ∀ u ∈ OPENat line 30,Algorithm 8) satisfies,{a mathematical formula}g(s) ≤ Ε 1 ⋅ g ⁎ (s)if{a mathematical formula}v(s) ≥ g(s)and{a mathematical formula}v(s) ≤ Ε 1 ⋅ g ⁎ (s)if{a mathematical formula}v(s)<g(s)and{a mathematical formula}s ∈ MARKED.While this can be proved in the same manner as Lemma 5, we may note two significant differences.</a>
</body>
</html>