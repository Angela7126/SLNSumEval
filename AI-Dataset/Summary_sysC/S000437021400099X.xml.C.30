<html>
<head>
<meta name="TextLength" content="SENT_NUM:10, WORD_NUM:243">
</head>
<body bgcolor="white">
<a href="#0" id="0">k-ary unbiased black-box algorithms can now be described via the scheme of Algorithm 2.</a>
<a href="#1" id="1">The k-ary unbiased black-box complexity of some class of functions {a mathematical formula}F is the complexity of {a mathematical formula}F with respect to all k-ary unbiased black-box algorithms.</a>
<a href="#2" id="2">Suppose for a problem P there exists a black-box algorithm A that, with constant success probability, solves P in s iterations (that is, queries an optimal solution within s queries).</a>
<a href="#3" id="3">Then the black-box complexity of P is at most {a mathematical formula}O(s).</a>
<a href="#4" id="4">In this section we prove that in the unbiased black-box model, too, there are {a mathematical formula}NP-hard problems whose optimization version have a small polynomial black-box complexity.</a>
<a href="#5" id="5">We consider the Partition problem, which is a well known, and probably one of the most famous, {a mathematical formula}NP-hard problem, cf.</a>
<a href="#6" id="6">There is no one best way of how to consider {a mathematical formula}Partition ≠ as an optimization problem.</a>
<a href="#7" id="7">For two different models of {a mathematical formula}Partition ≠ , different with respect to the objective function, we show (Theorem 4, Theorem 6) that the unary unbiased black-box complexity is {a mathematical formula}O(nlog ⁡ n).</a>
<a href="#8" id="8">That is, we give a unary unbiased black-box algorithm which solves any instance of {a mathematical formula}Partition ≠ in {a mathematical formula}O(nlog ⁡ n) queries.</a>
<a href="#9" id="9">The unary unbiased black-box complexity of{a mathematical formula}Partition ≠ modeled via the signed objective functions{a mathematical formula}fIis{a mathematical formula}O(nlog ⁡ n), where{a mathematical formula}n:=|I|denotes the size of the input set{a mathematical formula}I.</a>
</body>
</html>