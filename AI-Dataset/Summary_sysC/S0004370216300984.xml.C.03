<html>
<head>
<meta name="TextLength" content="SENT_NUM:16, WORD_NUM:348">
</head>
<body bgcolor="white">
<a href="#0" id="0">First we randomly selected 3 out of the top 7 solvers from the previous competition (participants of the Sequential and Application {a mathematical formula}SAT+UNSAT Tracks of the SAT Competition 2014).</a>
<a href="#1" id="1">In this year's SAT Race we did five runs for each solver benchmark pair.</a>
<a href="#2" id="2">A common way of designing a parallel SAT solver is the so called portfolio approach.</a>
<a href="#3" id="3">A portfolio is a collection of SAT solvers (different SAT solvers or different versions of the same SAT solver).</a>
<a href="#4" id="4">All current state-of-the-art parallel SAT solvers are based on this approach (judging by the results of recent SAT competitions).</a>
<a href="#5" id="5">A portfolio solver winning the competition can be very demotivating for the developers of core solvers since someone else is winning with their solver.</a>
<a href="#6" id="6">In the 2014 Sat Competition portfolio solvers were not allowed to participate in any of the tracks.</a>
<a href="#7" id="7">Solvers using only 32 worker threads in the 2015 SAT Race were Plingeling and one version of Glucose (glucose-default).</a>
<a href="#8" id="8">In the 2015 SAT Race we introduced a new track for solvers supporting interactive incremental SAT solving â€“ the Incremental Library Track (ILT).</a>
<a href="#9" id="9">A benchmark for the ILT is an application (and inputs for it) that uses SAT solvers interactively.</a>
<a href="#10" id="10">Users who need to use incremental SAT solvers in their applications would strongly benefit from such a unified interface.</a>
<a href="#11" id="11">ipasir_val In the case that ipasir_solve found a satisfying assignment and therefore the solver is in the SAT state we can call the ipasir_val function to retrieve the value of a variable (or literal).</a>
<a href="#12" id="12">One of the adapted SAT solvers included in the package was the Java SAT solver Sat4j.</a>
<a href="#13" id="13">The Portfolio application creates four instances of the incremental solver and adds all the input clauses to each of them.</a>
<a href="#14" id="14">Therefore this benchmark application makes it possible to compare the incremental SAT solvers that are part of the IPASIR framework on the CNFs of the BMC workflow.</a>
<a href="#15" id="15">Thanks to the fact, that we performed five runs of each solver on each benchmark in the Main Track we can now analyze the difference in the performance of the solvers across these five runs.</a>
</body>
</html>