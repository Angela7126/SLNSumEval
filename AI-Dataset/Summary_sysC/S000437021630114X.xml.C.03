<html>
<head>
<meta name="TextLength" content="SENT_NUM:57, WORD_NUM:1050">
</head>
<body bgcolor="white">
<a href="#0" id="0">{a mathematical formula}A ⁎ search [3] uses admissible heuristics that provide a lower bound on the distance from a state to the goal to reduce the number of expanded states.</a>
<a href="#1" id="1">{a mathematical formula}V is a set of state variables, and every variable {a mathematical formula}v ∈ V has an associated finite domain{a mathematical formula}Dv.</a>
<a href="#2" id="2">We denote {a mathematical formula}S to the set of all states.</a>
<a href="#3" id="3">Thus, a partial state p can be defined as a set of facts and is associated with the set of states that satisfy the partial assignment, {a mathematical formula}{s|p[v]=s[v] ∀ v ∈ Vp}.</a>
<a href="#4" id="4">{a mathematical formula}I is the initial state and {a mathematical formula}G is the partial state that defines the goals.</a>
<a href="#5" id="5">An operator {a mathematical formula}o ∈ O is applicable (in progression) in a state s if {a mathematical formula}pre(o) ⊆ s.</a>
<a href="#6" id="6">The set of operators {a mathematical formula}O is represented with one or more Transition Relations (TRs).</a>
<a href="#7" id="7">{a mathematical formula}Closed ⁎ := ⋁ iClosedi is the set of all expanded states.</a>
<a href="#8" id="8">The forward search starts at the initial state, {a mathematical formula}I, and advances towards the goal states, {a mathematical formula}S ⋆ .</a>
<a href="#9" id="9">The backward search performs regression from {a mathematical formula}S ⋆ towards {a mathematical formula}I.</a>
<a href="#10" id="10">{a mathematical formula}</a>
<a href="#11" id="11">As usual with {a mathematical formula}A ⁎ , {a mathematical formula}BDDA ⁎ expands states in ascending order of {a mathematical formula}f=g+h.</a>
<a href="#12" id="12">2a) because all the states with {a mathematical formula}f=f ⁎ are expanded.</a>
<a href="#13" id="13">2b shows how List {a mathematical formula}BDDA ⁎ expands the states in exactly the same way as Matrix {a mathematical formula}BDDA ⁎ .</a>
<a href="#14" id="14">2 with {a mathematical formula}g=1.</a>
<a href="#15" id="15">To inform {a mathematical formula}BDDA ⁎ , Gamer uses symbolic partial pattern databases.</a>
<a href="#16" id="16">If all abstract states with a solution cost of d or less have been expanded, then {a mathematical formula}d+1 is an admissible estimation for all non-expanded states.</a>
<a href="#17" id="17">Thus, if sets of states are described as functions over the set of variables x, TRs also use a set of auxiliary variables, {a mathematical formula}x ′ , to represent successor states.</a>
<a href="#18" id="18">We call this method {a mathematical formula}CT.</a>
<a href="#19" id="19">Algorithm 2 shows how to compute the image of a BDD using {a mathematical formula}CT.</a>
<a href="#20" id="20">{a mathematical formula}</a>
<a href="#21" id="21">This keeps the property of {a mathematical formula}CT that only states that can be expanded by some operator are propagated down the tree even if the TRs of the individual operators are merged.</a>
<a href="#22" id="22">State-invariant constraintLet c be a logical formula and let {a mathematical formula}Sfw,Sbw ⊆ S be the set of states reachable from the initial state and from which a goal state can be reached, respectively.</a>
<a href="#23" id="23">The use of mutexes in explicit-state search is straightforward: simply prune every (partial) state s such that facts {a mathematical formula}fi,fj ∈ s are mutex.</a>
<a href="#24" id="24">Hence, we use two cBDDs, {a mathematical formula}cBDDfw for forward and {a mathematical formula}cBDDbw for backward search.</a>
<a href="#25" id="25">As c was satisfied by every {a mathematical formula}s ∈ S, c is relevant for o in regression.</a>
<a href="#26" id="26">As c was satisfied by every {a mathematical formula}s ∈ S, c is relevant for o in progression.</a>
<a href="#27" id="27">Using {a mathematical formula}Toc with relevant constraints suffices to guarantee that the successor set does not contain invalid states as long as the source set does not either.</a>
<a href="#28" id="28">In progression this is always the case, as {a mathematical formula}I is single valid state in any solvable instance.</a>
<a href="#29" id="29">Assume WLOG that {a mathematical formula}fi=f1.</a>
<a href="#30" id="30">If {a mathematical formula}f2 ∈ eff(o), then {a mathematical formula}f2 ∉ pre(o).</a>
<a href="#31" id="31">{a mathematical formula}f2 ∈ o(s) because either {a mathematical formula}f2 ∈ eff(o) or {a mathematical formula}f2 ∈ s.</a>
<a href="#32" id="32">Assume WLOG that {a mathematical formula}fi=f1.</a>
<a href="#33" id="33">{a mathematical formula} Υ 1 ∈ Vpre(o).</a>
<a href="#34" id="34">As o must be applicable in s, {a mathematical formula}f1 ∈ pre(o).</a>
<a href="#35" id="35">Therefore, unlike the case of search in the original state space, {a mathematical formula}MBDD does not perform all the pruning possible.</a>
<a href="#36" id="36">Consider the set of states associated to an abstract state, {a mathematical formula}Si Α , that corresponds to all the possible assignments that the abstracted variables may take.</a>
<a href="#37" id="37">Partial constraints may be violated for some states in {a mathematical formula}Si Α but not for others.</a>
<a href="#38" id="38">Consider the abstract state {a mathematical formula}I Α , {a mathematical formula} 〈 vp=A,vT=A 〉 .</a>
<a href="#39" id="39">Obviously we cannot prune {a mathematical formula}I Α .</a>
<a href="#40" id="40">And still, for some values of the time variable {a mathematical formula}vt, the state would be invalid.</a>
<a href="#41" id="41">The original TR represents all the pairs of states {a mathematical formula}s,t such that there exists a transition {a mathematical formula}s → ot in the original state space.</a>
<a href="#42" id="42">All planners used in our experiment use the {a mathematical formula}h2 invariant analysis to remove operators and simplify the planning task before starting the search [57].</a>
<a href="#43" id="43">Originally, Gamer used unidirectional uniform-cost search and {a mathematical formula}BDDA ⁎ with symbolic Pattern Databases.</a>
<a href="#44" id="44">{a mathematical formula}TR1 is our baseline, Gamer's original image computation.</a>
<a href="#45" id="45">{a mathematical formula}TR1+dominates the baseline.</a>
<a href="#46" id="46">{a mathematical formula}CT20dominates{a mathematical formula}TR1+.</a>
<a href="#47" id="47">If the maximum TR size is set to 1, no TRs are aggregated and the algorithm behaves as the original {a mathematical formula}TR1.</a>
<a href="#48" id="48">In the rest of the experiments we will use the {a mathematical formula}UT100kDT image computation.</a>
<a href="#49" id="49">The results are similar to those in the bidirectional search case, with {a mathematical formula}UT100kDT being the best configuration for image computation in almost every domain and the new image computation approaches outperforming the baseline, {a mathematical formula}TR1.</a>
<a href="#50" id="50">Table 5 evaluates our symbolic search enhancements in {a mathematical formula}BDDA ⁎ with symbolic PDBs.</a>
<a href="#51" id="51">Image computation methods improve {a mathematical formula}BDDA ⁎ as much as bidirectional symbolic uniform-cost search.</a>
<a href="#52" id="52">The overall results again show that the use of state invariants helps to improve results of {a mathematical formula}A ⁎ as well.</a>
<a href="#53" id="53">Gamer and cGamer use bidirectional uniform-cost search and {a mathematical formula}BDDA ⁎ with symbolic PDBs.</a>
<a href="#54" id="54">{a mathematical formula}BDDA ⁎ is also superior when considering standalone planners, but it is still behind the optimistic results of the explicit-state search portfolio.</a>
<a href="#55" id="55">Well-informed heuristics, such as LM-cut, increase the performance of explicit-state search and the total performance is slightly better to that of symbolic forward search and similar to symbolic {a mathematical formula}BDDA ⁎ with PDB heuristics.</a>
<a href="#56" id="56">Further experiments on {a mathematical formula}SymBA ⁎ have shown that, while abstraction heuristics may improve the performance of bidirectional search on particular domains, symbolic bidirectional uniform-cost search is yet a state-of-the-art planner [66].</a>
</body>
</html>