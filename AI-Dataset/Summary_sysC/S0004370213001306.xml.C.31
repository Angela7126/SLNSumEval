<html>
<head>
<meta name="TextLength" content="SENT_NUM:30, WORD_NUM:743">
</head>
<body bgcolor="white">
<a href="#0" id="0">1.</a>
<a href="#1" id="1">A novel model of multi-agent team performance, the weighted synergy graph model, where agents are vertices in a connected weighted graph, edges represent how well agents work together, and agent capabilities are Normally-distributed variables;</a>
<a href="#2" id="2">In order to find the Δ -optimal team {a mathematical formula}A Δ ⁎ , we want to create a model of how well agents work together at the task.</a>
<a href="#3" id="3">We have detailed how task-based relationships are represented with the compatibility function Φ , which uses the distance between agent vertices in a graph, and how agent capabilities are represented as Normally-distributed variables.</a>
<a href="#4" id="4">In this section, we formally define the weighted synergy graph and how it is used to compute the performance of a team of agents at a task.</a>
<a href="#5" id="5">Definition 3.8</a>
<a href="#6" id="6">We use the graph structure to model the synergy among agents, specifically using the edges (that connect two agents) to compute the shortest distance between pairs of agents, and hence the pairwise synergy is the building block for the synergy of a team of agents.</a>
<a href="#7" id="7">Using the pairwise synergy function, we now define the performance of a team of agents: The synergy{a mathematical formula}S(A) of a set of agents {a mathematical formula}A ⊆ A in a weighted synergy graph is the average of the pairwise synergy of its components, i.e., {a mathematical formula}1(|A|2) ⋅ ∑ {ai,aj} ∈ AS2(ai,aj).</a>
<a href="#8" id="8">While the synergy function {a mathematical formula}S is linear and takes the average of pairwise synergy, many interesting agent relationships are modeled.</a>
<a href="#9" id="9">Fig.</a>
<a href="#10" id="10">4 shows an example of a weighted synergy graph with five agents in a rescue task.</a>
<a href="#11" id="11">We defer how a weighted synergy graph is learned from observations of performance to the next section.</a>
<a href="#12" id="12">In this section, we explain how to use a weighted synergy graph to form the Δ -optimal team for the task, i.e., the team {a mathematical formula}A Δ ⁎ such that {a mathematical formula}P(PA Δ ⁎ ⩾ u)= Δ and {a mathematical formula}P(PA ⩾ u) ⩽ Δ ∀ A ⊆ A.</a>
<a href="#13" id="13">Using the weighted synergy graph model and the synergy equations, we can compute the synergy of a team of agents {a mathematical formula}A ⊆ A.</a>
<a href="#14" id="14">However, the synergy computed is a Normally-distributed variable, and we need to rank such variables to choose one possible team over another.</a>
<a href="#15" id="15">To compute the bounds of a team given a synergy graph, CalculateBounds uses the following heuristic.</a>
<a href="#16" id="16">The minimum and maximum pairwise distance between vertices in the weighted synergy graph (excluding pairs of the selected team {a mathematical formula}Anext) are computed, as well as the maximum and minimum agent capabilities (excluding the agents in {a mathematical formula}Anext).</a>
<a href="#17" id="17">The maximum bound is computed by using the synergy function {a mathematical formula}S and assuming that all distances with undetermined agents are the minimum distance, and agent capabilities are maximum.</a>
<a href="#18" id="18">Similarly, the minimum bound is computed using the maximum distances and minimum agent capabilities.</a>
<a href="#19" id="19">To evaluate both team formation algorithms, and compare their performance (amount of the search space explored, and value of the formed team), we generated random weighted synergy graphs.</a>
<a href="#20" id="20">We varied the number of agents in the graph from 10 to 15, and randomly created 1000 connected weighted graph structures where each edge weight varied from 1 to 5.</a>
<a href="#21" id="21">For each weighted graph structure generated, the agent capabilities {a mathematical formula}Ci ∼ N( Μ i, Σ i2) were also randomly generated, such that {a mathematical formula} Μ i ∈ (50,150) and {a mathematical formula} Σ i2 ∈ (0,1002).</a>
<a href="#22" id="22">The size of the desired team was set to {a mathematical formula} ⌊ N2 ⌋ , so that the search space is as large as possible.</a>
<a href="#23" id="23">We have formally defined the weighted synergy graph and our team formation algorithm to approximate the Δ -optimal team.</a>
<a href="#24" id="24">However, the team formation algorithm assumes the existence of a weighted synergy graph.</a>
<a href="#25" id="25">In this section, we contribute our learning algorithm that learns a weighted synergy graph using only observations of the performance of teams of agents in {a mathematical formula}A.</a>
<a href="#26" id="26">Algorithm 3 shows the pseudo-code of our learning algorithm.</a>
<a href="#27" id="27">The algorithm first generates a random weighted graph structure with {a mathematical formula}N=|A| vertices, and the function LearnCapabilities estimates the capabilities of the agents using the weighted graph structure and observation set O.</a>
<a href="#28" id="28">We elaborate on LearnCapabilities later in this section.</a>
<a href="#29" id="29">The weighted graph structure and estimated capabilities then form an initial guess S of the weighted synergy graph, and the log-likelihood of the observations in O given S is computed with LogLikelihood.</a>
</body>
</html>