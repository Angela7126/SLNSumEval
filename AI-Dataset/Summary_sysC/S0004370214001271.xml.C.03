<html>
<head>
<meta name="TextLength" content="SENT_NUM:19, WORD_NUM:404">
</head>
<body bgcolor="white">
<a href="#0" id="0">{a mathematical formula}M ⁎ is guaranteed to find the optimal path.</a>
<a href="#1" id="1">Simulation results are presented that show that {a mathematical formula}M ⁎ has better performance than existing optimal multirobot path planning algorithms.</a>
<a href="#2" id="2">An underlying planner, such as {a mathematical formula}A ⁎ , is then employed to find an optimal path in the search space.</a>
<a href="#3" id="3">In this section the {a mathematical formula}M ⁎ algorithm will be described in detail.</a>
<a href="#4" id="4">{a mathematical formula}M ⁎ is an implementation of subdimensional expansion for multirobot path planning when the configuration space of each robot can be described by a graph.</a>
<a href="#5" id="5">{a mathematical formula}M ⁎ is most easily described as a set of modifications to {a mathematical formula}A ⁎ .</a>
<a href="#6" id="6">The collision sets of each vertex must be updated whenever {a mathematical formula}M ⁎ finds a new path to a robot – robot collision.</a>
<a href="#7" id="7">As part of {a mathematical formula}M ⁎ , {a mathematical formula}A ⁎ is run on the search graph {a mathematical formula}Gsch.</a>
<a href="#8" id="8">Therefore, {a mathematical formula}M ⁎ will never return a path passing through a state at which robots collide.</a>
<a href="#9" id="9">the configuration graph G contains an optimal path {a mathematical formula} Π ⁎ (vs,vf).</a>
<a href="#10" id="10">Therefore, {a mathematical formula}M ⁎ will never return a suboptimal path as long as case 2 holds.</a>
<a href="#11" id="11">If case 1 holds, then {a mathematical formula}M ⁎ will find the optimal path in finite time, unless case 2 also holds (Lemma 3).</a>
<a href="#12" id="12">Therefore, after finite time, only case 1 will hold, implying that {a mathematical formula}M ⁎ will find the optimal path in finite time.</a>
<a href="#13" id="13">{a mathematical formula}M ⁎ is complete and optimal.</a>
<a href="#14" id="14">If the configuration graph G does not contain an optimal path, then {a mathematical formula}M ⁎ will terminate in finite time without returning an invalid path (Lemma 1).</a>
<a href="#15" id="15">If G does contain an optimal path, then the search graph must always contain either the optimal path, or an unexplored path which costs no more than the optimal path (Lemma 7), which implies that then {a mathematical formula}M ⁎ will find the optimal path in finite time (Lemma 2).</a>
<a href="#16" id="16">{a mathematical formula}M ⁎ will thus find the optimal path in finite time, if one exists, or terminate in finite time if no path exists.</a>
<a href="#17" id="17">Therefore, {a mathematical formula}M ⁎ is complete and optimal.</a>
<a href="#18" id="18">The mean path cost and mean makespan (time until all robots reach their goals) of paths found by PPAS and {a mathematical formula}M ⁎ variants are shown in Fig.</a>
</body>
</html>