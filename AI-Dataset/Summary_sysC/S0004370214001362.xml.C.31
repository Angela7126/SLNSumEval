<html>
<head>
<meta name="TextLength" content="SENT_NUM:22, WORD_NUM:502">
</head>
<body bgcolor="white">
<a href="#0" id="0">Online recommender systems are an important tool that people use to find new music.</a>
<a href="#1" id="1">To generate recommendations, many systems rely on tag representations of music.</a>
<a href="#2" id="2">Such systems, however, suffer from tag sparsity, whereby tracks lack a strong tag representation.</a>
<a href="#3" id="3">Current state-of-the-art techniques that reduce this sparsity problem create hybrid systems using multiple representations, for example both content and tags.</a>
<a href="#4" id="4">In this paper we present a novel hybrid representation that augments sparse tag representations without introducing content directly.</a>
<a href="#5" id="5">Our hybrid representation integrates pseudo-tags learned from content into the tag representation of a track, and a dynamic weighting scheme limits the number of pseudo-tags that are allowed to contribute.</a>
<a href="#6" id="6">Experiments demonstrate that this method allows tags to remain dominant when they provide a strong representation, and pseudo-tags to take over when tags are sparse.</a>
<a href="#7" id="7">We show that our approach significantly improves recommendation quality not only for queries with a sparse tag representation but also those that are well-tagged.</a>
<a href="#8" id="8">Our hybrid approach has potential to be extended to other music representations that are used for recommendation but suffer from data sparsity, such as user profiles.</a>
<a href="#9" id="9">Using this method of combining pseudo-tags with tags, we are now able to represent every track by a hybrid vector h. For tracks which are well-tagged, the tag vector will be the main contributor to h, and therefore allow recommendation to be made using the strengths of tag representation.</a>
<a href="#10" id="10">For weakly-tagged tracks, any tags which they have will not be ignored, but instead enhanced by the inclusion of pseudo-tags in h. Recommendations are made using this hybrid representation based on cosine similarity, and will be referred to as Hybrid.</a>
<a href="#11" id="11">The reason that Hybrid is able to achieve this higher quality is because of the pseudo-tags that are embedded into the representation.</a>
<a href="#12" id="12">These pseudo-tags allow the hybrid approach to have a distinct advantage when less tags are available, instead of reverting to the random recommendations of Tag.</a>
<a href="#13" id="13">The quality of the PseudoTag method backing up the hybrid approach is illustrated by the dashed black line, and the quality of Content is illustrated by the dashed grey line.</a>
<a href="#14" id="14">These results show that the ability to learn correct pseudo-tags can have a positive impact on recommendation quality regardless of how many tags a track has.</a>
<a href="#15" id="15">The first stage of creating our hybrid representation is to generate pseudo-tags using content-based similarity, and so we aim to examine the quality of these pseudo-tags.</a>
<a href="#16" id="16">Our method for generating pseudo-tags is based on summarising the tag vectors of the K nearest neighbours of a track using Eq.</a>
<a href="#17" id="17">(12).</a>
<a href="#18" id="18">These neighbours are generated by a content-based recommender system using the MFS representation.</a>
<a href="#19" id="19">When auto-tagging is used for suggesting tags to users, or providing a permanent tag representation, it is normal to suggest only 10 or 20 tags.</a>
<a href="#20" id="20">For our task of creating a hybrid representation however, anywhere from 0 to 100 pseudo-tags may be required, depending on how well-tagged a track is.</a>
<a href="#21" id="21">Regardless of how many pseudo-tags are required, we need them to be as precise as possible.</a>
</body>
</html>