<html>
<head>
<meta name="TextLength" content="SENT_NUM:7, WORD_NUM:252">
</head>
<body bgcolor="white">
<a href="#0" id="0">Given:{a mathematical formula} 〈 P ˜ ,M ˜ ,C 〉 , where {a mathematical formula}P ˜ = 〈 O,so,g 〉 is a planning problem, {a mathematical formula}M ˜ is an incomplete domain available to the planner, and {a mathematical formula}C is a set of successful solution plans (or plan cases) that are correct with respect to the complete model {a mathematical formula}M. Specifically, each plan case provides a plan {a mathematical formula}pi for problem {a mathematical formula}Pi= 〈 Oi,s0i,gi 〉 that is correct with respect to {a mathematical formula}M. A plan case {a mathematical formula}ci is composed of a triple {a mathematical formula}ci= 〈 s0i,pi,gi 〉 .</a>
<a href="#1" id="1">It is composed of three parts: (a) incomplete action models, (b) the problem including the initial state {a mathematical formula}s0 and goals g, and (c) a set of plan cases.</a>
<a href="#2" id="2">In Example 3, if we set Δ to be 2 and 1, the results are shown below (frequent plan fragments are partitioned by commas):{a mathematical formula}</a>
<a href="#3" id="3">In the first phase, we learn macro-operators and action models with the given plan cases {a mathematical formula}C and the incomplete domain {a mathematical formula}M ˜ .</a>
<a href="#4" id="4">In the second phase, we exploit the learned macro-operators and action models in solving new planning problems.</a>
<a href="#5" id="5">In the subsequent subsections, we first address the learning phase in detail, and then describe the planning phase briefly.</a>
<a href="#6" id="6">We show the average CPU time of ML-CBP, RIM, OAKPlan and ARMS over 100 planning problems with respect to different number of plan cases in Fig.</a>
</body>
</html>