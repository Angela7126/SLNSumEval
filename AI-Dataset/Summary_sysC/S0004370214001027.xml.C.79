<html>
<head>
<meta name="TextLength" content="SENT_NUM:9, WORD_NUM:483">
</head>
<body bgcolor="white">
<a href="#0" id="0">Such subformula {a mathematical formula}E will be referred to as a Minimal Equivalent Subformula (MES) of {a mathematical formula}F. Intuitively, an MES of {a mathematical formula}F constitutes the result of removal of all redundant clauses from {a mathematical formula}F — these are the clauses whose removal does not change the set of models of {a mathematical formula}F.</a>
<a href="#1" id="1">In the implementation of the MES algorithms evaluated in this paper SelectRemoveClause returns clauses in the order of appearance in the input formula, however, clearly, the development of intelligent clause-selection heuristics for MES computation is an important objective, and is a subject of future research.</a>
<a href="#2" id="2">For instance in Algorithm 1 once we obtain a model Μ of {a mathematical formula}E ∪ S ∪ {¬c}, we modify Μ to {a mathematical formula} Μ l by flipping the value of a literal of {a mathematical formula}l ∈ c and look for a clause {a mathematical formula}d ∈ S so that {a mathematical formula}(E ∪ S ∖ {d})[ Μ l]=1 and {a mathematical formula}d[ Μ l]=0 (note that {a mathematical formula}c[ Μ l]=1).</a>
<a href="#3" id="3">As noted earlier, MES algorithms based on adapting existing MUS algorithms are unable to implement clause set refinement, and so cannot drop {a mathematical formula}k(k − 1)/2 clauses after the second SAT solver call.</a>
<a href="#4" id="4">Let {a mathematical formula}T be any subset of clauses of {a mathematical formula}F — we refer to clauses of {a mathematical formula}T as target clauses, and to the set {a mathematical formula}T itself as a chunk of {a mathematical formula}F. The incremental reduction is based on the observation that in group-MUS approach the redundancy of any target clause {a mathematical formula}c ∈ T can be established by analyzing c with respect to {a mathematical formula}CNF(¬T) rather than {a mathematical formula}CNF(¬F).</a>
<a href="#5" id="5">If a literal l is a backbone literal, adding this literal as a unit clause to {a mathematical formula}F does not change the models of {a mathematical formula}F. Hence, whenever a backbone-computation algorithm detects that l is a backbone, it adds it to {a mathematical formula}F, which will help future SAT calls.</a>
<a href="#6" id="6">As it is the case with the application of model rotation in the group-MUS setting, the algorithm must be adjusted so that it constructs new assignments that satisfy all clauses of the currently falsified group, and the group {a mathematical formula}D.</a>
<a href="#7" id="7">Noteworthy is the fact that the don't care group {a mathematical formula}D=CNF(¬F) used in Proposition 2 to construct the group-CNF formula {a mathematical formula}RF(E) from a subformula {a mathematical formula}E ⊆ F does not need to include the negation of the don't care group on the formula used as an input to the group-MES computation problem.</a>
<a href="#8" id="8">These criteria were derived from the worst-case analysis of deletion-based MES algorithms (whereby the number of SAT calls is linear in the size of the input formula) and our previous experience with the effects various optimization techniques in the context of MUS extraction.</a>
</body>
</html>