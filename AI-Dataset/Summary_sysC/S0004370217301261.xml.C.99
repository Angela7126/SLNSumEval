<html>
<head>
<meta name="TextLength" content="SENT_NUM:16, WORD_NUM:472">
</head>
<body bgcolor="white">
<a href="#0" id="0">In this paper we focus on just one decision type, made in the context of {a mathematical formula}LA ⁎ and {a mathematical formula}LIDA ⁎ — that of deciding whether to evaluate or to bypass the computation of {a mathematical formula}h2 for some node n. We have two options: (1) Evaluate the second heuristic {a mathematical formula}h2(n), and proceed using the value {a mathematical formula}fmax(n), or (2) bypass the computation of {a mathematical formula}h2(n) and use {a mathematical formula}f1(n), thereby saving time by not computing {a mathematical formula}h2, at the risk of additional expansions and evaluations of {a mathematical formula}h1.</a>
<a href="#1" id="1">We would like the algorithm to make the decision on whether to evaluate {a mathematical formula}h2 rationally.</a>
<a href="#2" id="2">Therefore, we define a criterion based on the regret for bypassing {a mathematical formula}h2(n) in this context.</a>
<a href="#3" id="3">We define regret here as the value lost (in terms of expected increased run time) due to bypassing the computation of {a mathematical formula}h2(n), i.e., how much runtime is increased due to bypassing the computation.</a>
<a href="#4" id="4">We wish to compute {a mathematical formula}h2(n) only if this regret is positive.</a>
<a href="#5" id="5">One important distinction between {a mathematical formula}RLA ⁎ and {a mathematical formula}RLIDA ⁎ is the immediacy of the feedback about whether {a mathematical formula}h2 was helpful.</a>
<a href="#6" id="6">{a mathematical formula}RLIDA ⁎ can tell whether {a mathematical formula}h2 was helpful immediately after evaluating it — {a mathematical formula}h2 is helpful iff {a mathematical formula}g(n)+h2(n)>T, thereby causing a cutoff.</a>
<a href="#7" id="7">Thus, we simply estimate {a mathematical formula}ph2 by the frequency of observed helpful evaluations of {a mathematical formula}h2 so far.</a>
<a href="#8" id="8">For {a mathematical formula}RLA ⁎ , things are a bit more complicated, as we do not have immediate feedback about whether {a mathematical formula}h2 was helpful.</a>
<a href="#9" id="9">Once a node for which we computed {a mathematical formula}h2 is expanded, we know that {a mathematical formula}h2 was not helpful on that node, which is why in the pseudo-code for {a mathematical formula}RLA ⁎ , we call update statistics whenever a node is removed from Open (Line 4 in Algorithm 1).</a>
<a href="#10" id="10">However, we can only be certain that {a mathematical formula}h2 was helpful after search terminates.</a>
<a href="#11" id="11">Nevertheless, we can still estimate{a mathematical formula}ph2.</a>
<a href="#12" id="12">First note that if n is a node at which {a mathematical formula}h2 was helpful, then we computed {a mathematical formula}h2 for n, but did not expand n. After the search completes, this is the exact definition of {a mathematical formula}h2 being helpful, but during the search, this is a necessary condition for n to be potentially helpful.</a>
<a href="#13" id="13">Let us denote by A the number of nodes for which we computed {a mathematical formula}h2 that were not yet expanded, and are thus still in Open.</a>
<a href="#14" id="14">Let us denote by B the number of nodes for which we computed {a mathematical formula}h2.</a>
<a href="#15" id="15">Then {a mathematical formula}AB can be used as an estimate of {a mathematical formula}ph2.</a>
</body>
</html>