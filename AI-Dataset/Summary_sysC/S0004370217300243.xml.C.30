<html>
<head>
<meta name="TextLength" content="SENT_NUM:9, WORD_NUM:333">
</head>
<body bgcolor="white">
<a href="#0" id="0">Specifically, our scenario requires to compute only the optimal departure time for the first point in the path, i.e., {a mathematical formula} Τ S ⁎ , since we assume no delay between the arrival to a point and the departure for the next point in the path (Equation (10)).</a>
<a href="#1" id="1">{a mathematical formula}t:L → R − , i.e., the time cost of driving through a given path,</a>
<a href="#2" id="2">Finally, {a mathematical formula}LS ⁎ represents the optimal path for S, defined as{a mathematical formula} Considering this, a SR problem can be easily translated into a GCCF problem, as each feasible set of riders is indeed a feasible coalition and {a mathematical formula}v( ⋅ ) provides its coalitional value.</a>
<a href="#3" id="3">Hence, {a mathematical formula}CS ⁎ represents the optimal coalition structure which maximises the social welfare (i.e., minimises the total cost) for the system.</a>
<a href="#4" id="4">However, the computation of the optimal path in Equation (3) is NP-hard [31], which would not be solvable in realistic scenarios.</a>
<a href="#5" id="5">{a mathematical formula}Ad(CS)Given a coalition structure CS, {a mathematical formula}Ad(CS) is the set of coalitions in CS that contain at least one driver, i.e., the set of cars.</a>
<a href="#6" id="6">Formally, {a mathematical formula}Ad(CS)={S ∈ CS|S ∩ D ≠ ∅ }.</a>
<a href="#7" id="7">In this section we address the problem of computing the optimal departure time {a mathematical formula} Τ S ⁎ for a given coalition S. Specifically, we now propose an algorithm to compute the best departure time for a car S (given a tuple {a mathematical formula}L ∈ VT(S) and a driver {a mathematical formula}aj ∈ S ∩ D), so to avoid trying every possible departure time for the trip of S. Algorithm 3 achieves this by considering the ideal departure time of the driver, i.e., {a mathematical formula} Τ j Σ , and by applying a sequence of shifts so to obtain the optimal Τ .</a>
<a href="#8" id="8">Notice that, in any case, our approach can solve systems with 100 agents in a reasonable amount of time, i.e., about 2 hours at most for {a mathematical formula}|D|=50%.</a>
</body>
</html>