<html>
<head>
<meta name="TextLength" content="SENT_NUM:33, WORD_NUM:894">
</head>
<body bgcolor="white">
<a href="#0" id="0">By modelling appliances as hidden Markov models (HMMs), we learn a general appliance behavioural model which will generalise to previously unseen households.</a>
<a href="#1" id="1">We then use an unsupervised method by which these general appliance models can be tuned to the specific appliance instances in a previously unseen household using only aggregate data.</a>
<a href="#2" id="2">We propose a hierarchical approach which models multiple appliances of the same type based on a Bayesian treatment of HMMs [15].</a>
<a href="#3" id="3">As such, the parameters of multiple HMMs can be combined to form a general model of an appliance.</a>
<a href="#4" id="4">We provide a method by which the general appliance models can be tuned to the appliances within a specific household using only aggregate data.</a>
<a href="#5" id="5">We show that models tuned using only aggregate data outperform the general models, and in some cases perform comparably to models learned using sub-metered data from the test appliance.</a>
<a href="#6" id="6">Furthermore, we show that our tuning method outperforms the state of the art which uses factorial HMMs to tune appliance models.</a>
<a href="#7" id="7">In this model, we represent an appliance type (e.g.</a>
<a href="#8" id="8">refrigerator) as a distribution from which appliance instances (e.g.</a>
<a href="#9" id="9">Bosch Logixx KSV36AW41G refrigerator) are drawn.</a>
<a href="#10" id="10">As such, the appliance type represents any behaviour which is common to all instances of that type, while an appliance instance also represents behaviour which is specific to that single instance and its usage.</a>
<a href="#11" id="11">Furthermore, we observe sequences of power data from each appliance instance.</a>
<a href="#12" id="12">Therefore, the aim is to infer the parameters of an appliance type, Θ , from sequences of power data, {a mathematical formula}x(n)={x1, … ,xT}, generated by individual appliance instances described by parameters {a mathematical formula} Θ ={ Θ (1), … , Θ (N)}, where n is one of N appliance instance indices.</a>
<a href="#13" id="13">We now describe a method by which the parameters learned in Section 2.1 can be combined to form a model that represents the whole appliance type, and therefore generalises to previously unseen instances of that appliance type.</a>
<a href="#14" id="14">Our method consists of fitting distributions to samples drawn from the posterior distributions over appliance instance parameters.</a>
<a href="#15" id="15">As a result, this method averages over our uncertainty around the appliance instance parameters.</a>
<a href="#16" id="16">We introduce the notation:{a mathematical formula} to represent the parameters of the general model of an appliance type as defined in the following paragraphs.</a>
<a href="#17" id="17">In the case of the refrigerator, Θ represents a distribution over all possible refrigerator instances.</a>
<a href="#18" id="18">Crucially, this general model allows the probability to be calculated that an appliance instance belongs to the refrigerator appliance type.</a>
<a href="#19" id="19">6 shows the cross validation model log-odds for 5 common household appliances for training set sizes of between 2 and 7 appliance instances.</a>
<a href="#20" id="20">These are compared with the two benchmarks described above, representing approaches where sub-metered data is available from the test appliance, and where data is only available from a single appliance from the training set.</a>
<a href="#21" id="21">Therefore, in this section we propose a method for learning such behaviour that is unique to a single household, which uses both general appliance models and household aggregate data.</a>
<a href="#22" id="22">More formally, this tuning process directly corresponds to learning the parameters {a mathematical formula} Θ (n) for an appliance instance n in a household, given the appliance type's general model Θ and the household's aggregate data x.</a>
<a href="#23" id="23">It is these periods which our algorithm uses to tune the general appliance models to specific appliance instances.</a>
<a href="#24" id="24">In the following sections, we first describe how the periods when only a single appliance is operating can be automatically extracted (Section 3.1).</a>
<a href="#25" id="25">We then describe how these periods can be used to tune a general appliance model to the specific appliance within a given household (Section 3.2).</a>
<a href="#26" id="26">Last, we provide an evaluation using the REDD data set which demonstrates the benefit of model tuning from aggregate data (Section 3.3).</a>
<a href="#27" id="27">We calculate the likelihood that a period of aggregate data was generated by a single appliance instance drawn from a given general appliance model as follows:{a mathematical formula} where {a mathematical formula}x¯i:j is a window of aggregate data after the base-load has been subtracted, {a mathematical formula}p(x¯i:j| Θ ) is the likelihood of that window of data given the general appliance model Θ as in Eq.</a>
<a href="#28" id="28">(14), and D is an appliance specific likelihood threshold.</a>
<a href="#29" id="29">This threshold is set such that the model will accept windows of data which can be explained by a set of appliance parameters drawn from the given appliance type's general model, and reject any windows of data generated by other appliance types or combinations of appliances.</a>
<a href="#30" id="30">Once the signatures of a single appliance instance have been extracted from aggregate data, the aim is to tune the general model to include the behaviour of the appliance instance which is unique to the previously unseen household.</a>
<a href="#31" id="31">Given that both the general model for this appliance type, Θ , and signatures sampled from the specific appliance instance are available, {a mathematical formula}x¯i:j, Bayesian integration [15] provides a natural approach to infer the posterior distribution over such appliance instance parameters with the state sequence marginalised out:{a mathematical formula} Therefore, we update the general model again using variational message passing as described in Appendix A.</a>
<a href="#32" id="32">However, it should be noted that the mean power of the on state, {a mathematical formula} Μ k, is just one of the set of appliance model parameters, Θ , and therefore it is not expected that appliances will be uniquely distinguishable using only this parameter.</a>
</body>
</html>