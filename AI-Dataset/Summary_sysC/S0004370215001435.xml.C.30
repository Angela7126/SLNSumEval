<html>
<head>
<meta name="TextLength" content="SENT_NUM:16, WORD_NUM:429">
</head>
<body bgcolor="white">
<a href="#0" id="0">Rewrite rules are then used to add redundant constraints or solve subproblems using specialized data mining algorithms or generic constraint programming solvers.</a>
<a href="#1" id="1">a novel library of functions and constraints in the MiniZinc language, to support modeling itemset mining tasks in terms of set operations and constraints;</a>
<a href="#2" id="2">Modeling a mining problem in MiningZinc follows the same methodology as modeling a constraint program: one has to express a problem in terms of variables with a domain, and constraints over these variables; for example, a set variable with a minimum frequency constraint over data.</a>
<a href="#3" id="3">Listing 8 contains some examples of constraint-based mining constraints that can be added to the frequent itemset mining model in Listing 2.</a>
<a href="#4" id="4">the set of FlatZinc constraints over {a mathematical formula}V1, … ,Vn that specify the problem this algorithm can solve (multiple sets can be given in case of multiple equivalent formulations);</a>
<a href="#5" id="5">Past work showed that the execution of the frequent itemset mining task is more efficient in some CP systems if a look-ahead constraint is added.</a>
<a href="#6" id="6">Let {a mathematical formula}C2={minfreq_redundant(I,D,V)} represent this look-ahead constraint (see Section 2.4).</a>
<a href="#7" id="7">This constraint set is entailed by the set of constraints {a mathematical formula}C1={A=cover(I,D),B=card(A),V ≤ B}.</a>
<a href="#8" id="8">Then for the model of Example 3 (depicted by {a mathematical formula}CM) we have the following rewrite:{a mathematical formula}</a>
<a href="#9" id="9">Recall that all specialized algorithms are registered with a predicate definition {a mathematical formula}p(±1V1, … ,±nVn) and a set of constraints C that define the problem being solved by this algorithm.</a>
<a href="#10" id="10">Assume we wish to solve the earlier model{a mathematical formula} where the available algorithms are the LCM and FPGrowth specialized itemset mining algorithms, the maxsup and frequency specialized algorithms and the Gecode generic CP system (in that order).</a>
<a href="#11" id="11">Then these are the ranked execution plans: {a mathematical formula} In the above we assume that LCM and FPGrowth are aware of the redundant constraint minfreq_redundant.</a>
<a href="#12" id="12">If not, there would be variants of each of the specialized and hybrid strategies with redundant constraints too (they would be ranked below their non-redundant equivalent as they would have more constraints for the CP system).</a>
<a href="#13" id="13">Our implementation supports multiple algorithms for executing parts of a model.</a>
<a href="#14" id="14">All CP solvers have a corresponding rewrite rule, and the specialized algorithms have one rewrite rule for each task they support.</a>
<a href="#15" id="15">MiningZinc provides us with three strategies for solving this model: (1) use a CP solver to solve the entire model, (2) use a specialized algorithm for mining discriminative itemsets and post-process its results using a CP solver, and (3) use a specialized high-utility mining algorithm and post-process its result using a CP solver.</a>
</body>
</html>