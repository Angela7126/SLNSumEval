<html>
<head>
<meta name="TextLength" content="SENT_NUM:12, WORD_NUM:467">
</head>
<body bgcolor="white">
<a href="#0" id="0">Postponing the computation of alternative contingent branches till more information is acquired from the environment is a more feasible approach for WS scenarios that involve many numeric variables and output-to-input mappings, and being optimistic is likely to be paid off.</a>
<a href="#1" id="1">Thus, all sources of non-determinism, where the actual behavior of actions at execution time contradicts the expected effects as modeled in the planning domain or external agents alter the world in unanticipated ways, are left to be treated by interleaving planning with execution and performing continual planning as described in Section 4.</a>
<a href="#2" id="2">Grounding the domain is not a feasible option because of the many input parameters which range over large domains.</a>
<a href="#3" id="3">Therefore, a separate modeling is required, to allow distinguishing between information that refers to input parameters, and enables the planner to make the appropriate output-to-input assignments.</a>
<a href="#4" id="4">As new observations are made at execution time, the knowledge base facts and the constraints change.</a>
<a href="#5" id="5">This implies that, setting aside uncertainty stemming from sensing effects, a plan has the potential to solve the planning problem if the goal is satisfied for all possible assignments to variables allowed by {a mathematical formula}prop_init.</a>
<a href="#6" id="6">Thus, given some {a mathematical formula}prop_init that imply {a mathematical formula}(1 ≤ v ≤ 2), an empty action set and the goal {a mathematical formula}g=final(v=1), g is not satisfiable.</a>
<a href="#7" id="7">For example, given the same {a mathematical formula}prop_init and an empty action set, the goal final{a mathematical formula}(v<3) is also not satisfiable, despite the fact that it holds for all possible assignments to v. This strong restriction is necessary to prevent the constraint solver from presenting trivial assignments as acceptable solutions.</a>
<a href="#8" id="8">After the phase of the parallel execution of some actions at step i completes, the solver is passed a full assignment to variables and parameters, which is the same as the assignment corresponding to the current plan, except that variables at state {a mathematical formula}i+1 are assigned the values delivered by the current environmental state.</a>
<a href="#9" id="9">The updated plan (refined or new) is computed starting from an initial state that reflects the new context, and assumes the successful completion of any pending actions.</a>
<a href="#10" id="10">Thus, considering the invocation of the parallel actions {a mathematical formula}Ai at state i, and some actions {a mathematical formula}Ap ⊆ Ai which do not respond within the short time limit, the new initial state is formed by assigning all variables that participate in the effects of {a mathematical formula}Ap to the values they have at the solver state {a mathematical formula}i+1.</a>
<a href="#11" id="11">Because the notion of state for the RuGPlanner encloses a set of fully instantiated states, the number of possible initial (instantiated) states of knowledge variables and their domain size affects planning time only with respect to the number of sensing actions which have to be included in the plan, their interdependencies, and entailed constraints.</a>
</body>
</html>