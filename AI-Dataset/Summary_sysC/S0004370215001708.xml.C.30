<html>
<head>
<meta name="TextLength" content="SENT_NUM:51, WORD_NUM:1209">
</head>
<body bgcolor="white">
<a href="#0" id="0">Assume that the semantics {a mathematical formula} 〚 D 〛 of an incomplete database D is given as a set of complete databases, or possible worlds, {a mathematical formula}D ′ .</a>
<a href="#1" id="1">These are databases which the incomplete D can represent.</a>
<a href="#2" id="2">Then the certain answer to Q on D is defined as{a mathematical formula} Since database queries produce collections (sets, multisets, etc.</a>
<a href="#3" id="3">In particular, queries take objects and return objects.</a>
<a href="#4" id="4">Thus, the idea behind certain answers is to find an object A representing the set of objects{a mathematical formula}Q( 〚 D 〛 )={Q(D ′ )|D ′ ∈ 〚 D 〛 }.</a>
<a href="#5" id="5">Such an object A must contain information common to all the objects in {a mathematical formula}Q( 〚 D 〛 ): that is, it must be no more informative than any of the objects in {a mathematical formula}Q( 〚 D 〛 ).</a>
<a href="#6" id="6">The definition of {a mathematical formula}cert ∩ uses the intersection operator as a means of extracting such common information.</a>
<a href="#7" id="7">If one has a query Q to be evaluated on an incomplete database D, one needs to represent the set{a mathematical formula} of possible answers to Q on complete databases that are represented by D. One possibility is to look for an answer A so that {a mathematical formula} 〚 A 〛 =Q( 〚 D 〛 ), i.e., A denotes exactly the answers to Q over {a mathematical formula} 〚 D 〛 .</a>
<a href="#8" id="8">When such an answer A exists for every query Q from a given class of queries, one talks about strong representation systems for that class, under the semantics {a mathematical formula} 〚 〛 , see [19], [2].</a>
<a href="#9" id="9">Unfortunately, strong representation systems may not exist even for simple queries over standard semantics of incompleteness, e.g., even quantifier-free queries for the closed-world semantics [2].</a>
<a href="#10" id="10">Given an incomplete database D, a semantics of incompleteness {a mathematical formula} 〚 〛 , and a query Q, the standard notion of certain answers under {a mathematical formula} 〚 〛 is{a mathematical formula} Note that {a mathematical formula}cert ∩ (Q,D) cannot contain any tuples with nulls.</a>
<a href="#11" id="11">But are these sufficiently expressive to describe answers on incomplete databases?</a>
<a href="#12" id="12">Specifically, are these sufficiently expressive to represent sets {a mathematical formula}Q( 〚 D 〛 )?</a>
<a href="#13" id="13">{a mathematical formula}D is a set of database objects (e.g., relational databases over the same schema);</a>
<a href="#14" id="14">{a mathematical formula}C is the set of complete objects (e.g., databases without nulls);</a>
<a href="#15" id="15">{a mathematical formula} 〚 〛 is the semantic function: {a mathematical formula} 〚 x 〛 ⊆ C is the semantics of an incomplete database x, i.e., the set of all complete databases that x can represent.</a>
<a href="#16" id="16">Information orderingGiven a semantics {a mathematical formula} 〚 〛 of incompleteness, an information ordering associated with it is given by{a mathematical formula}</a>
<a href="#17" id="17">Note that the last condition in the definition of pre-domain simply says that if {a mathematical formula}c ∈ 〚 x 〛 , then {a mathematical formula}x ⪯ c, i.e., an incomplete object is less informative than the objects it represents.</a>
<a href="#18" id="18">for each {a mathematical formula}x ∈ D, there is a formula {a mathematical formula} Δ x ∈ F with {a mathematical formula}Mod( Δ x) ∩ C= 〚 x 〛 ;</a>
<a href="#19" id="19">In a pre-domain,{a mathematical formula} □ O 〚 x 〛 =xfor every x.</a>
<a href="#20" id="20">In a representation system,{a mathematical formula}Th( 〚 x 〛 )=Th( 〚 x 〛 ≈ )=Th(x)for every x.</a>
<a href="#21" id="21">{a mathematical formula} Δ x= □ K 〚 x 〛 .</a>
<a href="#22" id="22">{a mathematical formula} □ O 〚 x 〛 ⊨ □ K 〚 x 〛</a>
<a href="#23" id="23">Then {a mathematical formula}x ⪯ c and we have {a mathematical formula}c ∈ 〚 c 〛 ⊆ 〚 x 〛 by the properties of representation systems.</a>
<a href="#24" id="24">Corollary 1 says that for sets X of the form {a mathematical formula} 〚 x 〛 we have {a mathematical formula} □ OX ⊨ □ KX.</a>
<a href="#25" id="25">We shall see later that the same is true for the important sets of the form {a mathematical formula}Q( 〚 x 〛 ) that we need for defining certain answers.</a>
<a href="#26" id="26">There is a representation system and a set of objects X such that{a mathematical formula} □ OX ⊭ □ KX.</a>
<a href="#27" id="27">In a representation system,{a mathematical formula} □ KX= ⋀ Th(X)for every set X of objects.</a>
<a href="#28" id="28">Thus, for two database domains {a mathematical formula}D= 〈 D,C, 〚 〛 ,Iso 〉 and {a mathematical formula}D ′ = 〈 D ′ ,C ′ , 〚 〛 ′ ,Iso ′ 〉 , a query{a mathematical formula}Q:D → D ′ is a mapping associating with an object {a mathematical formula}x ∈ D its answer, {a mathematical formula}Q(x) ∈ D ′ .</a>
<a href="#29" id="29">Preserving informativenessA query {a mathematical formula}Q:D → D ′ preserves informativeness if it is monotone with respect to the information orderings given by the semantics of query inputs and query answers, i.e.,{a mathematical formula}</a>
<a href="#30" id="30">as objects {a mathematical formula}certO(Q,x)= □ OQ( 〚 x 〛 );</a>
<a href="#31" id="31">as knowledge {a mathematical formula}certK(Q,x)= □ KQ( 〚 x 〛 ).</a>
<a href="#32" id="32">Ideally, one tries to find a query answer A so that {a mathematical formula} 〚 A 〛 ′ =Q( 〚 D 〛 ).</a>
<a href="#33" id="33">It seems much better to ask then, in place of (1), for an answer {a mathematical formula} Φ Q,D that is equivalent to the theory of {a mathematical formula}Q( 〚 D 〛 ), rather than defining {a mathematical formula}Q( 〚 D 〛 ) precisely.</a>
<a href="#34" id="34">That is, we replace (1) with{a mathematical formula} which is, of course, our definition of certain answers expressed as knowledge.</a>
<a href="#35" id="35">Let{a mathematical formula}Q:D → D ′ be a query that preserves informativeness and is generic.</a>
<a href="#36" id="36">Assume that there is a representation system{a mathematical formula}RS= 〈 D ′ ,F, ⊨ 〉 over the domain of query answers.</a>
<a href="#37" id="37">{a mathematical formula}certK(Q,x)= Δ Q(x).</a>
<a href="#38" id="38">Indeed, if we had formulae Δ , we would have had {a mathematical formula} Δ c ′ ∈ Th(Q( 〚 x 〛 )) − Th(Q(x)), which is made impossible by (4) in the presence of a representation system.</a>
<a href="#39" id="39">{a mathematical formula}certK(Q,x)= Δ Q(x).</a>
<a href="#40" id="40">If genericity is dropped as an assumption ofTheorem 2, i.e., we have a query Q that preserves informativeness but is not necessarily generic, then{a mathematical formula}Q(x) ⪯ ′ certO(Q,x), and{a mathematical formula} Δ Q(x) ∈ Th(Q( 〚 x 〛 )).</a>
<a href="#41" id="41">A different approach is to fix a language {a mathematical formula}L, and try to find a semantics of query answering so that all the queries in {a mathematical formula}L are monotone.</a>
<a href="#42" id="42">Namely, assume that a query Q is only defined on complete objects, and we want to extend it to all objects.</a>
<a href="#43" id="43">The natural way to do this is to use certain answers as objects, i.e., the query {a mathematical formula}certO(Q) that sends each object x to {a mathematical formula}certO(Q,x).</a>
<a href="#44" id="44">For an arbitrary query Q defined on complete objects, the query{a mathematical formula}certO(Q)preserves informativeness.</a>
<a href="#45" id="45">Let {a mathematical formula}x ⪯ y.</a>
<a href="#46" id="46">Consider an m-ary relational query{a mathematical formula}Q:D ⁎ ( Σ ) → Dowa( Σ m).</a>
<a href="#47" id="47">Q is definable in {a mathematical formula} ∃ Pos, or</a>
<a href="#48" id="48">Q is definable in {a mathematical formula}Pos and h is onto, or</a>
<a href="#49" id="49">if {a mathematical formula} Φ 1(x¯) and {a mathematical formula} Φ 2(x¯) are formulae in {a mathematical formula} ∃ Pos0, then {a mathematical formula} Ψ (x¯)= Φ 1(x¯) ∨ Φ 2(x¯) is in {a mathematical formula} ∃ Pos0;</a>
<a href="#50" id="50">Each relation name is an {a mathematical formula}RAcwa query;</a>
</body>
</html>