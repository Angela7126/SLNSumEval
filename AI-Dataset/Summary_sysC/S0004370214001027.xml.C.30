<html>
<head>
<meta name="TextLength" content="SENT_NUM:17, WORD_NUM:432">
</head>
<body bgcolor="white">
<a href="#0" id="0">This section develops several new approaches for computing one MES of a CNF formula {a mathematical formula}F. The first solution consists of adapting any MUS extraction algorithm based on identification of so-called transition clauses, for MES extraction.</a>
<a href="#1" id="1">Afterwards, key techniques used in MUS extraction are studied.</a>
<a href="#2" id="2">Model rotation [23], [24] is applied to MES extraction, and it is argued that clause set refinement [21], [22], [23] cannot be directly applied to MES extraction algorithms resulting from adapting existing MUS extraction algorithms.</a>
<a href="#3" id="3">Next, a reduction from MES to group-MUS formulation [25], [22] is developed, which enables the use of both model rotation and clause set refinement.</a>
<a href="#4" id="4">Although the reduction of MES to group-MUS extraction enables the integration of key techniques, it is also the case that the resulting instances of SAT are hard to solve.</a>
<a href="#5" id="5">This section concludes by developing an incremental reduction from MES to group-MUS extraction, which produces much easier instances of SAT.</a>
<a href="#6" id="6">A key definition in MUS extraction algorithms is that of transition clause[4].</a>
<a href="#7" id="7">A transition clause c is such that, if added to a satisfiable subformula {a mathematical formula}R, the resulting subformula is unsatisfiable.</a>
<a href="#8" id="8">This definition can be generalized for MES extraction as follows.</a>
<a href="#9" id="9">Let {a mathematical formula}R ⊊ F denote a (reference) subformula of {a mathematical formula}F which is to be extended to be equivalent to {a mathematical formula}F. Observe that {a mathematical formula}F ⊨ R, and so, in case {a mathematical formula}R ⊨ ; ̸ F, our goal is to extend {a mathematical formula}R with a clause {a mathematical formula}c ∈ F ∖ R, such that {a mathematical formula}R ∪ {c} ⊨ F, and so {a mathematical formula}R ∪ {c} ≡ F.</a>
<a href="#10" id="10">We will refer to such clauses c as witnesses of equivalence of the formulas {a mathematical formula}R ∪ {c} and {a mathematical formula}F, since they are required for the certification of the equivalence of the two formulas.</a>
<a href="#11" id="11">{a mathematical formula}G12.</a>
<a href="#12" id="12">If the corresponding clause is removed from the formula, the resulting formula is unsatisfiable, and so the clause is declared redundant.</a>
<a href="#13" id="13">More importantly, a CDCL SAT solver will produce an unsatisfiable core {a mathematical formula}U ⊆ {x1} ∪ CNF(¬F).</a>
<a href="#14" id="14">Hence, clause set refinement serves to eliminate all of the remaining groups of clauses, and so the MES is computed with two SAT solver calls.</a>
<a href="#15" id="15">As noted earlier, MES algorithms based on adapting existing MUS algorithms are unable to implement clause set refinement, and so cannot drop {a mathematical formula}k(k − 1)/2 clauses after the second SAT solver call.</a>
<a href="#16" id="16">A solution to this issue is based on an incremental reduction of MES extraction to group-MUS extraction.</a>
</body>
</html>