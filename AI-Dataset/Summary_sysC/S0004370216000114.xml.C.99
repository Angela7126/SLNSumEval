<html>
<head>
<meta name="TextLength" content="SENT_NUM:19, WORD_NUM:440">
</head>
<body bgcolor="white">
<a href="#0" id="0">The Ω -abstraction is equal to {a mathematical formula} ∃ X.( ⋀ Ν ∈ Ω Φ [ Ν ]).</a>
<a href="#1" id="1">Since {a mathematical formula} Μ ∈ Ω , the abstraction is also equal to {a mathematical formula} ∃ X.( Φ [ Μ ] ∧ ⋀ Ν ∈ Ω Φ [ Ν ]).</a>
<a href="#2" id="2">Whenever {a mathematical formula}zC is true, all X literals of C are false.</a>
<a href="#3" id="3">Hence, maximizing the number of variables {a mathematical formula}zC set to true achieves the objective.</a>
<a href="#4" id="4">Counterexample heuristic In the refinement step we consider only those clauses that are not satisfied by the counterexample Μ , i.e., such {a mathematical formula}C ∈ Φ that {a mathematical formula}C[Y/ Μ ] ≠ 1.</a>
<a href="#5" id="5">Hence, the clause {a mathematical formula} ⋁ zC, added in line 7, has less literals the more clauses of Φ are satisfied by Μ .</a>
<a href="#6" id="6">Since, in general, short clauses represent stronger constraints than long clauses, we propose a heuristic that looks for those counterexamples that maximize the number of satisfied clauses in Φ .</a>
<a href="#7" id="7">Hence, the satisfiability problem {a mathematical formula}SAT( Φ [X/ Ν ]) is replaced by the following MaxSAT problem:{a mathematical formula}</a>
<a href="#8" id="8">For each subformula of the original input formula, we introduce two ghost variables: an existentially quantified variable {a mathematical formula}g ∃ and a universally quantified variable {a mathematical formula}g ∀ .</a>
<a href="#9" id="9">We say that {a mathematical formula}g ∃ and {a mathematical formula}g ∀ represent the labeled subformula.</a>
<a href="#10" id="10">Variables that occur in the original input formula are called input variables, in distinction to ghost variables.</a>
<a href="#11" id="11">Ghost variables are always downstream of all input variables.</a>
<a href="#12" id="12">We now introduce a semantics with ghost variables for the game formulation of QBF.</a>
<a href="#13" id="13">As in the Tseitin transformation, the existential player should lose if an existential ghost variable {a mathematical formula}g ∃ is assigned a different value than the subformula that it represents.</a>
<a href="#14" id="14">Additionally, the universal player should lose if an universal ghost variable {a mathematical formula}g ∀ is assigned a different value than the subformula that it represents.</a>
<a href="#15" id="15">As noted in Section 2, we write “ {a mathematical formula} Φ [ Π ] ” to denote the result of substituting assignment Φ into formula Φ .</a>
<a href="#16" id="16">To add CEGAR learning to the DPLL-based solver GhostQ, we insert a call to a new CEGAR-learning procedure after standard DPLL learning, as shown in Algorithm 9.</a>
<a href="#17" id="17">As shown in Algorithm 9, CEGAR learning is performed only if the last decision literal in {a mathematical formula} Π cur is owned by the winner.</a>
<a href="#18" id="18">On the other hand, to eliminate all the innermost T variables, the algorithm must, as an intermediate step, construct a formula where {a mathematical formula}|VT|=|T| − 1.</a>
</body>
</html>