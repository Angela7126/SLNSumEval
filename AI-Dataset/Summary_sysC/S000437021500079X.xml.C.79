<html>
<head>
<meta name="TextLength" content="SENT_NUM:14, WORD_NUM:662">
</head>
<body bgcolor="white">
<a href="#0" id="0">It addresses, among others, three main issues: how to derive an upper bound on the solvers performance for a given set of problem solving tasks; how to analyze the utility of training instances when designing portfolios; and how to configure a high performance portfolio for a given training set which generalizes very well on unseen instances.</a>
<a href="#1" id="1">Using these definitions, the automated process of configuring static sequential portfolios can be defined as follows: Given a set of candidate solvers P and a set of training instances I automatically find the portfolio configuration C of solvers {a mathematical formula}p ∈ P such that it maximizes the performance of the resulting portfolio over the given benchmark I.</a>
<a href="#2" id="2">Alternatively, in the case of Automated Planning, instead of relying on a collection of features that describes the structure of each instance, some approaches focus on the performance of each candidate solver in a specific set of planning tasks (those that belong to the same planning domain) [4].</a>
<a href="#3" id="3">The proposed approach derives the optimal static sequential portfolio (to be denoted as OSS portfolio) for a specific metric and a given training set; i.e., the optimal combination of solvers for a particular performance criteria with regard to the set of candidate solvers and the training benchmark considered.</a>
<a href="#4" id="4">Otherwise, the plan quality of a solved instance was computed as the lowest (i.e., better) solution cost found by any planning system in the competition, divided by the cost of the solution s found by the participant planner p. In case of solving planning tasks optimally the quality of the resulting plans is a binary value, since plans have to be optimal.</a>
<a href="#5" id="5">Each candidate solver {a mathematical formula}p ∈ P is executed with every training instance {a mathematical formula}t ∈ I to obtain the sets {a mathematical formula}Spt of solutions.</a>
<a href="#6" id="6">In case of solving problems optimally or SAT problems, a candidate solver {a mathematical formula}p ∈ P generates at most one solution {a mathematical formula}s ∈ Spt for each training instance {a mathematical formula}t ∈ I, since s should be optimal (as in the case of Automated Planning) or because it is required only to find a single solution — as in the case of SAT.</a>
<a href="#7" id="7">Decision variables store the outcome of the MIP solver which serve to fully characterize the resulting portfolio: {a mathematical formula}solved_byptsIt is an auxiliary variable that stores each decision made for the model to solve each training instance {a mathematical formula}t ∈ I.</a>
<a href="#8" id="8">Although the usual goal for configuring portfolios is to maximize the overall solution quality or the number of solved instances, we considered an objective function that maximizes a weighted sum of overall running time (the sum of {a mathematical formula}timep for all solvers p) and quality of the solutions (quality).</a>
<a href="#9" id="9">If one solution exists at least, then a second execution of the MIP model is issued to find the combination of candidate solvers that achieves the same quality (denoted as Q) while minimizing the overall running time, just by setting {a mathematical formula}w2=1 and {a mathematical formula}w1=0.</a>
<a href="#10" id="10">We report in the experiments section the results of this analysis, which could lead in the future to efficient algorithms to select a priori better training instances to generate high performance portfolios.</a>
<a href="#11" id="11">From the table, it results that the same performance (measured in coverage and time) is achieved for all the sequential portfolios derived using all sets of training problems but the first one (which consists just of those problems that were solved by at most one planner).</a>
<a href="#12" id="12">In fact, the eighth subset achieves the same number of solved problems, though with lower quality, and the nineteenth set with 226 instances serves to derive the same OSS portfolio that is computed with all planning tasks — 280 in total.</a>
<a href="#13" id="13">The formulation of the problem proposed by 3S requires generating a different MIP model for each given input data (candidate solvers and training instances), which allows us to minimize the number of binary variables in the resulting model.</a>
</body>
</html>