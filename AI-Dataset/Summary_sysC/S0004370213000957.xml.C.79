<html>
<head>
<meta name="TextLength" content="SENT_NUM:18, WORD_NUM:664">
</head>
<body bgcolor="white">
<a href="#0" id="0">In the example above, the fact that the language {a mathematical formula}{yes,no} can abstract away from any decision problem is no argument for its usefulness as an abstraction formalism, since its expressive power is clearly too poor to model real problems (meaning problems that are syntactically different from their solutions).</a>
<a href="#1" id="1">Many more specific representations of acceptance conditions are possible, Brewka and Woltran [3] even introduce two of these additional representations: For one, an acceptance condition {a mathematical formula}Ca can be described via a propositional formula {a mathematical formula} Φ a over the vocabulary {a mathematical formula}par(a), which is straightforward to use whenever each statement has only finitely many relevant parents.</a>
<a href="#2" id="2">This shows that {a mathematical formula}G Ξ M – the two-valued operator associated to the reduced ADF {a mathematical formula} Ξ M – is in some sense “ complete ” with respect to the result of {a mathematical formula}G Ξ ′ ( ⋅ ,M) – the operator for checking whether M is a two-valued stable model of Ξ .</a>
<a href="#3" id="3">But d is by definition of its acceptance condition always in, so no reasonable semantics could ever label it out, and consequently the condition upon which BW-admissibility of {a mathematical formula}{a,b} hinges can never become true.</a>
<a href="#4" id="4">As our next result shows, their intuition of defining the operator was on the spot – they defined the most precise approximation of the two-valued ADF consequence operator {a mathematical formula}G Ξ .</a>
<a href="#5" id="5">This result yields immediate correspondence of all operator-based semantics of an ADF Ξ with the respective semantics of its standard logic program {a mathematical formula} Π ( Ξ ).</a>
<a href="#6" id="6">Let{a mathematical formula} Ξ =(S,L,Cin)be an abstract dialectical framework and{a mathematical formula} Π ( Ξ )its standard logic program.</a>
<a href="#7" id="7">Then Ξ and{a mathematical formula} Π ( Ξ )coincide on all semantics based on their approximation operators.</a>
<a href="#8" id="8">In particular, {a mathematical formula}G Ξ =T Π ( Ξ ) and an ADF and its standard logic program also agree on all semantics derived from the ultimate approximation of their two-valued operators.</a>
<a href="#9" id="9">As much more interesting consequence of Lemma 3.16, it follows that the ultimate approximations of {a mathematical formula}T Π and {a mathematical formula}G Ξ ( Π ) are identical, thus Π and {a mathematical formula} Ξ ( Π ) also coincide on all ultimate semantics, including ultimate stable models.</a>
<a href="#10" id="10">As our first observation, we note that the approximating operator that Definition 3.1 assigns to the ADF of an AF Θ is also a special case of an operator: it is the canonical approximation of {a mathematical formula}U Θ , the operator assigning to a set S of arguments all the arguments from A which are not attacked by S.</a>
<a href="#11" id="11">In the remainder, we will denote the four-valued approximation operator of an argumentation framework Θ by {a mathematical formula}F Θ ; we formally define {a mathematical formula}F Θ ′ =defG Ξ ( Θ ) ′ .</a>
<a href="#12" id="12">It follows by definition that the characteristic operator {a mathematical formula}F Θ of an AF is its own stable operator: For any argumentation framework Θ , we have{a mathematical formula}SF Θ =F Θ .Let {a mathematical formula} Θ =(A,R) and {a mathematical formula}X,Y ⊆ A.</a>
<a href="#13" id="13">We have to show {a mathematical formula}SF Θ ′ (X,Y)=F Θ ′ (X,Y).</a>
<a href="#14" id="14">Now {a mathematical formula}SF Θ ′ (X,Y)=lfp(F Θ ′ ( ⋅ ,Y))=lfp(U Θ (Y))=U Θ (Y)=F Θ ′ (X,Y).</a>
<a href="#15" id="15">Since the two operators are closely related and the characteristic approximating operator {a mathematical formula}F Θ can express them both, we can reconstruct argumentation semantics based entirely on this single operator.</a>
<a href="#16" id="16">We begin with the simplest semantics: recall that for {a mathematical formula} Θ =(A,R) a set E of arguments is a stable extension iff {a mathematical formula}E=U Θ (E), so the following is immediate.</a>
<a href="#17" id="17">For AFs {a mathematical formula} Θ =(A,R), the definition of its standard logic program can be simplified to the following:{a mathematical formula}Note that the positive body is empty in general since there is no notion of support in classical Dung-style AFs.</a>
</body>
</html>