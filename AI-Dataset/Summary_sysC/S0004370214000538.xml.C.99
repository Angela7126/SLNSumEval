<html>
<head>
<meta name="TextLength" content="SENT_NUM:25, WORD_NUM:932">
</head>
<body bgcolor="white">
<a href="#0" id="0">Then, during exploitation, it uses the remaining (1 − Ε )B to maximise the total utility based on those estimates.</a>
<a href="#1" id="1">Using this technique allows us to derive an O(B23) upper bound on its performance regret (i.e., the expected difference in utility between our algorithm and the optimum), which means that as the budget B increases, the regret tends to 0.</a>
<a href="#2" id="2">More specifically, it operates as follows: To deal with the unknown performance characteristics of workers, our algorithm divides its budget into two amounts (as dictated by an Ε parameter) to be used in two sequential phases — an initial exploration phase, during which it uniformly samples the performance of a wide range of workers using the first part of its budget, and an exploitation phase, during which it selects only the best workers using its remaining budget.</a>
<a href="#3" id="3">More specifically, we prove that the performance regret (i.e., the difference between the performance of a particular algorithm and that of the optimal solution) of the bounded Ε -first approach is at most {a mathematical formula}O(B23) with a high probability, where B is the total budget.</a>
<a href="#4" id="4">In particular, this problem focuses on identifying the ranking of the arms, given a threshold for the number of total pulls (budget).</a>
<a href="#5" id="5">As we will explain later in Section 4.2, within the exploration phase, our bounded Ε -first approach relies on an approximation method that aims to choose arms with highest reward-cost density values.</a>
<a href="#6" id="6">Thus, the pure exploration problem can be regarded as a sub-problem within the exploration phase, where we aim to achieve efficient exploration (i.e., quickly identify the highest ranking arms).</a>
<a href="#7" id="7">Let {a mathematical formula}NiB(A) be the random variable that represents the total number of pulls of arm i by A, with respect to the budget limit B.</a>
<a href="#8" id="8">Note that {a mathematical formula}NiB(A) is a random variable since the behaviour of A depends on the observed rewards.</a>
<a href="#9" id="9">Thus, we have:{a mathematical formula} where {a mathematical formula}SA(t) is the subset that A chooses to pull at time step t and {a mathematical formula}I{i ∈ SA(t)} denotes the indicator function whether arm i is chosen to be pulled at t. To guarantee that the total cost of the sequence A cannot exceed B, we have:{a mathematical formula} where {a mathematical formula}P( ⋅ ) denotes the probability of an event.</a>
<a href="#10" id="10">The expectation of {a mathematical formula}GB(A) is:{a mathematical formula} Then, let {a mathematical formula}A ⁎ denote an optimal solution that maximises the expected total reward, that is:{a mathematical formula} Note that in order to determine {a mathematical formula}A ⁎ , we have to know the value of {a mathematical formula} Μ i in advance, which does not hold in our case.</a>
<a href="#11" id="11">Thus, {a mathematical formula}A ⁎ represents a theoretical optimal algorithm, which is unachievable in general (but which we will use in Section 6 to benchmark our approach).</a>
<a href="#12" id="12">In particular, here we make use of a simple, but efficient, approximation method, the bounded greedy algorithm, which has {a mathematical formula}O(NlogN) computational complexity, where N is the number of item types [19].</a>
<a href="#13" id="13">The reason for this choice is that besides its efficiency, it provides a solution with specific properties that can be used for theoretical analysis (see Section 5 for more details).</a>
<a href="#14" id="14">Having the value of each {a mathematical formula}xiexploit, we now run the exploitation algorithm as follows: At each subsequent time step t, if the number of times arm i has been pulled does not exceed {a mathematical formula}xiexploit, then we pull that arm at t. Hereafter we refer to this exploitation approach as {a mathematical formula}Agreedy.</a>
<a href="#15" id="15">Specifically, the quality distribution is the sum of two random variables, {a mathematical formula}0.9 ⋅ Ri+0.1 ⋅ U(0,1), where {a mathematical formula}Ri is the empirical distribution of the user's actual ratings obtained on previous jobs{sup:13} and {a mathematical formula}U(0,1) is the continuous uniform distribution on the interval {a mathematical formula}[0,1] (to add a small amount of noise).</a>
<a href="#16" id="16">Thus, a sample from this distribution represents the quality of the work achieved in one hour and ranges from 0 to 1, where 0 is the worst, making no contribution to the employer's overall utility and 1 is the highest quality achievable.</a>
<a href="#17" id="17">Note that our algorithm approaches the theoretical optimum by up to {a mathematical formula}75% (in the cases of moderate, large and extreme budgets), while it achieves {a mathematical formula}61% of the optimal solution's performance in the scenario with small budgets.</a>
<a href="#18" id="18">We can also observe that the uniform and random algorithms are clearly worse than our approach for any budget size, as they do not take into account the workers' performance characteristics at all.</a>
<a href="#19" id="19">Interestingly, the budget-limited Ε -first and trialsourcing algorithms first perform better with an increasing budget (compared to the optimal), but their performance eventually starts to decrease.</a>
<a href="#20" id="20">This is due to two opposing factors — initially, an increasing budget means the approaches can spend more of their budget on exploiting the best workers; however, eventually the task limits become an issue, resulting in workers hitting their limits more frequently.</a>
<a href="#21" id="21">This trend is not displayed by the uniform approach, which consistently performs better with an increasing budget.</a>
<a href="#22" id="22">This is because it is not affected by task limits and because the relative advantage of the optimal solution decreases as more workers are included due to the larger budget.</a>
<a href="#23" id="23">Another interesting set of jobs is those with large budgets, as they present long-term investments that require careful task allocation.</a>
<a href="#24" id="24">Thus, we also vary the budget B from $5000 to {a mathematical formula}$20,000, to analyse the performance of the algorithms (for consistency fixing the set of candidates to those that charge at most $50 per hour).</a>
</body>
</html>