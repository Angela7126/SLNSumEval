<html>
<head>
<meta name="TextLength" content="SENT_NUM:21, WORD_NUM:574">
</head>
<body bgcolor="white">
<a href="#0" id="0">We present an approach to hybrid task and motion planning, in which state-based forward-chaining task planning is tightly coupled with motion planning and other forms of geometric reasoning.</a>
<a href="#1" id="1">Our approach is centered around the problem of geometric backtracking that arises in hybrid task and motion planning: in order to satisfy the geometric preconditions of the current action, a planner may need to reconsider geometric choices, such as grasps and poses, that were made for previous actions.</a>
<a href="#2" id="2">we present a combined task – motion planning algorithm that implements geometric backtracking;</a>
<a href="#3" id="3">Task planning querying motion planning.</a>
<a href="#4" id="4">In these approaches, a task plan is generated, and some of the actions involve motion planning problems which are solved by dedicated motion planners or other geometric reasoners.</a>
<a href="#5" id="5">Each motion planning problem is solved immediately, when the action is applied by the task planner.</a>
<a href="#6" id="6">Our combined task and motion planner utilizes a hybrid state representation, where certain predicates are evaluated as usual in the symbolic state component, but other predicates are evaluated in the geometric component.</a>
<a href="#7" id="7">This evaluation might involve immediate geometric computations, e.g., whether an object is within a region, or a search problem such as motion planning, which in our case we solve by using sampling-based motion planning techniques [11].</a>
<a href="#8" id="8">Task planning is done in a forward-chaining manner in the state space [10, Chap.</a>
<a href="#9" id="9">In order to refer to the geometric state in the preconditions and effects of actions, some of the symbolic terms and statements represent abstractions of the geometric representation used during motion planning.</a>
<a href="#10" id="10">A hybrid planning domain is a tuple {a mathematical formula}D= 〈 O,C,Pred,N,holds,ref 〉 , where: O is a set of action schemas; C is a representation of the geometric state space according to Section 3.1; Pred is a set of predicates; N is a set of constants (names); and holds and ref are as above.</a>
<a href="#11" id="11">For six unfeasible problem instances out of 17 (instance {a mathematical formula}i32a cannot be found to have no solution without constraint propagation given the time bound), there is a significant speedup owing to constraint propagation.</a>
<a href="#12" id="12">For all instances except one, most of the geometric reasoning time is spent on computing paths, and the part of time spent on propagating geometric constraints is insignificant in comparison.</a>
<a href="#13" id="13">For one single instance ({a mathematical formula}i21a), there is a significant slowdown of the planning process owing to constraint propagation, since planning finishes without having called RRT (i.e., the first action of the plan cannot be geometrically grounded).</a>
<a href="#14" id="14">For the 17 unfeasible problem instances, propagating geometric constraints prunes the search space of geometric states very much (from one to three orders of magnitude).</a>
<a href="#15" id="15">21, from the results shown with {a mathematical formula}fselREVCHRONO, we can see that propagating constraints speeds up the planning process, except for three problem instances out of 16.</a>
<a href="#16" id="16">For seven problem instances, the performance gain is significant.</a>
<a href="#17" id="17">Overall, propagating constraints prunes a tremendous number of explored geometric states (from one to two orders of magnitude).</a>
<a href="#18" id="18">The planner using heuristic function {a mathematical formula}fselCOLL ▹ fselREVCHRONO can solve twice as many problems with unconstrained orientations compared to using the other selection criteria, and constraint propagation speeds up the planning process in the unfeasible cases.</a>
<a href="#19" id="19">For the series of problems with constrained final orientation solved without propagating geometric constraints, no heuristic function dominates.</a>
<a href="#20" id="20">The last heuristic is {a mathematical formula}fselREVCHRONO, which results in performing a complete search with full geometric backtracking (see Section 4) since every previous action is possibly selected.</a>
</body>
</html>