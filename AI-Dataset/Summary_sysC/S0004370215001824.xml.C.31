<html>
<head>
<meta name="TextLength" content="SENT_NUM:10, WORD_NUM:199">
</head>
<body bgcolor="white">
<a href="#0" id="0">On the other hand, SAT-based MaxSAT algorithms basically reformulate a MaxSAT instance into a sequence of SAT instances (see [6], [41] for further information).</a>
<a href="#1" id="1">From the annual results of the international MaxSAT Evaluation [8], we can see that SAT-based solvers clearly dominate on industrial and some crafted instances, while branch-and-bound solvers dominate on random and some families of crafted instances.</a>
<a href="#2" id="2">We split our experiments into two parts.</a>
<a href="#3" id="3">We first show the performance of ISAC++ on partial MaxSAT instances: a benchmark set of crafted instances, one consisting of industrial instances, and finally a set that contains both crafted and industrial instances.</a>
<a href="#4" id="4">In the second set of experiments we train solvers for MaxSAT (MS), Weighted MaxSAT (WMS), Partial MaxSAT (PMS), and Weighted Partial MaxSAT (WPMS).</a>
<a href="#5" id="5">In these datasets we will combine instances from the crafted, industrial and random subcategories.</a>
<a href="#6" id="6">For each of these benchmark sets we built an instance-specifically tuned MaxSAT solver by applying the ISAC++ methodology.</a>
<a href="#7" id="7">We use a training set (which is always distinct from the test set on which we report results) of instances which we cluster.</a>
<a href="#8" id="8">For each cluster we tune a parametrization of QMaxSat-g2.</a>
<a href="#9" id="9">Then we combine these parameterizations with the other MaxSAT solvers described above.</a>
</body>
</html>