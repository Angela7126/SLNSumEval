<html>
<head>
<meta name="TextLength" content="SENT_NUM:21, WORD_NUM:764">
</head>
<body bgcolor="white">
<a href="#0" id="0">Window functionAny (computable) function w that returns, given a stream {a mathematical formula}S=(T, Υ ), and a time point {a mathematical formula}t ∈ N, a window {a mathematical formula}S ′ of S, is called a window function.</a>
<a href="#1" id="1">We now present an improved version of LARS [21], a Logic for Analytic Reasoning over Streams.</a>
<a href="#2" id="2">LARS extends propositional logic for streaming data by employing any window function w (Definition 3) in a window operator {a mathematical formula} ⊞ w.</a>
<a href="#3" id="3">Let P be a program, D be a data stream and {a mathematical formula}t ∈ N.</a>
<a href="#4" id="4">By {a mathematical formula}AS(P,D,t) we denote the set of answer streams of P for D at time t. The letter M always stands for the structure {a mathematical formula}M= 〈 I,W,B 〉 , where I is the considered answer stream, and W and B are implicit and fixed.</a>
<a href="#5" id="5">By Definition 15, the structure M (due to answer stream I) is a minimal model of the reduct {a mathematical formula}PM,t for D at time t. Importantly, this implies that M is a model of the original program P, and in fact a minimal model.</a>
<a href="#6" id="6">Minimality of answer streamsLet P be a LARS program, D be a data stream, t be a time point and{a mathematical formula}I ∈ AS(P,D,t).</a>
<a href="#7" id="7">Finally, let us consider LARS programs in which Α and each formula {a mathematical formula} Β i are positive, i.e., each atom occurs in the formula tree only under an even number of negations; we call such programs positive.</a>
<a href="#8" id="8">As for windows, we naturally call a window function wmonotonic, if for any streams S and {a mathematical formula}S ′ such that {a mathematical formula}S ⊆ S ′ and for any time {a mathematical formula}t ′ it holds that {a mathematical formula}w(S,t ′ ) ⊆ w(S ′ ,t ′ ).</a>
<a href="#9" id="9">We say that a stream {a mathematical formula}S=(T, Υ )is over a subset {a mathematical formula}A ′ ⊆ A of atoms {a mathematical formula}A, if {a mathematical formula}v(t) ∖ A ′ = ∅ for all {a mathematical formula}t ∈ T.</a>
<a href="#10" id="10">We study the complexity of the following reasoning tasks, where in the sequel W is a set of window functions that are evaluable in polynomial time, {a mathematical formula}B ⊆ A is a set of background atoms, and where Α is a ground LARS formula and P a ground LARS program.</a>
<a href="#11" id="11">Table 1 shows the computational complexity of reasoning in ground LARS, where {a mathematical formula} Α − and {a mathematical formula}P − denotes the class of formulas respectively programs where the nesting depth of window operators in formulas and rules is bounded by a constant.</a>
<a href="#12" id="12">Problem MC for LARS programs, i.e., given a structure{a mathematical formula}M= 〈 I,W,B 〉 , a data stream D, a program P, and a time point t, deciding whether{a mathematical formula}I=(T, Υ )is an answer stream of P for D at time t, is{a mathematical formula}PSpace-complete.</a>
<a href="#13" id="13">Deciding SAT for LARS programs, i.e., given{a mathematical formula}W,B,Dand some LARS program P, does P have some answer stream I over{a mathematical formula}A ′ for D at t, is{a mathematical formula}PSpace-complete.</a>
<a href="#14" id="14">As for the membership part, a guess for an answer stream of P w.r.t.</a>
<a href="#15" id="15">data stream D and a time point t has polynomial size and can be verified in polynomial space; the {a mathematical formula}PSpace-hardness is again inherited from model checking for LARS formulas (see Appendix).</a>
<a href="#16" id="16">Concerning time-based window operators {a mathematical formula} ⊞ ℓ ,u(d), as already observed above, evaluating the window function {a mathematical formula} Τ ℓ ,u(d)(S,t) on the stream S at time point t always yields a substream {a mathematical formula}S ′ =(T ′ , Υ ′ )=(T ′ , Υ |T ′ ), i.e., {a mathematical formula}S ′ restricts S to the timeline {a mathematical formula}T ′ .</a>
<a href="#17" id="17">If we apply a further time-based window on {a mathematical formula}S ′ , we obtain another stream of this form.</a>
<a href="#18" id="18">Overall, there are {a mathematical formula}O(|T|2) many such {a mathematical formula}S ′ ; if we take possible occurrence of the reset operator ▹ into account, there are {a mathematical formula}O(|T ⋆ |2) many such streams.</a>
<a href="#19" id="19">Thus, Theorem 10 holds for all LARS formulas that use only time-based window operators.</a>
<a href="#20" id="20">)Using snapshot rules of form (18), we obtain a LARS program {a mathematical formula} Δ L(q) by adding the following rules ({a mathematical formula}idx,n are from Example 22):{a mathematical formula} To establish the correspondence between the result of a set Q of CQL queries and its LARS translation {a mathematical formula} Δ L(Q), we first build a conversion of the input streams in Q to a LARS data stream.</a>
</body>
</html>