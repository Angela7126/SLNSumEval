<html>
<head>
<meta name="TextLength" content="SENT_NUM:51, WORD_NUM:1211">
</head>
<body bgcolor="white">
<a href="#0" id="0">We set up four different showcases for the QBF Gallery 2013.</a>
<a href="#1" id="1">Set eval2012r2-inc-preprocessed: Instances from the set eval2012r2 which were obtained by repeated, incremental preprocessing using the four preprocessors that were submitted to the showcase on preprocessing, as described in Section 3.2.</a>
<a href="#2" id="2">Set AABBCCDD: 234 instances resulting from the set eval2012r2 by incremental preprocessing, where the preprocessors are called in a tool chain in at most six rounds.</a>
<a href="#3" id="3">From the 345 instances, 111 instances were solved during incremental preprocessing.</a>
<a href="#4" id="4">Fixpoint detection was implemented so that preprocessing stops if the formula is no longer modified by any preprocessor.Set AADDBBCC: 241 instances resulting from the set eval2012r2 by incremental preprocessing.</a>
<a href="#5" id="5">From the 345 instances, 104 instances were solved during preprocessing.</a>
<a href="#6" id="6">In this showcase, we evaluated the solvers on the benchmark set eval2012r2.</a>
<a href="#7" id="7">However, both RAReQS and Nenofex solved five unique instances that no other solver could solve.</a>
<a href="#8" id="8">Table 4 presents detailed numbers of solved instances for each benchmark family in the set eval2012r2.</a>
<a href="#9" id="9">In the following experiment, every solver is run on the 276 instances that were preprocessed but not solved by Bloqqer.</a>
<a href="#10" id="10">Although Nenofex still solved the smallest number of instances, as in Table 3, it solved eight instances uniquely, which is the largest number of uniquely solved instances among all solvers.</a>
<a href="#11" id="11">On the original set eval2012r2 solvers with built-in preprocessing outperform solvers that do not have built-in preprocessing, as shown in Table 3.</a>
<a href="#12" id="12">We ran Bloqqer on all 345 instances in the benchmark set eval2012r2.</a>
<a href="#13" id="13">We ran each solver twice: once on the 276 instances after they have been preprocessed by Bloqqer, and once on the respective 276 original instances from the set eval2012r2 without preprocessing.</a>
<a href="#14" id="14">That is, in this experiment we exclude instances from the set eval2012r2 that were solved already by Bloqqer.</a>
<a href="#15" id="15">We classified the solvers into two categories, depending on the numbers of instances that were solved in these two runs.</a>
<a href="#16" id="16">In the category “ WANT Bloqqer ” , the columns “ Best Foot ” and “ Worst Foot ” report the numbers of instances that were solved by a solver with and without prior preprocessing by Bloqqer, respectively.</a>
<a href="#17" id="17">In contrast to that, in the category “ NO Bloqqer ” , these columns report the numbers of instances that were solved by a solver without and with prior preprocessing by Bloqqer, respectively.</a>
<a href="#18" id="18">That is, column “ Best Foot ” represents the best choice of a solver in terms of solved instances whether to run on the original instances or on the preprocessed ones.</a>
<a href="#19" id="19">In contrast to that, solvers in the “ WANT Bloqqer ” category perform better with prior preprocessing and thus dominate the solvers from the “ NO Bloqqer ” category in the ranking shown in Table 5.</a>
<a href="#20" id="20">In addition to the application of preprocessing prior to solving, the actual selection of benchmarks might have an influence on the performance of solvers and hence on the rankings in terms of solved instances.</a>
<a href="#21" id="21">A ranking of solvers obtained by experiments might be skewed if certain families of instances are overrepresented in the benchmark set that underlies the experimental evaluation.</a>
<a href="#22" id="22">Table 8 shows the rankings of the solvers for each of the seven randomly sampled benchmark sets according to the numbers of solved instances.</a>
<a href="#23" id="23">Furthermore, solvers that perform particularly well on certain families no longer have an advantage when running on benchmark sets where the selection of instances is biased towards that family.</a>
<a href="#24" id="24">The purpose of this showcase was to find out how many instances can be solved solely by preprocessing and to analyze the effects of preprocessing on the performance of solvers.</a>
<a href="#25" id="25">Then, we compared the sets of instances that were solved by a particular preprocessor.</a>
<a href="#26" id="26">Table 10 shows the results of running the four preprocessors on several benchmark sets described in Section 2.1.2.</a>
<a href="#27" id="27">Given the statistics in Table 10, the performance of the preprocessors varies with respect to the benchmark set.</a>
<a href="#28" id="28">For example, in the benchmark set conformant-planning, Hiqqer3e solves the largest number of instances whereas Hiqqer3p solves the largest number of instances in the set reduction-finding.</a>
<a href="#29" id="29">For example, in the set planning-CTE, all instances that are solved by Bloqqer are also solved by Hiqqer3p.</a>
<a href="#30" id="30">Table 12 shows the number of instances solved by each execution sequence.</a>
<a href="#31" id="31">Each execution sequence solves more instances than any of the individual preprocessors (Table 10, Table 11).</a>
<a href="#32" id="32">In total, 119 instances where solved by any of the execution sequences, which is 34% of the instances contained in the benchmark set eval2012r2.</a>
<a href="#33" id="33">With individual preprocessing, in total 87 instances (25%) were solved by any of the preprocessors (first line in Table 11).</a>
<a href="#34" id="34">According to the results shown in Table 12, the largest number of instances in the eval2012r2 were solved with the sequence ABCD.</a>
<a href="#35" id="35">Except for the set qbf-hardness, incremental preprocessing solves considerably more instances than the individual preprocessors (Table 11).</a>
<a href="#36" id="36">In an additional experiment, we tested selected execution sequences from Table 12 on the benchmark set eval2012r2, where each preprocessor is run twice in a row.</a>
<a href="#37" id="37">We selected the sequences to be tested according to the numbers of solved instances shown in Table 12 and the individual characteristics of the preprocessors.</a>
<a href="#38" id="38">Table 15 shows statistics on fixpoints and solved instances in each out of six rounds when running the five execution sequences from Table 14 on the set eval2012r2.</a>
<a href="#39" id="39">No instances are solved in rounds five and six.</a>
<a href="#40" id="40">As illustrated by Table 15, the numbers of instances solved by preprocessing using a particular execution sequence is sensitive to the ordering of the preprocessing tools in the sequence.</a>
<a href="#41" id="41">We selected the sequence {a mathematical formula}(A2B2C2D2)6 because it solved the largest number of instances (Table 15) and because {a mathematical formula}(ABCD)6 performed best according to Table 12.</a>
<a href="#42" id="42">Table 16, Table 17 show the performance of solvers on the two benchmark sets.</a>
<a href="#43" id="43">Furthermore, the total number of instances solved by preprocessing and by solving is different for the two benchmark sets.</a>
<a href="#44" id="44">For the set AABBCCDD, 111 instances were solved by preprocessing (first line in Table 15) and 92 instances were solved by the best solver (first line in Table 16), giving a total of 203 solved instances.</a>
<a href="#45" id="45">For the set AADDBBCC, 104 instances were solved by preprocessing (third line in Table 15) and 104 by the best solver (first line in Table 17), which gives 208 solved instances in total.</a>
<a href="#46" id="46">That is, although preprocessing alone using the execution sequence {a mathematical formula}(A2D2B2C2)6 solves fewer instances than when using the sequence {a mathematical formula}(A2B2C2D2)6, solving performs better on the instances that were preprocessed using the former and results in a higher total number of instances solved by preprocessing and solving.</a>
<a href="#47" id="47">We did not consider preprocessing in order to evaluate the solvers on the original instances as they were generated by the participants.</a>
<a href="#48" id="48">Table A.19, Table A.20, Table A.21, Table A.22, Table A.23, Table A.24 show detailed solving statistics for each of the considered benchmark sets, illustrating the different rankings of the solvers in terms of the numbers of solved formulas.</a>
<a href="#49" id="49">In that respect, the difference is more pronounced in the showcase on applications than in the showcase on solving due to the homogeneity of instances within a particular application benchmark family.</a>
<a href="#50" id="50">In this showcase, we used the benchmark set eval2012r2 without preprocessing in order to evaluate the generation of proofs and certificates on original instances.</a>
</body>
</html>