<html>
<head>
<meta name="TextLength" content="SENT_NUM:15, WORD_NUM:550">
</head>
<body bgcolor="white">
<a href="#0" id="0">Each agent holds two variables for holding the value of the current upper bound: {a mathematical formula}Received_UB, which is the upper bound received from the agent's parent, and UB which is the minimum between {a mathematical formula}Received_UB and the upper bound computation from data received from its descendants as described above.</a>
<a href="#1" id="1">In order to do so, the agent maintains two separate data structures, one for the LB_Reports received from its parent, and a second one, called {a mathematical formula}LB_Adjust, only for constrained descendants.</a>
<a href="#2" id="2">The {a mathematical formula}LB_Adjust only contains the difference between the LB_Reports received from the agent's parent, and the LB_Report received directly from the constrained descendant.</a>
<a href="#3" id="3">As a result, when an agent receives a CPA message it needs no computations, since its added cost for every value {a mathematical formula}vi is already calculated and stored at {a mathematical formula}Local_Costi(parent(Ai),vi) (marked for simplicity as {a mathematical formula}Local_Costi(vi)).</a>
<a href="#4" id="4">Note that agent {a mathematical formula}Ag has no Earlier Constrained Agent from {a mathematical formula}Aa since it is the root agent.</a>
<a href="#5" id="5">This means that {a mathematical formula}Aa is the first agent in the {a mathematical formula}Local_Costg data structure.</a>
<a href="#6" id="6">Next, {a mathematical formula}Ag receives the assignment y from agent {a mathematical formula}Ac and adds the constraint cost it has with that assignment to the costs of the previous line in the data structure (since {a mathematical formula}ECAg(Ac)=Aa).</a>
<a href="#7" id="7">Note, that at this point if agent {a mathematical formula}Ag receives a CPA message the last line of the {a mathematical formula}Local_Cost data structure will contain the sum of its constraints cost with all other agents, for each of its possible value assignment.</a>
<a href="#8" id="8">Agent {a mathematical formula}Ag can count on the fact that the assignment of {a mathematical formula}Aa is unchanged (or it would have received a LB_Request message about it), and simply add the constraint cost to the costs of the previous line.</a>
<a href="#9" id="9">When an agent with several children receives a Backtrack message (Procedure 7), it can conclude that the best UB it received from that sub tree is the optimal, so it can also be considered as the {a mathematical formula}Sub_Tree_LB.</a>
<a href="#10" id="10">Next, one needs to show that upon termination the {a mathematical formula}cost of the assignment found by the algorithm is optimal.</a>
<a href="#11" id="11">Assume by contradiction that an assignment with {a mathematical formula}cost ′ <cost (returned by the algorithm) exists.</a>
<a href="#12" id="12">The clear advantage of PT-FB over all other algorithms with respect to NCCCs is probably due to the {a mathematical formula}Local_Cost data structure, which greatly reduces the amount of computation done for every computation of a bound.</a>
<a href="#13" id="13">The entropy of agent {a mathematical formula}Ai is defined as follows:{a mathematical formula} where {a mathematical formula} Γ i is the set of neighbors of agent {a mathematical formula}Ai, {a mathematical formula}Sij is the set of possible states (i.e., possible constraints matrix values) of the constraint between {a mathematical formula}Ai and {a mathematical formula}Aj, and {a mathematical formula}pk is the probability of state k. Entropy measures the amount of the missing information about agent {a mathematical formula}Ai's constraints with its neighboring agents (in bits).</a>
<a href="#14" id="14">In order to quantify the amount of privacy violation of an algorithm, one needs to sum for all agents the difference between the entropy that measures their state before the start of the algorithm and the entropy at the end of the algorithm's run.</a>
</body>
</html>