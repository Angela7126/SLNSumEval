<html>
<head>
<meta name="TextLength" content="SENT_NUM:24, WORD_NUM:1351">
</head>
<body bgcolor="white">
<a href="#0" id="0">Similar as for previous notions of MCSs, we build on an abstract notion of a logic, which is a triple {a mathematical formula}L= 〈 KB,BS,acc 〉 , where KB is the set of admissible knowledge bases of L, BS is the set of possible belief sets, whose elements are called beliefs; and {a mathematical formula}acc:KB → 2BS is a function describing the semantics of L by assigning to each knowledge base a set of acceptable belief sets.</a>
<a href="#1" id="1">Contexts exchange information using bridge rules that are rules similar in spirit to those in logic programming and that determine which operations from {a mathematical formula}OPi to apply to {a mathematical formula}kbi in a context {a mathematical formula}Ci depending on beliefs held in other contexts, and, in our approach also on input from the outside.</a>
<a href="#2" id="2">Roughly, a set of bridge rules for {a mathematical formula}Ci describes which operations to apply to its knowledge base {a mathematical formula}kbi, depending on whether currently available beliefs and external inputs match the literals in the body.</a>
<a href="#3" id="3">Intuitively, rules with head op affect the computation of the semantics at the current time instant, while rules with head {a mathematical formula}next(op) affect the computation of the knowledge base(s) at the next time instant.</a>
<a href="#4" id="4">We use {a mathematical formula}BelM to denote the set of all belief states for M. To also capture the current external information, we introduce the notion of an input.</a>
<a href="#5" id="5">Given an input {a mathematical formula}I for M and a belief state {a mathematical formula}B for M, we define, for each {a mathematical formula}i ∈ {1, … ,n}, the sets</a>
<a href="#6" id="6">The bridge rules in {a mathematical formula}BRec do not refer to stream input but query other contexts:{a mathematical formula} Note that in the first bridge rule, we only import information for the case that will possibly be problematic, namely if the oven is turned on and hot, whereas, e.g., in the second, we use a schema to keep track of the position in all cases.</a>
<a href="#7" id="7">The management function of {a mathematical formula}Cec, {a mathematical formula}mngec(OP,kb), that adds information from the bridge rules temporarily as input facts to the context's knowledge base can be defined similar to the previous contexts.</a>
<a href="#8" id="8">Still, as we have seen for {a mathematical formula}Mal in Section 2.4, it sometimes makes sense to use essentially the same bridge rules with and without next: the bridge rule{a mathematical formula} ensures that the information about the position of Dave persists in the knowledge base, whereas{a mathematical formula} provides this information for computing equilibria in the current time instant.</a>
<a href="#9" id="9">We can obtain timestamps from the computation of knowledge base updates by using one context {a mathematical formula}Cclock that keeps information about the current logical time that uses the following bridge rule schemas and whose initial knowledge base is assumed to be empty:{a mathematical formula} The first rule is used for initialization ensuring that if no time information is yet available, the logical time is set to the value 0.</a>
<a href="#10" id="10">To deal with possible inconsistencies, {a mathematical formula}Ci has bridge rules of the form{a mathematical formula} for {a mathematical formula}j ∈ {1, … ,k}, where the operation {a mathematical formula}addC is meant to consistently add the information of sensor j to the context.</a>
<a href="#11" id="11">Moreover, a notion of consistency needs to be specific to the context and so we assume a property {a mathematical formula}cons(kb) that holds if the knowledge base kb is consistent (according to such domain specific notion of consistency).</a>
<a href="#12" id="12">Note that by considering {a mathematical formula}inp0c(OP)= ∅ , the solution only considers inconsistency of data on the streams.</a>
<a href="#13" id="13">For considering inconsistency between the streams and also the knowledge base {a mathematical formula}kbi of the context, we can set {a mathematical formula}inp0c(OP)=kbi.</a>
<a href="#14" id="14">Let M be an rMCS, {a mathematical formula}KB a configuration of knowledge bases for M, and {a mathematical formula}I an input stream for M. Then, M is consistent with respect to {a mathematical formula}KB and {a mathematical formula}I if there exists an equilibria stream of M given {a mathematical formula}KB and {a mathematical formula}I. M is strongly consistent with respect to {a mathematical formula}KB if, for every input stream {a mathematical formula}I for M, M is consistent with respect to {a mathematical formula}KB and {a mathematical formula}I.</a>
<a href="#15" id="15">Note the generality of this notion, which considers to be a repair essentially any sequence of bridge rules (defined by the repair function {a mathematical formula}R) that, if removed from the rMCS at their corresponding time point, will allow for an equilibrium at that time point.</a>
<a href="#16" id="16">We first prove that M has an equilibrium given {a mathematical formula}KB and {a mathematical formula}I, for any knowledge base configuration {a mathematical formula}KB= 〈 kb1, … ,kbn 〉 for M and input {a mathematical formula}I for M.We prove this by induction on the number of contexts of M, making use of the following simple observation: if M does not have cycles, then there exists some {a mathematical formula}i ∈ {1, … ,n} such that {a mathematical formula}refr(j,i) does not hold for any {a mathematical formula}j ∈ {1, … ,n} and {a mathematical formula}r ∈ BRj, where {a mathematical formula}refr(j,i) holds precisely when r is a bridge rule of context {a mathematical formula}Cj and {a mathematical formula}i:b occurs in the body of r. It is quite easy to see that if this condition is violated then a cycle necessarily exists.Let {a mathematical formula}n=1.</a>
<a href="#17" id="17">This follows easily from the fact that no set {a mathematical formula}appinow(I,B) depends on the choice of {a mathematical formula}B1.We have shown that the existence of an equilibrium for M is independent of the given knowledge base configuration {a mathematical formula}KB for M and input {a mathematical formula}I for M. This immediately implies that for any input stream {a mathematical formula}I for M (until Τ ), and any knowledge base configuration {a mathematical formula}KB for M, there exists an equilibria stream of M given {a mathematical formula}KB and {a mathematical formula}I.</a>
<a href="#18" id="18">Using Definition 23 and the induction hypothesis, it can be shown that these new beliefs are indeed contained in each grounded equilibrium, while all beliefs that do not occur in the intermediate fixpoint of the squared operator are not true in any grounded equilibrium of M given {a mathematical formula}KB and {a mathematical formula}I, in the very same way as usual for the alternating fixpoint, as e.g., for logic programs, on which this construction is based.Finally, regarding a limit ordinal {a mathematical formula} Α ′ with {a mathematical formula} Α ≤ Α ′ , the claim holds trivially by the induction hypothesis.</a>
<a href="#19" id="19">Then, we set {a mathematical formula}Icj={start} to initiate the simulation of T. At time {a mathematical formula}t ′ +1 the entry computing is contained in the knowledge base of context {a mathematical formula}Cc, activating the bridge rules in all contexts that are responsible for the simulation.</a>
<a href="#20" id="20">Note that the auxiliary belief nextPdefined is also used in the bridge rules of context {a mathematical formula}Cc for indicating that if the current state is not final and the transition function is undefined for the current state and input symbol, then the answer of the TM is no, indicated by {a mathematical formula}answer( ′ N ′ ).</a>
<a href="#21" id="21">Given an input stream {a mathematical formula}D= 〈 T,v 〉 and time point {a mathematical formula}t ∈ T, each LARS program P is associated with a set of streams, the answer streams of P for D at t. Since the semantics of a LARS program is defined for a fixed input data stream and for a particular time point, it is in fact mainly static.</a>
<a href="#22" id="22">Note that at each time instant the knowledge base contains only the relevant part of the (possibly infinite) input stream, meaning that information no longer valid is really discarded, and that the current time, given by the stream {a mathematical formula}Clock, is decoupled from the time steps at which equilibria are evaluated.</a>
<a href="#23" id="23">For that, given an evolving logic program P we aim to construct an rMCS {a mathematical formula}MP whose equilibria streams corresponds to the evolution stable models of P. First of all, note that the events in EVOLP can be modeled by the input streams of rMCSs.</a>
</body>
</html>