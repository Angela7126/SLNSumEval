<html>
<head>
<meta name="TextLength" content="SENT_NUM:18, WORD_NUM:693">
</head>
<body bgcolor="white">
<a href="#0" id="0">We contribute a learning algorithm that uses only observations of the performance of teams of two and three agents, in order to learn the agent capabilities and weighted graph structure of the weighted synergy graph.</a>
<a href="#1" id="1">The learning algorithm iterates through weighted graph structures, and computes the agent capabilities using the observations.</a>
<a href="#2" id="2">This assumption is reasonable as the effect of agents working in a team is captured by the compatibility function and their distance in the weighted synergy graph, so the variables representing their individual capabilities ({a mathematical formula}Ci,Cj) are independent.</a>
<a href="#3" id="3">When these four agents are in a team, their synergy is {a mathematical formula}C{a1,a2,a3,a5} ∼ N(17.8,0.8), which shows that the addition of the surgeon agent (instead of replacing the CPR agent) potentially benefits the team by lowering the variance of their performance.</a>
<a href="#4" id="4">However, adding agents does not always improve the team performance — the team consisting of all the agents has a synergy {a mathematical formula}C{a1,a2,a3,a4,a5} ∼ N(13.0,0.3), since the intern agent has a low capability and a poor task-based relationship with the other agents, as reflected by its high edge weights to other agents.</a>
<a href="#5" id="5">In this section, we explain how to use a weighted synergy graph to form the Δ -optimal team for the task, i.e., the team {a mathematical formula}A Δ ⁎ such that {a mathematical formula}P(PA Δ ⁎ ⩾ u)= Δ and {a mathematical formula}P(PA ⩾ u) ⩽ Δ ∀ A ⊆ A.</a>
<a href="#6" id="6">Using the weighted synergy graph model and the synergy equations, we can compute the synergy of a team of agents {a mathematical formula}A ⊆ A.</a>
<a href="#7" id="7">In this way, neighbor teams are generated from the current best estimate {a mathematical formula}Abest so as to effectively explore the space of possible teams of size n. The value of the neighbor team {a mathematical formula}vneighbor is computed with Evaluate, and the team is accepted or rejected based on the criteria of the approximation algorithm (e.g., simulated annealing uses a temperature schedule).</a>
<a href="#8" id="8">Thus, Algorithm 2 finds an approximation to the Δ -optimal team given its size n. The algorithm runs in {a mathematical formula}O(n2) (the synergy function {a mathematical formula}S takes {a mathematical formula}O(n2) and simulated annealing runs a constant number of iterations) if n is known.</a>
<a href="#9" id="9">To evaluate both team formation algorithms, and compare their performance (amount of the search space explored, and value of the formed team), we generated random weighted synergy graphs.</a>
<a href="#10" id="10">In this section, we contribute our learning algorithm that learns a weighted synergy graph using only observations of the performance of teams of agents in {a mathematical formula}A.</a>
<a href="#11" id="11">Specifically, let O be the set of observations, where {a mathematical formula} ∀ A ∈ A2,3, {a mathematical formula} ∃ oA,1, … ,oA,M such that each {a mathematical formula}oA,m is an observation of the performance of the team A at the task.</a>
<a href="#12" id="12">Since any subset of agents will attain a performance value at the task, and the synergy function {a mathematical formula}S is computed from the pairwise synergy function {a mathematical formula}S2, the observation set O is sufficient for learning.</a>
<a href="#13" id="13">In particular, {a mathematical formula}A2 provides information about the shortest distance between pairs of agents and the agents ʼ capabilities using the pairwise synergy function {a mathematical formula}S2 (Definition 3.7).</a>
<a href="#14" id="14">However, there are multiple solutions for any pairwise synergy (increasing capabilities versus decreasing distances), and {a mathematical formula}A3 provides information about the overall structure of the graph using the synergy function {a mathematical formula}S (Definition 3.8), and provides additional constraints to the learning problem.</a>
<a href="#15" id="15">The observation set O used for training, i.e., the performance of teams of two and three agents, is extracted from the hidden model, and then used to learn a new weighted synergy graph, which we compare against the hidden one.</a>
<a href="#16" id="16">However, a greater number of iterations of simulated annealing does not affect the performance of the learned unweighted synergy graph ({a mathematical formula}p=0.14).</a>
<a href="#17" id="17">Thus, a greater number of iterations of simulated annealing allows the weighted synergy graph learning algorithm to converge on a closer match to the hidden synergy graph, while the “ best ” unweighted synergy graph is already found within 1000 iterations and hence increasing the number of iterations has little effect.</a>
</body>
</html>