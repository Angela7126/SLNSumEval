<html>
<head>
<meta name="TextLength" content="SENT_NUM:10, WORD_NUM:283">
</head>
<body bgcolor="white">
<a href="#0" id="0">For example, if the model makes predictions about the actions of the modelled agent,{sup:1} then the modelling agent can incorporate those predictions in its planning procedure to optimise its interaction with the modelled agent.</a>
<a href="#1" id="1">The process of constructing models of other agents, sometimes referred to as agent modelling or opponent modelling,{sup:2} often involves some form of learning since the model may be based on information observed from the current interaction and possibly data collected in past interactions.</a>
<a href="#2" id="2">Section 4.1.1).Independent or correlated action choices?If the modelling agent is interacting with more than one other agent, then a possible question is whether the other agents choose their actions independently from each other.</a>
<a href="#3" id="3">In essence, this method maintains a set of “ cases ” along with the observed actions of the modelled agent in each encountered case.</a>
<a href="#4" id="4">Similar case-based methods for modelling the behaviour of other agents were proposed by Borck et al.</a>
<a href="#5" id="5">Based on the above intuition, type-based reasoning methods assume that the modelled agent has one of several known types.</a>
<a href="#6" id="6">For example, an agent model may make predictions about more abstract properties such as whether the play style of the modelled agent is “ aggressive ” or “ defensive ” (e.g.</a>
<a href="#7" id="7">While the modelling methods discussed in the previous sections do not model such nested beliefs, methods of recursive reasoning use explicit representations of nested beliefs and “ simulate ” the reasoning processes of other agents to predict their actions.</a>
<a href="#8" id="8">Most methods surveyed in the earlier sections use models that make predictions about a single agent, following the agent model shown in Fig.</a>
<a href="#9" id="9">While the above methods learn and use models of opponent teams, an agent may also need to model its own team.</a>
</body>
</html>