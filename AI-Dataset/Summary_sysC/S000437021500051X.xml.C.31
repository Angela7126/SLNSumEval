<html>
<head>
<meta name="TextLength" content="SENT_NUM:23, WORD_NUM:567">
</head>
<body bgcolor="white">
<a href="#0" id="0">A hybrid planning domain is a tuple {a mathematical formula}D= 〈 O,C,Pred,N,holds,ref 〉 , where: O is a set of action schemas; C is a representation of the geometric state space according to Section 3.1; Pred is a set of predicates; N is a set of constants (names); and holds and ref are as above.</a>
<a href="#1" id="1">A hybrid planning problem is a tuple {a mathematical formula}Pb= 〈 s0,D,g 〉 , where: {a mathematical formula}s0=(syms0,geos0) is the initial state consisting of a symbolic state {a mathematical formula}syms0 and a geometric state {a mathematical formula}geos0; D is a hybrid planning domain; and g is a goal formula.</a>
<a href="#2" id="2">A solution to a hybrid planning problem is a hybrid plan P that is valid when starting from {a mathematical formula}s0, and for which g holds in the final state {a mathematical formula}sn.</a>
<a href="#3" id="3">When a symbolic backtrack occurs, the constraints associated with the action are removed from the network, and the set of intervals {a mathematical formula}D is restored.</a>
<a href="#4" id="4">For six unfeasible problem instances out of 17 (instance {a mathematical formula}i32a cannot be found to have no solution without constraint propagation given the time bound), there is a significant speedup owing to constraint propagation.</a>
<a href="#5" id="5">For all instances except one, most of the geometric reasoning time is spent on computing paths, and the part of time spent on propagating geometric constraints is insignificant in comparison.</a>
<a href="#6" id="6">For one single instance ({a mathematical formula}i21a), there is a significant slowdown of the planning process owing to constraint propagation, since planning finishes without having called RRT (i.e., the first action of the plan cannot be geometrically grounded).</a>
<a href="#7" id="7">For the 17 unfeasible problem instances, propagating geometric constraints prunes the search space of geometric states very much (from one to three orders of magnitude).</a>
<a href="#8" id="8">In Fig.</a>
<a href="#9" id="9">20 and Fig.</a>
<a href="#10" id="10">21, from the results shown with {a mathematical formula}fselREVCHRONO, we can see that propagating constraints speeds up the planning process, except for three problem instances out of 16.</a>
<a href="#11" id="11">For seven problem instances, the performance gain is significant.</a>
<a href="#12" id="12">Overall, propagating constraints prunes a tremendous number of explored geometric states (from one to two orders of magnitude).</a>
<a href="#13" id="13">The planner using heuristic function {a mathematical formula}fselCOLL ▹ fselREVCHRONO can solve twice as many problems with unconstrained orientations compared to using the other selection criteria, and constraint propagation speeds up the planning process in the unfeasible cases.</a>
<a href="#14" id="14">For the series of problems with constrained final orientation solved without propagating geometric constraints, no heuristic function dominates.</a>
<a href="#15" id="15">Constraint propagation is very helpful for coping with problems with constrained orientations, where twice as many problem instances have been solved.</a>
<a href="#16" id="16">In the previous section, we studied the effect of the selection heuristic criteria and of constraint propagation on geometric backtrack search.</a>
<a href="#17" id="17">This was done by focusing on single sequences of actions.</a>
<a href="#18" id="18">In the present section, we evaluate the effect of propagating geometric constraints on the global search process, i.e., combining the symbolic search space and the geometric search space.</a>
<a href="#19" id="19">As in the previous experiments, our planning system looks for feasible plans without considering any optimization criterion.</a>
<a href="#20" id="20">So, the planning process stops, as soon as the planner finds a feasible plan (see line 6 in Algorithm 1).</a>
<a href="#21" id="21">The action selection process during geometric backtracking is guided using the reversed chronology heuristic function.</a>
<a href="#22" id="22">The last heuristic is {a mathematical formula}fselREVCHRONO, which results in performing a complete search with full geometric backtracking (see Section 4) since every previous action is possibly selected.</a>
</body>
</html>