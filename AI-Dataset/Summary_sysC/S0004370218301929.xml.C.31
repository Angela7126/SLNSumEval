<html>
<head>
<meta name="TextLength" content="SENT_NUM:26, WORD_NUM:762">
</head>
<body bgcolor="white">
<a href="#0" id="0">Definition 3</a>
<a href="#1" id="1">Window functionAny (computable) function w that returns, given a stream {a mathematical formula}S=(T, Υ ), and a time point {a mathematical formula}t ∈ N, a window {a mathematical formula}S ′ of S, is called a window function.</a>
<a href="#2" id="2">Definition 7</a>
<a href="#3" id="3">Time-based windows and tuple-based windows shrink the timeline and thus drop data outside their defined scope.</a>
<a href="#4" id="4">Dually, filter windows leave the timeline as it is and drop all but a specified set of atoms.</a>
<a href="#5" id="5">Accordingly, given a stream {a mathematical formula}S=(T, Υ ), we define for a set {a mathematical formula}A ⊆ G of ground atoms, the projection of Υ to A by {a mathematical formula} Υ |A(t)= Υ (t) ∩ A for all {a mathematical formula}t ∈ N, and the projection of S to A by {a mathematical formula}S|A=(T, Υ |A).</a>
<a href="#6" id="6">This already yields the filter window.</a>
<a href="#7" id="7">Filter windowLet {a mathematical formula}S=(T, Υ ) be a stream, {a mathematical formula}t ∈ N, and {a mathematical formula}A ⊆ G be a set of atoms.</a>
<a href="#8" id="8">The filter window function for A (at time t) is defined by{a mathematical formula} Note that the filter window function works in a time-independent manner, i.e., it always retains the timeline and returns the same result for all {a mathematical formula}t ∈ N, in particular, for {a mathematical formula}t ∉ T.</a>
<a href="#9" id="9">Finally, let us consider LARS programs in which Α and each formula {a mathematical formula} Β i are positive, i.e., each atom occurs in the formula tree only under an even number of negations; we call such programs positive.</a>
<a href="#10" id="10">As for windows, we naturally call a window function wmonotonic, if for any streams S and {a mathematical formula}S ′ such that {a mathematical formula}S ⊆ S ′ and for any time {a mathematical formula}t ′ it holds that {a mathematical formula}w(S,t ′ ) ⊆ w(S ′ ,t ′ ).</a>
<a href="#11" id="11">Then we obtain</a>
<a href="#12" id="12">We say that a stream {a mathematical formula}S=(T, Υ )is over a subset {a mathematical formula}A ′ ⊆ A of atoms {a mathematical formula}A, if {a mathematical formula}v(t) ∖ A ′ = ∅ for all {a mathematical formula}t ∈ T.</a>
<a href="#13" id="13">We study the complexity of the following reasoning tasks, where in the sequel W is a set of window functions that are evaluable in polynomial time, {a mathematical formula}B ⊆ A is a set of background atoms, and where Α is a ground LARS formula and P a ground LARS program.</a>
<a href="#14" id="14">Theorem 7</a>
<a href="#15" id="15">Deciding SAT for LARS programs, i.e., given{a mathematical formula}W,B,Dand some LARS program P, does P have some answer stream I over{a mathematical formula}A ′ for D at t, is{a mathematical formula}PSpace-complete.</a>
<a href="#16" id="16">As for the membership part, a guess for an answer stream of P w.r.t.</a>
<a href="#17" id="17">data stream D and a time point t has polynomial size and can be verified in polynomial space; the {a mathematical formula}PSpace-hardness is again inherited from model checking for LARS formulas (see Appendix).</a>
<a href="#18" id="18">Stream labeling.</a>
<a href="#19" id="19">Given a structure {a mathematical formula}M= 〈 S ⋆ ,W,B 〉 , a substream {a mathematical formula}S ⊆ S ⋆ and a window graph {a mathematical formula}WGSB=(N,E) for {a mathematical formula}(M,S, Φ ), we label each pair {a mathematical formula}(S,t) such that {a mathematical formula}S ∈ N and {a mathematical formula}t ∈ T ⋆ , where {a mathematical formula}S=(T, Υ ), with relevant formulas that hold in stream S at time t due to the evaluation base {a mathematical formula}SB.</a>
<a href="#20" id="20">We define the label set {a mathematical formula}LSB(S,t) by the following steps:</a>
<a href="#21" id="21">Concerning time-based window operators {a mathematical formula} ⊞ ℓ ,u(d), as already observed above, evaluating the window function {a mathematical formula} Τ ℓ ,u(d)(S,t) on the stream S at time point t always yields a substream {a mathematical formula}S ′ =(T ′ , Υ ′ )=(T ′ , Υ |T ′ ), i.e., {a mathematical formula}S ′ restricts S to the timeline {a mathematical formula}T ′ .</a>
<a href="#22" id="22">If we apply a further time-based window on {a mathematical formula}S ′ , we obtain another stream of this form.</a>
<a href="#23" id="23">Overall, there are {a mathematical formula}O(|T|2) many such {a mathematical formula}S ′ ; if we take possible occurrence of the reset operator ▹ into account, there are {a mathematical formula}O(|T ⋆ |2) many such streams.</a>
<a href="#24" id="24">Thus, Theorem 10 holds for all LARS formulas that use only time-based window operators.</a>
<a href="#25" id="25">By this proposition, we can reduce model checking of a LARS formula Φ on an input stream {a mathematical formula}S=(T, Υ ), to model checking an ad-hoc PLTL formula constructed from Φ , M and the specific time point {a mathematical formula}t ∈ T, on a single path {a mathematical formula} Π (M).</a>
</body>
</html>