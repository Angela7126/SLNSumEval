<html>
<head>
<meta name="TextLength" content="SENT_NUM:19, WORD_NUM:454">
</head>
<body bgcolor="white">
<a href="#0" id="0">An inherent computational problem of conceptual blending is to find a common ground, called generic space, between the two input concepts [27].</a>
<a href="#1" id="1">Once the generic space has been identified, one can develop possible blends by specialising the generic space with elements from the input concepts in a meaningful way.</a>
<a href="#2" id="2">We provide a blending framework that accepts input concepts in form of semiotic systems (see Sec.</a>
<a href="#3" id="3">These constitutive elements can be organised in a conceptual integration network, i.e., the network of all input spaces, generic spaces and blend spaces together with the selective projections that model a particular blending process.</a>
<a href="#4" id="4">The generalisation of a description of a language {a mathematical formula}L is usually done by means of generalisation operators [61].</a>
<a href="#5" id="5">The blending theory in principle allows for any finite number {a mathematical formula}S ≥ 2 input specifications, but in the implementation we use {a mathematical formula}S=2 for simplicity.</a>
<a href="#6" id="6">Towards this, the input PCS {a mathematical formula}s1, {a mathematical formula}s2 are first translated into ASP facts, as described in Sec.</a>
<a href="#7" id="7">Each transition is represented by a fact {a mathematical formula}exec( Γ ,s,t), where t is an iterator and Γ is a transition operator that removes or renames elements in the input specifications (see Sec.</a>
<a href="#8" id="8">For the removal of other elements we have a similar precondition, i.e., {a mathematical formula}exOtherSpecWithoutElem(s,e,t), which denotes that an element can only be removed if it is not involved in another specification.</a>
<a href="#9" id="9">Commonalisation, removal, and transition pathsLet {a mathematical formula}S={s1, … ,s|S|} be input specifications to be blended.</a>
<a href="#10" id="10">The removal and generic space search process is done using another choice rule as follows:{a mathematical formula}</a>
<a href="#11" id="11">For example, consider the predicate {a mathematical formula}liveIn:Person×House of the House specification and the predicate {a mathematical formula}ride:Person×Boat of the Boat specification, as shown in Fig.</a>
<a href="#12" id="12">Since {a mathematical formula}liveIn_ride is commonalised, it carries the information of both input spaces and it should therefore also have the joint priority of both input elements, as implemented by summing up the priorities of the corresponding operators liveIn and ride in the input spaces (see Definition 5).</a>
<a href="#13" id="13">The morphisms between the generic space and the input spaces are shown in the right part of Fig.</a>
<a href="#14" id="14">So far we only considered input concepts from the same domains, i.e., we blend chord progressions with chord progressions and mathematical theories with mathematical theories.</a>
<a href="#15" id="15">The general theory of a group in mathematics is the combination of a set of elements {a mathematical formula}G and a binary operation ∼ .</a>
<a href="#16" id="16">{a mathematical formula}</a>
<a href="#17" id="17">The technique of employing conceptual blending allows elements of music theory to exist in the blend, together with elements from the mathematical theory of cyclic groups.</a>
<a href="#18" id="18">Amalgam-based conceptual blending have been developed to blend {a mathematical formula}EL++ concepts in [10], [11], [13].</a>
</body>
</html>