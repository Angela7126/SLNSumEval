<html>
<head>
<meta name="TextLength" content="SENT_NUM:10, WORD_NUM:476">
</head>
<body bgcolor="white">
<a href="#0" id="0">The first extension examines the method by which we search for acyclicity constraints to add, the second introduces additional implied constraints of a different form, and the third attempts to ensure that the constraints found by other methods rule out greater invalid regions of the search space.</a>
<a href="#1" id="1">In this approach, after the relaxed problem has been solved, additional linear constraints are added to the problem which separate the current relaxed solution from the space of any valid integer solutions, i.e.</a>
<a href="#2" id="2">For a network with {a mathematical formula}|V| nodes, there are {a mathematical formula}2|V − 1| − 1 cluster constraints; rather than initially adding such a large number of constraints, they are only added explicitly to the problem as cuts if a relaxed solution would violate them.</a>
<a href="#3" id="3">The improvement in the speed with which the simplex algorithm runs though must of course be weighed against the fact that additional time will be needed to identify the violated constraints to add and the fact that the simplex algorithm must be run repeatedly, rather than once at each node of the search tree.</a>
<a href="#4" id="4">Should the algorithm at any stage try to select a parent set for a variable which is impossible (due to user supplied constraints or the current search tree branching choices made, for example), the algorithm simply aborts without returning a heuristic solution.</a>
<a href="#5" id="5">First note that, due to (2), cluster constraints can be written as follows:{a mathematical formula} Intuitively, (4) says that not all nodes in the cluster C can have parents in C. Our goal is to find a cluster C such that the LHS of inequality (4) exceeds {a mathematical formula}|C| − 1 by as much as possible when the values of the current relaxed solution {a mathematical formula}x ⁎ are used for the variables {a mathematical formula}I(W → v).</a>
<a href="#6" id="6">We therefore outline a different method of identifying cuts to add, based on directly identifying any cycles in the graph encoded by the current relaxed solution and then adding cluster cuts ruling each of them out.</a>
<a href="#7" id="7">The convex hull P appears to be extremely complicated in the general case, though we have empirically found the complete set of constraints defining the convex hull of the problem when the number of nodes in the network is limited to 3 or 4.</a>
<a href="#8" id="8">This would fully capture the interactions between the parameters associated with the different extensions, but would probably be infeasible to conduct due to the combinatorial increase in the size of the parameter space and would make it difficult to assess the individual impact of each of the extensions.</a>
<a href="#9" id="9">The motivation for considering running both methods is that the cycle finding algorithm only searches for cycles in the portion of the graph which corresponds to edges which are non-fractional in the current LP solution, whereas the sub-IP will also detect violated cluster constraints involving fractional variables.</a>
</body>
</html>