<html>
<head>
<meta name="TextLength" content="SENT_NUM:9, WORD_NUM:353">
</head>
<body bgcolor="white">
<a href="#0" id="0">When applied to the standard set of instances this approach improves heuristic values on initial states, detects considerable more deadlocks in random states, and doubles the number of optimally solved instances compared to previous methods.</a>
<a href="#1" id="1">A weighted state space problem {a mathematical formula}P=(S,A,s,T,w) consists of a set of states S, a finite set of actions A, an initial state {a mathematical formula}s ∈ S, a set of goal states {a mathematical formula}T ⊆ S, and a cost function {a mathematical formula}w:A → R.</a>
<a href="#2" id="2">Each action {a mathematical formula}a ∈ A is a function {a mathematical formula}a:S → S that transforms a state into a successor state incurring cost {a mathematical formula}w(a).</a>
<a href="#3" id="3">An abstraction transformation maps states u in the set of states S to abstract states{a mathematical formula}u ′ in the set of abstract states{a mathematical formula}S ′ .</a>
<a href="#4" id="4">The set of actions A induces corresponding actions {a mathematical formula}A ′ , and the set goal states T a set of corresponding abstract goal states{a mathematical formula}T ′ .</a>
<a href="#5" id="5">In this section, we describe how instances can be decomposed into a maze zone and a goal zone and define an intermediate goal state, explain the construction and storage of the PDB, introduce a new heuristic, and show how to compute it efficiently.</a>
<a href="#6" id="6">Suppose we know, for all subsets of squares {a mathematical formula}P ⊆ Q of size {a mathematical formula}k ′ and positions of the man m the minimum cost {a mathematical formula} Δ (P,m) of solving this subproblem with the {a mathematical formula}k ′ stones placed at squares P. (As explained above, these values are computed by an exhaustive backwards search and stored in a PDB.)</a>
<a href="#7" id="7">Using the proposed heuristic function and breaking ties by generation order explores more than 5 million nodes to solve the instance, since several possible configurations of the stones on goal squares are explored before reaching the goal node.</a>
<a href="#8" id="8">To investigate the potential of using PDBs with larger abstractions, we determined for all instances the smallest {a mathematical formula}k ′ such that the optimal solution can be found within our standard resource limits (one hour, 20M nodes).</a>
</body>
</html>