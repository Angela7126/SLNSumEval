<html>
<head>
<meta name="TextLength" content="SENT_NUM:15, WORD_NUM:410">
</head>
<body bgcolor="white">
<a href="#0" id="0">To better illustrate the workings of subdimensional expansion, we present an example for multirobot path planning on graphs.</a>
<a href="#1" id="1">Planning is done using the {a mathematical formula}M ⁎ algorithm, an implementation of subdimensional expansion that uses {a mathematical formula}A ⁎ as the underlying planner.</a>
<a href="#2" id="2">{a mathematical formula}M ⁎ will be described in detail in Section 4, but for the purposes of this example, {a mathematical formula}M ⁎ can be described as being equivalent to running {a mathematical formula}A ⁎ on a small search graph which grows every time a robot – robot collision is found.</a>
<a href="#3" id="3">In this section the {a mathematical formula}M ⁎ algorithm will be described in detail.</a>
<a href="#4" id="4">{a mathematical formula}M ⁎ is an implementation of subdimensional expansion for multirobot path planning when the configuration space of each robot can be described by a graph.</a>
<a href="#5" id="5">{a mathematical formula}M ⁎ uses {a mathematical formula}A ⁎ [1] as the underlying planner, because {a mathematical formula}A ⁎ is optimal, meaning it finds optimal paths, and complete, meaning that it will take finite time to either find a path or determine that no path exists.</a>
<a href="#6" id="6">{a mathematical formula}M ⁎ will be shown to have the same optimality and completeness properties as {a mathematical formula}A ⁎ .</a>
<a href="#7" id="7">The section will end with a discussion of the performance of {a mathematical formula}M ⁎ .</a>
<a href="#8" id="8">We proceed by showing that if no solution exists, {a mathematical formula}M ⁎ will terminate in finite time without returning a path.</a>
<a href="#9" id="9">We then show that {a mathematical formula}M ⁎ will eventually find the optimal path if one of two conditions always hold: {a mathematical formula}Gsch contains the optimal path, or {a mathematical formula}Gsch contains an unexplored path containing a robot – robot collision which costs no more than the optimal path.</a>
<a href="#10" id="10">We complete the proof by showing that at least one of the two conditions always holds.</a>
<a href="#11" id="11">Proof</a>
<a href="#12" id="12">If the configuration graph G does not contain an optimal path, then {a mathematical formula}M ⁎ will terminate in finite time without returning an invalid path (Lemma 1).</a>
<a href="#13" id="13">If G does contain an optimal path, then the search graph must always contain either the optimal path, or an unexplored path which costs no more than the optimal path (Lemma 7), which implies that then {a mathematical formula}M ⁎ will find the optimal path in finite time (Lemma 2).</a>
<a href="#14" id="14">{a mathematical formula}M ⁎ will thus find the optimal path in finite time, if one exists, or terminate in finite time if no path exists.</a>
</body>
</html>