<html>
<head>
<meta name="TextLength" content="SENT_NUM:20, WORD_NUM:561">
</head>
<body bgcolor="white">
<a href="#0" id="0">TruncationRule 2 Rule 2 is applicable for both underconsistent and overconsistent states.</a>
<a href="#1" id="1">The underlying principle of this rule is very simple.</a>
<a href="#2" id="2">We observe that LPA* expands inconsistent states in an increasing order of their Key values, until the goal state has the lowest Key value in OPEN.</a>
<a href="#3" id="3">Therefore, for any state s selected for expansion, {a mathematical formula}Key1(s)=min(g(s),v(s))+h(s) provides a lower bound on the minimum-cost solution, i.e., {a mathematical formula}Key1(s) ≤ g ⁎ (sgoal).</a>
<a href="#4" id="4">Now, if {a mathematical formula}g Π (sgoal) ≤ Ε ⋅ Key1(s), i.e., the cost of the solution obtained by following the back-pointers from {a mathematical formula}sgoal to {a mathematical formula}sstart is not more than {a mathematical formula} Ε ⋅ Key1(s), we have {a mathematical formula}g Π (sgoal) ≤ Ε ⋅ Key1(s) ⇒ g Π (sgoal) ≤ Ε ⋅ g ⁎ (sgoal).</a>
<a href="#5" id="5">In other words, the current solution is already within the Ε bound of the optimal cost solution.</a>
<a href="#6" id="6">Therefore, we can truncate s without violating the bound.</a>
<a href="#7" id="7">Moreover, as the Key values of expanded states in LPA* are monotonically non-decreasing during the execution of ComputePath, the same condition ensures that expansion of any other state {a mathematical formula}s ′ in OPEN cannot improve the current bound, i.e., we may terminate the current replanning iteration at this point.</a>
<a href="#8" id="8">Unfortunately, this only works for the truncation of overconsistent states, and not for underconsistent states.</a>
<a href="#9" id="9">This is due to the fact that in AD*, heuristic values for overconsistent states are inflated, whereas an underconsistent state uses an uninflated heuristic.</a>
<a href="#10" id="10">Therefore, when an overconsistent {a mathematical formula}s1 is selected for expansion (in AD*), we have {a mathematical formula}g(s1) ≤ Ε 1 ⋅ g ⁎ (s1), but when an underconsistent state ({a mathematical formula}s2) is selected for expansion, there is no guarantee that {a mathematical formula}v(s2) ≤ Ε 1 ⋅ g ⁎ (s2).</a>
<a href="#11" id="11">Now, if we apply the truncation rule (say Truncation Rule 1) to a state s having {a mathematical formula}v(s) ≥ Ε 1 ⋅ g ⁎ (s), the total path cost {a mathematical formula}C ≤ Ε 2 ⋅ (v(s)+h(s)) does not ensure that {a mathematical formula}C ≤ Ε 1 ⋅ Ε 2 ⋅ (g ⁎ (s)+h(s)).</a>
<a href="#12" id="12">Therefore, in such a case, we cannot guarantee bounded suboptimal termination.</a>
<a href="#13" id="13">Proof</a>
<a href="#14" id="14">InComputePath, any state s selected for expansion/truncation (i.e., if{a mathematical formula}Key(s) ≤ Key(u), ∀ u ∈ OPENat line 30,Algorithm 8) satisfies,{a mathematical formula}g(s) ≤ Ε 1 ⋅ g ⁎ (s)if{a mathematical formula}v(s) ≥ g(s)and{a mathematical formula}v(s) ≤ Ε 1 ⋅ g ⁎ (s)if{a mathematical formula}v(s)<g(s)and{a mathematical formula}s ∈ MARKED.While this can be proved in the same manner as Lemma 5, we may note two significant differences.</a>
<a href="#15" id="15">First, the g and v values are now within {a mathematical formula} Ε 1 bound of the optimal path cost ({a mathematical formula}g ⁎ ).</a>
<a href="#16" id="16">This stems from the use of inflated heuristic in ATD*.</a>
<a href="#17" id="17">Therefore, in the proof, Equation (3) should be replaced by the following,{a mathematical formula}More importantly, the bound on v values is only true for underconsistent states in MARKED.</a>
<a href="#18" id="18">The states that are not in MARKED use an uninflated heuristic, i.e., their Key is given by {a mathematical formula}[v(s)+h(s);v(s)], which will not satisfy the inequalities used in Equation (9).</a>
<a href="#19" id="19">However, for a state {a mathematical formula}s ∈ MARKED, {a mathematical formula}Key(s) is modified to {a mathematical formula}[v(s)+ Ε 1 ⋅ h(s);v(s)] which ensures that the equation and subsequently the bound is satisfied.</a>
</body>
</html>