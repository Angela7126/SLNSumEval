<html>
<head>
<meta name="TextLength" content="SENT_NUM:9, WORD_NUM:405">
</head>
<body bgcolor="white">
<a href="#0" id="0">Here, a problem is specified through a so-called model consisting of the variables of interest and the possible values they can take, the constraints that need to be satisfied, and possibly an optimization function.</a>
<a href="#1" id="1">This example demonstrates the appeal of using a modeling language like MiniZinc for pattern mining: the formulation is high-level, declarative and close to the mathematical notation, it allows for user-defined constraints like the cover relation between items and transactions, and it is independent of the actual solution method.</a>
<a href="#2" id="2">Modeling a mining problem in MiningZinc follows the same methodology as modeling a constraint program: one has to express a problem in terms of variables with a domain, and constraints over these variables; for example, a set variable with a minimum frequency constraint over data.</a>
<a href="#3" id="3">Concretely, an execution plan is a sequence of algorithms that together can handle all the constraints that are present in the model and hence produce the required output.</a>
<a href="#4" id="4">Specifically, we describe a state of the rewrite process with a tuple{a mathematical formula} where L is an execution plan, and C is a set of constraints and annotations.</a>
<a href="#5" id="5">The initial state in the rewrite process is {a mathematical formula}( ∅ ,C), where C is the set of all FlatZinc constraints and the empty set indicates the initially empty execution plan; the final state in the rewrite process is {a mathematical formula}(L, ∅ ), where L represents a valid execution plan for the initial set of constraints C, and the empty set indicates that all constraints have been evaluated in the execution plan (modulo the optional annotations).</a>
<a href="#6" id="6">When C Θ is the set of constraints subsumed by the algorithm, the set {a mathematical formula}CM\C Θ contains all remaining constraints; if among these remaining constraints there are constraints that rely on the functionally defined by variables that are not in the mode definition of the algorithm, we can remove all constraints except the functional definition constraints necessary to calculate these variables.</a>
<a href="#7" id="7">An alternative rule could be one in which only a subset of the remaining constraints is selected for processing by a CP system; this would enable more diverse combinations where specialized algorithms are used after CP systems.</a>
<a href="#8" id="8">Hence, even for large datasets for which a CP-based approach is not possible, MiningZinc can still be used and can even continue to take advantage of generic CP technology in the post-processing step (in case only a subset of the constraints need checking).</a>
</body>
</html>