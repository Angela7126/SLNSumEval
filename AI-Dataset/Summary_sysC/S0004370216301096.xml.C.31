<html>
<head>
<meta name="TextLength" content="SENT_NUM:19, WORD_NUM:555">
</head>
<body bgcolor="white">
<a href="#0" id="0">Next, in Section 7, we consider approximation algorithms for OWA-Winner for the case where agents have non-finicky utilities.</a>
<a href="#1" id="1">It turns out that for non-finicky utilities we can sometimes obtain much better approximability guarantees than in the general setting.</a>
<a href="#2" id="2">It is easy to note that for K-best OWA (that is, for the family of constant OWAs {a mathematical formula} Α =(1, … ,1)) the problem is in P.</a>
<a href="#3" id="3">Proof of Theorem 15</a>
<a href="#4" id="4">Let I be an instance of the Densest-K-Subgraph problem with graph {a mathematical formula}G=(V,E) and positive integer K. From I we construct an instance {a mathematical formula}I ′ of Α -OWA-Winner, where the set of agents N is E, the set of items is {a mathematical formula}A=V ∪ {d1, … ,d ℓ − 2} (or V if {a mathematical formula} ℓ =2), and we seek a winner set of size {a mathematical formula}K+ ℓ − 2.</a>
<a href="#5" id="5">Agents utilities are set as follows: For each agent e and each item {a mathematical formula}dj, {a mathematical formula}1 ≤ j ≤ ℓ − 2, the utility of e for {a mathematical formula}dj is 1.</a>
<a href="#6" id="6">If e is an edge in G than connects vertices u and v then agent e's utility for u and v is 1 and is 0 for the remaining items from V.It is easy too see that the items {a mathematical formula}d1, … ,d ℓ − 2 all belong to every optimal solution for {a mathematical formula}I ′ .</a>
<a href="#7" id="7">It is also easy to see that in each optimal solution the utility of each agent e is nonzero (and exactly equal to {a mathematical formula} Α ℓ , the ℓ -th entry of the OWA Α used) if and only if both items corresponding to the vertices connected by e are included in the solution.</a>
<a href="#8" id="8">Thus the total utility of every optimal solution for {a mathematical formula}I ′ is equal to {a mathematical formula} Α ℓ times the number of edges that connect any two vertices corresponding to the items from the solution.Let {a mathematical formula}A be a polynomial-time {a mathematical formula}x(n)-approximation algorithm for Α -OWA-Winner.</a>
<a href="#9" id="9">If {a mathematical formula}A, returns a solution S for {a mathematical formula}I ′ with none-zero utility, then the items {a mathematical formula}d1, … ,d ℓ − 2 all belong to S. Let us take the vertices corresponding to the items {a mathematical formula}S ∖ {d1, … ,d ℓ − 2}.</a>
<a href="#10" id="10">The number of the edges connecting these vertices is equal to the total utility of S divided by {a mathematical formula} Α ℓ .</a>
<a href="#11" id="11">Thus, from {a mathematical formula}x(n)-approximation solution for {a mathematical formula}I ′ we can extract an {a mathematical formula}x(n)-approximation solution for I.</a>
<a href="#12" id="12">This completes the proof.</a>
<a href="#13" id="13">Proof</a>
<a href="#14" id="14">For every Ε we show a polynomial-time algorithm with approximation ratio {a mathematical formula}(1 − Ε ).</a>
<a href="#15" id="15">Consider some Ε , {a mathematical formula}0 ≤ Ε ≤ 1.</a>
<a href="#16" id="16">There exists a value {a mathematical formula}K Ε such that for each {a mathematical formula}K>K Ε it holds that {a mathematical formula} ℓ exp ⁡ ( − Γ K ℓ 2)< Ε .</a>
<a href="#17" id="17">For each instance I of Α -OWA-Winner where we seek winner set of size at least {a mathematical formula}K Ε , we run the algorithm from Theorem 29.</a>
<a href="#18" id="18">For the remaining cases, where the winner-set size is bounded by a constant, we use a brute-force algorithm.</a>
</body>
</html>