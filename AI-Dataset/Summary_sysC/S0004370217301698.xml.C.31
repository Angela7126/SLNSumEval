<html>
<head>
<meta name="TextLength" content="SENT_NUM:42, WORD_NUM:951">
</head>
<body bgcolor="white">
<a href="#0" id="0">Let D be a domain with a particular representation and let {a mathematical formula} ‖ d ‖ denote the size of the representation of {a mathematical formula}d ∈ D.</a>
<a href="#1" id="1">We let {a mathematical formula}Dc={{d}|d ∈ D} and {a mathematical formula}Df={D ′ ⊆ D|D ′  is finite}.</a>
<a href="#2" id="2">Given a representation of the elements in D, we always represent the members of {a mathematical formula}Df as sets of elements in D and we may assume that the size of {a mathematical formula}Df is linear in the sizes of its elements.</a>
<a href="#3" id="3">Other ways of representing {a mathematical formula}Df are possible (such as solution sets of equations) but they are outside the scope of this article.</a>
<a href="#4" id="4">Theorem 4</a>
<a href="#5" id="5">If Γ is a structure and the relation R is pp-definable in Γ , then there is a polynomial-time reduction from CSP{a mathematical formula}( Γ ∪ {R})to CSP( Γ ).</a>
<a href="#6" id="6">{a mathematical formula}(V,C): concatenate the instance {a mathematical formula}(V,C ′ ) with a polynomial-time verifiable certificate for the satisfiability of {a mathematical formula}(V,C ′ ).</a>
<a href="#7" id="7">This implies that CSP{a mathematical formula}( Γ ∪ Dc) is in NP.</a>
<a href="#8" id="8">To verify that CSP{a mathematical formula}( Γ ′ ∪ Nc) is {a mathematical formula}C-hard, we present a polynomial-time reduction from CSP( Γ ) to CSP{a mathematical formula}( Γ ′ ∪ {{1}}).</a>
<a href="#9" id="9">Let {a mathematical formula}(V,C) denote an arbitrary instance of CSP( Γ ).</a>
<a href="#10" id="10">Introduce one fresh variable y and define {a mathematical formula}(V ′ ,C ′ ) such that {a mathematical formula}V ′ =V ∪ {y} and{a mathematical formula}</a>
<a href="#11" id="11">Corollary 16</a>
<a href="#12" id="12">Let Γ be a constraint language over the domain D and let{a mathematical formula}Dc ′ be a finite subset of{a mathematical formula}Dc.</a>
<a href="#13" id="13">If Γ is a model-complete Ω -categorical core, then CSP( Γ ) and CSP{a mathematical formula}( Γ ∪ Dc ′ )are polynomial-time equivalent problems.</a>
<a href="#14" id="14">Theorem 19</a>
<a href="#15" id="15">Let Γ be a finite set of relations that are first-order definable in{a mathematical formula}Aand{a mathematical formula}m ∈ Γ .</a>
<a href="#16" id="16">Then, the problems CSP( Γ ) and CSP{a mathematical formula}( Γ ∪ Ic)are polynomial-time equivalent.</a>
<a href="#17" id="17">Additionally, these problems exhibit a dichotomy: they are either polynomial-time solvable or NP-complete depending on the choice of Γ .</a>
<a href="#18" id="18">{a mathematical formula}(Q;<), we know that CSP( Θ ) is either in P or is an NP-complete problem by Theorem 18.</a>
<a href="#19" id="19">Since {a mathematical formula}X ˆ ( Γ ) is first-order definable in {a mathematical formula}(Q;<), the reduction above shows that CSP( Γ ), CSP{a mathematical formula}( Γ ∪ Ic), CSP{a mathematical formula}(X ˆ ( Γ )), and CSP{a mathematical formula}(X ˆ ( Γ ) ∪ Qc) are either in P or they are NP-complete problems.</a>
<a href="#20" id="20">Another interesting question concerns the complexity of the metaproblem: given a constraint language Γ such that {a mathematical formula}m ∈ Γ and Γ is first-order definable in {a mathematical formula}A, what is the complexity of CSP( Γ )?</a>
<a href="#21" id="21">Preferably, we want problems of this kind to be decidable.</a>
<a href="#22" id="22">Let us first consider the structure {a mathematical formula}(Q;<).</a>
<a href="#23" id="23">Let Θ be a finite set of relations that are first-order definable in {a mathematical formula}(Q;<).</a>
<a href="#24" id="24">Bodirsky and Kára [13] have showed that there are nine different cases where CSP( Θ ) is polynomial-time solvable, and they have algebraically characterised these classes.</a>
<a href="#25" id="25">A similar algebraic classification is possible for CSP( Γ ) and, consequently, CSP{a mathematical formula}( Γ ∪ Ic) by Theorem 19 — the complexity of such a CSP is determined by a corresponding set of relations that are first-order definable in {a mathematical formula}(Q;<).</a>
<a href="#26" id="26">In practice, the following result may be more useful.</a>
<a href="#27" id="27">the computational complexity of CSP{a mathematical formula}(X ˆ ( Γ )) is decidable by Theorem 23 since we have access to the formulas {a mathematical formula}X( Φ 1 ′ ), … ,X( Φ n ′ ) that define the relations in {a mathematical formula}X ˆ ( Γ ).</a>
<a href="#28" id="28">Proof</a>
<a href="#29" id="29">( Γ ) and CSP{a mathematical formula}( Γ ∪ Dc)are polynomial-time equivalent.Let {a mathematical formula} Γ ′ = Γ ∪ Dc.</a>
<a href="#30" id="30">The reduction from CSP( Γ ) to CSP{a mathematical formula}( Γ ′ ) is trivial so we concentrate on the other direction.</a>
<a href="#31" id="31">Let {a mathematical formula}I ′ =(V ′ ,C ′ ) be an instance of CSP{a mathematical formula}( Γ ′ ).</a>
<a href="#32" id="32">We assume without loss of generality (just as in the proof of Theorem 15) that the only constraints in {a mathematical formula}C ′ with relations from {a mathematical formula}Dc are {a mathematical formula}{d1}(x1), … ,{dm}(xm).Construct an instance {a mathematical formula}I=(V,C) of CSP( Γ ) as follows: let</a>
<a href="#33" id="33">The methods in Sections 4 and 5 provide polynomial-time equivalences between CSP( Γ ) and CSP{a mathematical formula}( Γ ∪ Dc) under certain conditions.</a>
<a href="#34" id="34">In this section, we will instead analyse the constraint language {a mathematical formula} Γ ∪ Dc directly.</a>
<a href="#35" id="35">The main result will be weaker than in the previous two sections since we will only be able to prove membership in NP.</a>
<a href="#36" id="36">On the other hand, the approach is applicable also without Ω -categoricity.</a>
<a href="#37" id="37">Let Γ be an arbitrary constraint language with domain D, and assume that the relations in Γ and the elements in D are represented is some fixed way.</a>
<a href="#38" id="38">We say that Γ has the small solution property if there exists a polynomial p (that only depends on the choice of Γ ) such that for every satisfiable instance {a mathematical formula}I=(V,C) of CSP( Γ ), there exists a solution {a mathematical formula}s:V → D such that {a mathematical formula} ‖ s(v) ‖ ≤ p( ‖ I ‖ ) for every {a mathematical formula}v ∈ V.</a>
<a href="#39" id="39">1.</a>
<a href="#40" id="40">If Γ is a partition scheme and Θ is a finite set of relations that are quantifier-free definable in Γ , then CSP{a mathematical formula}( Θ ∪ Dc)and CSP{a mathematical formula}( Θ ∪ Df)are in NP.</a>
<a href="#41" id="41">2.</a>
</body>
</html>