<html>
<head>
<meta name="TextLength" content="SENT_NUM:24, WORD_NUM:948">
</head>
<body bgcolor="white">
<a href="#0" id="0">In fact, we will see that RCC-5 can be represented in two different ways (which we denote RCC-{a mathematical formula}5set and RCC-{a mathematical formula}5 Ω − cat) that give rise to exactly the same computational problem (by Proposition 13).</a>
<a href="#1" id="1">However, we will also see (in Sections 5 and 6.2) that there exists an RCC-5 constraint language {a mathematical formula}R such that RCC-{a mathematical formula}5set(R ∪ {{c}}) is NP-complete while RCC-{a mathematical formula}5 Ω − cat(R ∪ X) is polynomial-time solvable, where {a mathematical formula}{c} is a particular constant relation and X is an arbitrary finite set of constants.</a>
<a href="#2" id="2">Thus, adding constant relations to constraint languages that are computationally equivalent (but represented differently) may lead to problems with different computational complexity.</a>
<a href="#3" id="3">Consider the problem CSP{a mathematical formula}((Q;<)) where < is the binary order relation of the set {a mathematical formula}Q of rational numbers.</a>
<a href="#4" id="4">Note, however, that for the definition of the problem {a mathematical formula}CSP( Γ ) we do not need to explicitly represent solutions since we only have to decide the existence of solutions.</a>
<a href="#5" id="5">Other ways of representing {a mathematical formula}Df are possible (such as solution sets of equations) but they are outside the scope of this article.</a>
<a href="#6" id="6">The reader may be puzzled about the restriction to constraint languages containing the relation {a mathematical formula}m. Intuitively, {a mathematical formula}m allows us to define certain relations that make endpoints identical and such relations are the very basis of the dichotomy result (see the construction in the beginning of Lemma 22).</a>
<a href="#7" id="7">Every relation in {a mathematical formula}H can be rewritten in a similar way; we let {a mathematical formula}H ′ denote the resulting constraint language.</a>
<a href="#8" id="8">Now, the constraint language {a mathematical formula}H ′ ∪ {R ⁎ ⁎ } is a subset of the tractable dual-ll class [14], and we conclude that CSP{a mathematical formula}(H ∪ {R ⁎ }) is tractable, too.</a>
<a href="#9" id="9">The problem of applying Theorem 18 directly to Allen relations stems from the different domains: the theorem is concerned with the domain {a mathematical formula}Q while Allen relations are defined over the interval domain {a mathematical formula}I.</a>
<a href="#10" id="10">Note that if {a mathematical formula}x,y are a pair, then every solution must assign a strictly higher value to y than to x.Based on {a mathematical formula}(V,C), we define an instance {a mathematical formula}(V ′ ,C ′ ) of CSP( Γ ) as follows.</a>
<a href="#11" id="11">Note that the exact choice of function g for defining {a mathematical formula}f(x) is irrelevant: whenever we have interval variables, say, {a mathematical formula}Ix,y and {a mathematical formula}Ix,z, then {a mathematical formula}f ′ (Ix,y)=[a,b] and {a mathematical formula}f ′ (Ix,z)=[a,c], due to the constraints introduced in steps 2 – 5 in the reduction.</a>
<a href="#12" id="12">Thus, there exists exactly one function f corresponding to a given solution {a mathematical formula}f ′ .We conclude the proof by proving that f is a solution to {a mathematical formula}(V,C).</a>
<a href="#13" id="13">This corresponds to a constraint {a mathematical formula}R(Ix,y,Ix,z) in {a mathematical formula}C ′ where we additionally have the constraint {a mathematical formula}(s,s ⌣ , ≡ )(Ix,y,Ix,z) ∈ C ′ due to step 2 in the reduction.</a>
<a href="#14" id="14">It is thus guaranteed that the intervals {a mathematical formula}f ′ (Ix,y) and {a mathematical formula}f ′ (Ix,z) start at the same point.</a>
<a href="#15" id="15">Γ is homogeneous, andthe domain elements are represented in a way such that given two elements{a mathematical formula}a,b ∈ D, it is possible to find (by using an algorithm A) the unique{a mathematical formula}Bi,{a mathematical formula}1 ≤ i ≤ k, such that{a mathematical formula}(a,b) ∈ Biin polynomial time (measured in the size of the representations of a and b).Then, CSP</a>
<a href="#16" id="16">Let {a mathematical formula}S={s(x1), … ,s(xm)} and {a mathematical formula}T={d1, … ,dm}.</a>
<a href="#17" id="17">The set T contains m elements by our initial assumptions and the set S contains m elements due to the constraints in {a mathematical formula}C ˆ ; all variables in {a mathematical formula}{x1, … ,xm} are assigned distinct values since none of the constraints in {a mathematical formula}C ˆ allows equality (due to the fact that {a mathematical formula}B is a partition scheme and {a mathematical formula}d1, … ,dm are distinct values).</a>
<a href="#18" id="18">Thus, {a mathematical formula}f:S → T is a well-defined bijective function if we let {a mathematical formula}f(s(xi))=di, {a mathematical formula}1 ≤ i ≤ m.</a>
<a href="#19" id="19">We exemplify the result by taking a look at Allen's algebra with domain {a mathematical formula}I. Hirsch [33] has shown that {a mathematical formula}A ∨ = is a homogeneous structure and the second precondition of Theorem 27 is clearly satisfied with the given representation.</a>
<a href="#20" id="20">Given a constraint language Γ containing such relations, the small solution property for {a mathematical formula}Q follows from the fact that linear programming can be solved (and a concrete solution written down) in polynomial time while the property for {a mathematical formula}Z has been proven by Papadimitriou [57].</a>
<a href="#21" id="21">By using the same idea as we used for proving that temporal constraints have the small solution property, it follows that if an instance {a mathematical formula}(V,C) of CSP( Γ ) has a solution, then it has a solution {a mathematical formula}s:V → {1, … ,|V|} and Γ has the small solution property.</a>
<a href="#22" id="22">Now, let{a mathematical formula} If u is PP-connected with some variable v and {a mathematical formula}U(v) ∈ C ′ , then we know that {a mathematical formula}|s ′ (u)|<T for any solution {a mathematical formula}s ′ to {a mathematical formula}I ′ .We prove that at most {a mathematical formula}|V ′ | ⋅ T different elements are needed for representing a solution by induction over the number of variables in {a mathematical formula}V ′ .</a>
<a href="#23" id="23">If there exists {a mathematical formula}U(v) ∈ C, then we need at most T values for v which gives us at most {a mathematical formula}pT+T=(p+1)T values in total.</a>
</body>
</html>