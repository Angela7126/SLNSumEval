<html>
<head>
<meta name="TextLength" content="SENT_NUM:11, WORD_NUM:570">
</head>
<body bgcolor="white">
<a href="#0" id="0">We could model this using a fluent {a mathematical formula}InPhoneDir(name,number,photo,s), with the following successor state axiom:{a mathematical formula} We could then apply our transformation to this new theory to obtain a bounded action theory, getting precondition axioms such as the following:{a mathematical formula} The resulting theory blocks actions from being performed whenever the action would result in a number of tuples in some fluent exceeding the bound.</a>
<a href="#1" id="1">We say that fluent F is effect bounded if, for every action a and situation s:{a mathematical formula} i.e., for every action and situation, the number of tuples added to the fluent is less than or equal to that deleted.</a>
<a href="#2" id="2">We say that a basic action theory is effect bounded if every fluent {a mathematical formula}F ∈ F is effect bounded.</a>
<a href="#3" id="3">Since {a mathematical formula} Μ Lp contains formulas with free individual and predicate variables, given a model {a mathematical formula}M of an action theory {a mathematical formula}D with object domain Δ and situation domain {a mathematical formula}S, we introduce a valuation{a mathematical formula}(v,V) formed by an individual variable valuation v which maps each individual variable x to an object {a mathematical formula}v(x) in Δ , and a parameterized predicate variable valuation V, which, given the valuation of the individual variables v, maps each predicate variable Z to a subset {a mathematical formula}V(v,Z) of situations in {a mathematical formula}S (notice that for each individual variable valuation v the mapping may change).</a>
<a href="#4" id="4">For every, possibly open, situation calculus FO formula{a mathematical formula} Φ (x → ,s)uniform in s and with free variables{a mathematical formula}x → , all of object sort, there exists a situation calculus formula{a mathematical formula} Φ ′ (x → ,s)uniform in s, where no action terms occur, such that{a mathematical formula}By induction on the structure of Φ .</a>
<a href="#5" id="5">If Φ is {a mathematical formula}F(t → ,s), we have that, by definition, {a mathematical formula}t → can only contain object terms, so {a mathematical formula} Φ ′ is {a mathematical formula}F(t → ,s).</a>
<a href="#6" id="6">If Φ is {a mathematical formula}A(y → )=A ′ (y ′ → ), with {a mathematical formula}x → ⊆ y → ∪ y → ′ , if {a mathematical formula}A=A ′ , then {a mathematical formula} Φ ′ is {a mathematical formula}y → =y ′ → , else {a mathematical formula} Φ ′ is ⊥ .</a>
<a href="#7" id="7">In this section, we address the case of partial information on the initial situation, by assuming that {a mathematical formula}D0 is a set of axioms characterizing a possibly infinite set of bounded initial databases.</a>
<a href="#8" id="8">In this section, we assess the computational complexity of verifying {a mathematical formula} Μ Lp formulas over a bounded situation calculus basic action theory {a mathematical formula}D. In particular we show that the constructive techniques we have used for proving decidability are, in fact, optimal with respect to worst case computational complexity.</a>
<a href="#9" id="9">We make the assumption that, for a basic action theory {a mathematical formula}D, the maximum number of distinct objects occurring in the state of any situation, dominates the input size of {a mathematical formula}D itself, and that there exists a bound {a mathematical formula}a¯F on the maximum arity of fluents.</a>
<a href="#10" id="10">Verifying{a mathematical formula} Μ Lpformulas over a situation calculus basic action theory bounded by b, with complete information on the initial situation, can be done in time exponential in b.This is a consequence of Procedure 1 and the complexity of {a mathematical formula} Μ Lp model checking.</a>
</body>
</html>