<html>
<head>
<meta name="TextLength" content="SENT_NUM:29, WORD_NUM:489">
</head>
<body bgcolor="white">
<a href="#0" id="0">In this paper, we examine how this can be done for {a mathematical formula}A ⁎ and {a mathematical formula}IDA ⁎ .</a>
<a href="#1" id="1">{a mathematical formula}LA ⁎ expands no more nodes than {a mathematical formula}A ⁎ using the maximum.</a>
<a href="#2" id="2">Similarly to {a mathematical formula}A ⁎ , the first thing to consider for {a mathematical formula}IDA ⁎ is lazy evaluation of the heuristics.</a>
<a href="#3" id="3">In this section we study {a mathematical formula}LA ⁎ and {a mathematical formula}LIDA ⁎ .</a>
<a href="#4" id="4">We begin with a formal treatment of {a mathematical formula}LA ⁎ .</a>
<a href="#5" id="5">{a mathematical formula}LA ⁎ avoids {a mathematical formula}h2 computations for many of these surplus nodes.</a>
<a href="#6" id="6">Consider a node n that is generated with {a mathematical formula}f1(n)>C ⁎ .</a>
<a href="#7" id="7">The time overhead of {a mathematical formula}A ⁎ MAX and {a mathematical formula}LA ⁎ is summarized in Table 1.</a>
<a href="#8" id="8">We now present {a mathematical formula}LIDA ⁎ , the lazy variant of {a mathematical formula}IDA ⁎ .</a>
<a href="#9" id="9">In the context of {a mathematical formula}IDA ⁎ , if {a mathematical formula}f1(n)>T then the search can backtrack without the need to compute {a mathematical formula}h2.</a>
<a href="#10" id="10">Thus, it is likely that {a mathematical formula}LIDA ⁎ is already a popular way to implement {a mathematical formula}IDA ⁎ when more than one heuristic is present.</a>
<a href="#11" id="11">While Lazy {a mathematical formula}A ⁎ was always as informed as {a mathematical formula}A ⁎ using the maximum of the heuristics, this is not the case for Lazy {a mathematical formula}IDA ⁎ .</a>
<a href="#12" id="12">HBP can be applied in {a mathematical formula}LA ⁎ in a number of ways.</a>
<a href="#13" id="13">{a mathematical formula}LA ⁎ evaluates {a mathematical formula}h1(n) and then inserts n into Open.</a>
<a href="#14" id="14">As {a mathematical formula}LIDA ⁎ does not keep an open list, this enhancement is only applicable to {a mathematical formula}LA ⁎ .</a>
<a href="#15" id="15">This leaves little room for further improvement for {a mathematical formula}LA ⁎ .</a>
<a href="#16" id="16">{a mathematical formula}h2 is consistent.</a>
<a href="#17" id="17">However, we can only be certain that {a mathematical formula}h2 was helpful after search terminates.</a>
<a href="#18" id="18">However, for {a mathematical formula}RLA ⁎ , the threshold is not available.</a>
<a href="#19" id="19">In order to use {a mathematical formula}RLA ⁎ or {a mathematical formula}RLIDA ⁎ , we must also estimate {a mathematical formula}ph2.</a>
<a href="#20" id="20">We have described two new algorithms, {a mathematical formula}RLA ⁎ and {a mathematical formula}RLIDA ⁎ , which are based on rational metareasoning.</a>
<a href="#21" id="21">Furthermore, looking at search time, we see the benefits of using {a mathematical formula}RLA ⁎ .</a>
<a href="#22" id="22">3a compares {a mathematical formula}RLA ⁎ (emp) to {a mathematical formula}LA ⁎ , while Fig.</a>
<a href="#23" id="23">3b compares {a mathematical formula}RLA ⁎ (T1) to {a mathematical formula}LA ⁎ .</a>
<a href="#24" id="24">Unsurprisingly, {a mathematical formula}LA ⁎ has the highest numbers here.</a>
<a href="#25" id="25">The final columns show the results of {a mathematical formula}RLA ⁎ .</a>
<a href="#26" id="26">We now turn to {a mathematical formula}RLIDA ⁎ , which we compare to {a mathematical formula}IDA ⁎ based search algorithms.</a>
<a href="#27" id="27">The two variants of {a mathematical formula}RLIDA ⁎ have more expanded nodes.</a>
<a href="#28" id="28">This latter scheme is what we recommend when running {a mathematical formula}LA ⁎ with multiple heuristics.</a>
</body>
</html>