<html>
<head>
<meta name="TextLength" content="SENT_NUM:21, WORD_NUM:607">
</head>
<body bgcolor="white">
<a href="#0" id="0">A nondeterministic planning problem is a triple {a mathematical formula}P=(D,S0,G), where {a mathematical formula}D=(L,O) is a nondeterministic planning domain.</a>
<a href="#1" id="1">{a mathematical formula}S0 ⊆ S is a set of initial states, and {a mathematical formula}G ⊆ S is a set of goal states.</a>
<a href="#2" id="2">For every state s in a nondeterministic planning problem P, s is weakly solvable in P if and only if it is solvable in{a mathematical formula}P¯.</a>
<a href="#3" id="3">Consider the nondeterministic planning problem {a mathematical formula}P=(D,{s0},{s2}), in which the set of initial states is {a mathematical formula}{s0} and there is a single goal state, {a mathematical formula}s2.</a>
<a href="#4" id="4">In NDPR's first iteration, NDPR calls the classical planner on the problem {a mathematical formula}(D¯,s0,{s2}).</a>
<a href="#5" id="5">Suppose that the classical planner returns the plan {a mathematical formula} 〈 a12 〉 .</a>
<a href="#6" id="6">Algorithm 2 is the ConstrainProblem procedure, which takes a classical planning problem {a mathematical formula}(D¯,s,G) and a set A of actions, and returns a new planning problem {a mathematical formula}(D¯ ′ ,s ′ ,G) for which a solution is any solution to {a mathematical formula}(D¯,s,G) that does not start with an action in A.</a>
<a href="#7" id="7">We use ConstrainProblem in Find-Acceptable-Plan (Algorithm 3), which is used to construct acyclic plans whose nondeterministic images avoid known unsolvable states.</a>
<a href="#8" id="8">Find-Acceptable-Plan's parameters consist of a nondeterministic planning domain D, its determinization {a mathematical formula}D¯, an initial state {a mathematical formula}s0, a set of goal states G, a classical planner CP, and a set U of states to avoid.</a>
<a href="#9" id="9">Let CP be a sound and complete classical planner and{a mathematical formula}P=(D,S0,G)be a nondeterministic planning problem with{a mathematical formula}D=(L,O).</a>
<a href="#10" id="10">Let S be the set of all states in{a mathematical formula}L(i.e.,{a mathematical formula}S=2F),{a mathematical formula}F={all ground atoms overL}, and{a mathematical formula}Abe the set of all possible actions (i.e., all possible ground instantiations of the planning operators in O).Then{a mathematical formula}NDP2(D,S0,G,CP)is sound and complete, and returns at most in{a mathematical formula}|S|2calls to Find-Acceptable-Plan.</a>
<a href="#11" id="11">An abstraction of a nondeterministic planning domain D is a planning domain {a mathematical formula}D ⁎ in which the set of operators is {a mathematical formula}O ⁎ ∪ Σ , where</a>
<a href="#12" id="12">For every state s in a nondeterministic planning problem P, s is weakly solvable in P if and only if it is solvable in{a mathematical formula}P¯.</a>
<a href="#13" id="13">More formally, a plan p is U-acceptable in a state s with respect to a nondeterministic domain D, its determinization {a mathematical formula}D¯, a classical planning problem {a mathematical formula}(D¯,s,G) and a set of states U if:</a>
<a href="#14" id="14">p is applicable in the state s in the classical planning domain {a mathematical formula}D¯.</a>
<a href="#15" id="15">If CP is sound and guaranteed to terminate, then NDP2 returns in at most{a mathematical formula}|S|2calls to Find-Acceptable-Plan, where S is the set of states in the domain.</a>
<a href="#16" id="16">If CP is sound and complete, at every point in the execution of NDP2 on a nondeterministic problem{a mathematical formula}P=(D,S0,G), the set U is a subset of all unsolvable states.</a>
<a href="#17" id="17">Then there is a domain D, initial states {a mathematical formula}S0, goal set G, and strong cyclic policy Π such that {a mathematical formula}NDP2(D,S0,G,CP) returns failure, even though Π is a valid strong cyclic policy.This means Find-Acceptable-Plan returned failure from an initial state, and so there is no path to the goal which also doesn't lead to a state in U.</a>
<a href="#18" id="18">However, Π has paths from each of the initial states to the goal, and so some action along each of those paths must lead to a state in U.</a>
<a href="#19" id="19">This is a contradiction with the above lemma, that U will never contain states that appear in any strong-cyclic solution.</a>
<a href="#20" id="20">Let CP be a sound and complete classical planner and{a mathematical formula}P=(D,S0,G)be a nondeterministic planning problem with{a mathematical formula}D=(L,O).</a>
</body>
</html>