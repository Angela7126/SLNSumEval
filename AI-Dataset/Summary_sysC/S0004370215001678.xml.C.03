<html>
<head>
<meta name="TextLength" content="SENT_NUM:10, WORD_NUM:318">
</head>
<body bgcolor="white">
<a href="#0" id="0">Almost all of the recent high-performance SLS SAT solvers are based on WalkSAT, dynamic local search, or G{sup:2}WSAT.</a>
<a href="#1" id="1">SATenstein-LS is a highly parameterized, stochastic local search (SLS) SAT solver that not only draws components from several high-performance SLS-based SAT solvers, but also incorporates several novel mechanisms.</a>
<a href="#2" id="2">gNovelty+[62], the winner of the 2007 SAT Competition in the random satisfiable category, also uses clause penalties and a smoothing mechanism found in dynamic local search algorithms [71] which can be activated in SATenstein-LS by setting the categorical parameter useClausePenalty to 1.</a>
<a href="#3" id="3">In order to study the effectiveness of our proposed approach for algorithm design, we configured SATenstein-LS on training sets from various distributions of SAT instances and compared the performance of the SATenstein-LS solvers thus obtained against that of several existing high-performance SAT solvers on disjoint test sets.</a>
<a href="#4" id="4">Thus, although the design space of SATenstein-LS consists solely of SLS solvers, we have also compared its performance to that of high-performance complete solvers (listed in Table 6).</a>
<a href="#5" id="5">We now present the results of performance comparisons between SATenstein-LS and the 11 challenger SLS solvers (listed in Table 5), configured versions of these challengers, and two complete solvers for each of our benchmark distributions (listed in Table 6).</a>
<a href="#6" id="6">Table 9 compares the performance of SATenstein-LS solvers and four prominent complete SAT solvers (two for each distribution).</a>
<a href="#7" id="7">For the other two industrial distributions (FAC and CBMC(SE)), the performance of the selected complete solvers was much better than that of either the SATenstein-LS solvers and any of our other local search solvers.</a>
<a href="#8" id="8">To better understand the automatically-constructed SATenstein-LS solvers, we compared their automatically selected design choices to the design of the existing SLS solvers for SAT (the full active parameter configurations of the six SATenstein-LS solvers can be found in Table 16).</a>
<a href="#9" id="9">In addition, we found that all SATenstein-LS configurations differ from existing SLS algorithms (except for SATenstein[FAC], whose configuration and performance is similar to SAPS).</a>
</body>
</html>