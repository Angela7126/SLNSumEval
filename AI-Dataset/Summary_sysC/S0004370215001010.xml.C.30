<html>
<head>
<meta name="TextLength" content="SENT_NUM:7, WORD_NUM:211">
</head>
<body bgcolor="white">
<a href="#0" id="0">Both contributions together result in relational linear programming, best summarized as{a mathematical formula} The user describes a relational problem in a high-level, relational LP modeling language and — given a logical knowledge base (LogKB) encoding some individuals or rather data — the system automatically compiles a symmetry-reduced LP that in turn can be solved using any off-the-shelf LP solver.</a>
<a href="#1" id="1">To summarize what we have so far, relational linear programming works as summarized in Algorithm 2.</a>
<a href="#2" id="2">We encode the general problem structure of the optimization problem at hand as a relational linear program (line 1).</a>
<a href="#3" id="3">Then we specify a problem instance using an external logical knowledge base LogKB (line 2).</a>
<a href="#4" id="4">Finally, we ground the relational linear program for the problem instance using Algorithm 1 (line 3).</a>
<a href="#5" id="5">4, it induces the following ground linear program in AMPL notation (for the sake of readability, only some of the groundings are shown):{a mathematical formula} This illustrates another benefit of relational linear programming.</a>
<a href="#6" id="6">While formulating LPs in canonical form as input to LP solvers requires explicit value enumeration for the A matrix and the b and c vectors, relational linear programming avoids this explicit value enumeration, exploiting the existence of domain objects, relations over these objects, and the ability to express objectives and constraints using quantification.</a>
</body>
</html>