<html>
<head>
<meta name="TextLength" content="SENT_NUM:32, WORD_NUM:1220">
</head>
<body bgcolor="white">
<a href="#0" id="0">The idea of the framework is to move away from the standard, in the database literature, assumption that query results be given in the form of a database object, and to allow instead two alternative representations of answers: as objects defining all other answers, or as knowledge we can deduce with certainty about all such answers.</a>
<a href="#1" id="1">In other applications, the definition of {a mathematical formula} 〚 D 〛 varies, but the notion of certain answers does not.</a>
<a href="#2" id="2">Then {a mathematical formula} 〚 D 〛 Σ consists of all such repairs, and for a given query Q one looks for consistent query answers defined as {a mathematical formula} ⋂ {Q(D ′ )|D ′ ∈ 〚 D 〛 Σ }.</a>
<a href="#3" id="3">Even worse, {a mathematical formula}(1,2) is not less informative than any of the answers {a mathematical formula}Q(D ′ ) for {a mathematical formula}D ′ ∈ 〚 D 〛 which are of the form {a mathematical formula}{(1,2),(3,n)} for different values n. Indeed, under the closed world semantics, the answer {a mathematical formula}{(1,2)} contains additional information that no tuple except {a mathematical formula}(1,2) is present.</a>
<a href="#4" id="4">Thus, returning just {a mathematical formula}(1,2) in this case makes no sense at all.</a>
<a href="#5" id="5">If one has a query Q to be evaluated on an incomplete database D, one needs to represent the set{a mathematical formula} of possible answers to Q on complete databases that are represented by D. One possibility is to look for an answer A so that {a mathematical formula} 〚 A 〛 =Q( 〚 D 〛 ), i.e., A denotes exactly the answers to Q over {a mathematical formula} 〚 D 〛 .</a>
<a href="#6" id="6">When such an answer A exists for every query Q from a given class of queries, one talks about strong representation systems for that class, under the semantics {a mathematical formula} 〚 〛 , see [19], [2].</a>
<a href="#7" id="7">Unfortunately, strong representation systems may not exist even for simple queries over standard semantics of incompleteness, e.g., even quantifier-free queries for the closed-world semantics [2].</a>
<a href="#8" id="8">Given an incomplete database D, a semantics of incompleteness {a mathematical formula} 〚 〛 , and a query Q, the standard notion of certain answers under {a mathematical formula} 〚 〛 is{a mathematical formula} Note that {a mathematical formula}cert ∩ (Q,D) cannot contain any tuples with nulls.</a>
<a href="#9" id="9">In some cases, these answers are obtained by almost straightforward query evaluation, namely by evaluating {a mathematical formula}Q(D) and then throwing away the tuples with nulls.</a>
<a href="#10" id="10">Note that this definition requires that both the input database D, and the answer A, be interpreted under the same semantics {a mathematical formula} 〚 〛 .</a>
<a href="#11" id="11">It is well known that {a mathematical formula}Mod and {a mathematical formula}Th define a Galois connection between {a mathematical formula}D and {a mathematical formula}F. That is, both {a mathematical formula}Mod and {a mathematical formula}Th are anti-monotone, {a mathematical formula}X ⊆ Mod(Th(X)) and {a mathematical formula} Φ ⊆ Th(Mod( Φ )) for all X and Φ .</a>
<a href="#12" id="12">In particular, this implies that {a mathematical formula}Mod(Th( ⋅ )) is a closure operator.</a>
<a href="#13" id="13">Computing certain answers boils down to finding certain information contained in a set of objects; in the case of query answering, in {a mathematical formula}Q( 〚 D 〛 )={Q(D ′ )|D ′ ∈ 〚 D 〛 }.</a>
<a href="#14" id="14">Thus, we need to know how to define certain information contained in a set of objects {a mathematical formula}X ⊆ D.</a>
<a href="#15" id="15">The intuition behind the ‘ enough objects ’ condition is that for every such renaming f of elements of the active domain, {a mathematical formula}f(D) is a legitimate database, and D and {a mathematical formula}f(D) agree on formulae that only mention constants preserved by f.</a>
<a href="#16" id="16">This is just a technical condition so that we could represent a finite set {a mathematical formula}{ Φ 1, … , Φ n} of formulae by a single formula, namely their conjunction {a mathematical formula} Φ 1 ∧ … ∧ Φ n.</a>
<a href="#17" id="17">We look at certain information contained in sets {a mathematical formula} 〚 x 〛 and prove that, as expected, it is represented at the object level by x itself, and at the knowledge level by {a mathematical formula} Δ x, defining the semantics of x.</a>
<a href="#18" id="18">In general though, objects related by {a mathematical formula} ≈ j may not agree on all the formulae of {a mathematical formula}F (e.g., D and {a mathematical formula}D ′ do not agree on the sentence {a mathematical formula} ∃ x(x=1)) and hence there are potentially formulae in {a mathematical formula}Th( 〚 x 〛 ≈ j) which are not satisfied by x.</a>
<a href="#19" id="19">If it does not, it simply means that the semantics {a mathematical formula} 〚 〛 ′ of query answers was chosen incorrectly.</a>
<a href="#20" id="20">Thus, blindly using some fixed semantics for query results – as in fact is often done – does not necessarily make sense.</a>
<a href="#21" id="21">Certain answers to Q on an object x represent certain information in the set {a mathematical formula}Q( 〚 x 〛 )={Q(c)|c ∈ 〚 x 〛 }.</a>
<a href="#22" id="22">Note that (1) implies (2): this is an immediate consequence of the fact that {a mathematical formula}Mod( ⋅ ) and {a mathematical formula}Th( ⋅ ) define a Galois connection.</a>
<a href="#23" id="23">Thus, the notion of certain answers as knowledge in a representation system is a weakening of the notion of the strong representation system, but much less ad hoc that replacing {a mathematical formula}Q( 〚 D 〛 ) with {a mathematical formula} ⋂ Q( 〚 D 〛 ).</a>
<a href="#24" id="24">Since {a mathematical formula}c ⪰ x for every {a mathematical formula}c ∈ 〚 x 〛 , then {a mathematical formula}Q(x) ⪯ ′ Q(c) and {a mathematical formula}Q(c) satisfies Φ as well by the properties of representation systems, proving that {a mathematical formula} Φ ∈ Th(Q( 〚 x 〛 )).Conversely, if {a mathematical formula} Φ ∈ Th(Q( 〚 x 〛 )), consider j such that {a mathematical formula}z ≈ j ′ z ′ implies that {a mathematical formula}z,z ′ agree on Φ for every {a mathematical formula}z,z ′ (which exists by the definition of representation systems).</a>
<a href="#25" id="25">Indeed, if we had formulae Δ , we would have had {a mathematical formula} Δ c ′ ∈ Th(Q( 〚 x 〛 )) − Th(Q(x)), which is made impossible by (4) in the presence of a representation system.</a>
<a href="#26" id="26">Thus, it is essential to go via certain answers as knowledge to get the object representation.</a>
<a href="#27" id="27">In other words, in this case the basic query evaluation {a mathematical formula}Q(x) provides us with an approximation of certain answers, since it gives us some, but perhaps not all, information that certain answers contain.</a>
<a href="#28" id="28">For the “ classical ” way of defining certain answers, which involves throwing away tuples with nulls and computing intersection, the notion of naïve evaluation involves computing {a mathematical formula}Q(D) and throwing away tuples with nulls [2], [21].</a>
<a href="#29" id="29">Note that using the new notion of certain answers, namely {a mathematical formula}certO(Q,D), for the same classes of queries we no longer need to throw away tuples containing nulls: simply computing {a mathematical formula}Q(D) does the job.</a>
<a href="#30" id="30">Again this query is monotone and generic, and it is easy to see that with the class of ground atoms and their conjunctions, {a mathematical formula}DowaC( Σ ) forms a representation system.</a>
<a href="#31" id="31">Hence Theorem 2 tells us that {a mathematical formula}certK( Π C,D)= □ K 〚 D 〛 owa= Δ Π C(D) (with respect to the representation system based on conjunctions of ground atoms).</a>
</body>
</html>