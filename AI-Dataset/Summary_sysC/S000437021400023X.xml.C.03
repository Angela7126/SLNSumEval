<html>
<head>
<meta name="TextLength" content="SENT_NUM:32, WORD_NUM:550">
</head>
<body bgcolor="white">
<a href="#0" id="0">However, given a constraint c on n variables, each with domain size d, it is possible to generate a GAC propagator that runs in time {a mathematical formula}O(nd).</a>
<a href="#1" id="1">The tree first branches to test whether {a mathematical formula}0 ∈ D(x).</a>
<a href="#2" id="2">If {a mathematical formula}v.Test is Nil, then the propagator is finished.</a>
<a href="#3" id="3">If a domain is empty in {a mathematical formula}SD ′ , the algorithm returns.</a>
<a href="#4" id="4">The propagator generated after this branch is generated from the tree produced by {a mathematical formula}SimpleGenTree(c,SD ′ ,ValsIn ′ ∪ (y,l)).</a>
<a href="#5" id="5">The propagator on the right is generated from the tree given by {a mathematical formula}SimpleGenTree(c,SD ′ ∖ (y,l),ValsIn ′ ) on {a mathematical formula}S ∖ Deletions.</a>
<a href="#6" id="6">In such solvers our generated GAC propagator is {a mathematical formula}O(nd).</a>
<a href="#7" id="7">At each internal node, the tree branches for some literal in {a mathematical formula}SD ′ that is not in {a mathematical formula}ValsIn ′ .</a>
<a href="#8" id="8">Therefore the size of the tree is at most {a mathematical formula}2×(2nd) − 1=2nd+1 − 1 which is {a mathematical formula}O(2nd).</a>
<a href="#9" id="9">Any propagator tree for this constraint must have at least{a mathematical formula}2n − 1nodes.</a>
<a href="#10" id="10">Therefore there must be a distinct node in the propagator tree for each of the {a mathematical formula}2n − 1 assignments to the first {a mathematical formula}n − 1 variables.</a>
<a href="#11" id="11">We compare propagator trees to three table constraints: Table, Lighttable, and {a mathematical formula}STR2+.</a>
<a href="#12" id="12">{a mathematical formula}</a>
<a href="#13" id="13">The constraint is as follows: {a mathematical formula}min(b[t,f1], … ,b[t+1,f3])=moves[t,m].</a>
<a href="#14" id="14">Consider the group G of all permutations on {a mathematical formula}S={1,2,3,4,5}.</a>
<a href="#15" id="15">The propagator trees created by the algorithm GenTree (Algorithm 3) can be executed in {a mathematical formula}O(nd) time, where n is the arity of the constraint, and d is the domain size.</a>
<a href="#16" id="16">Consider a constraint c and a permutation g of the literals of variables in {a mathematical formula}scope(c).</a>
<a href="#17" id="17">g is a symmetry of c iff {a mathematical formula}cg=c.</a>
<a href="#18" id="18">The node-state of a tree node S comprises {a mathematical formula}SValsIn and {a mathematical formula}SSD.</a>
<a href="#19" id="19">To apply a symmetry {a mathematical formula}g ∈ G to a propagator tree we define an image function in Definition 12.</a>
<a href="#20" id="20">When generating a propagator tree, if the current node-state {a mathematical formula}S ′ is symmetric to some previously seen node-state S, then instead of generating a propagator tree for {a mathematical formula}S ′ , we can re-use the propagator tree built for S.</a>
<a href="#21" id="21">The constraint {a mathematical formula}c=allDifferent(x1,x2,x3) has the symmetry g.</a>
<a href="#22" id="22">We construct a propagator tree that first branches for each value of {a mathematical formula}x1.</a>
<a href="#23" id="23">The lemma above gives us a bound on the symmetry-reduced tree size which is polynomial in {a mathematical formula}n1 and exponential in {a mathematical formula}n2.</a>
<a href="#24" id="24">For example, for a constraint with total variable symmetry and variables of domain size 3 the upper bound is {a mathematical formula}O(n23).</a>
<a href="#25" id="25">{a mathematical formula}</a>
<a href="#26" id="26">If {a mathematical formula}st<sj, then to insert the jump would increase the overall tree size.</a>
<a href="#27" id="27">{a mathematical formula}</a>
<a href="#28" id="28">In contrast, the cost of the product propagator is {a mathematical formula}O(1), and the sum is {a mathematical formula}O(n).</a>
<a href="#29" id="29">{a mathematical formula}STR2+ is the fastest of the generic GAC propagators and it is consistently slower than all propagator tree methods.</a>
<a href="#30" id="30">The Life constraint has {a mathematical formula}8!=40,320 symmetries, the standard propagator tree has 26,524 nodes and the symmetry-reduced tree has 410 nodes.</a>
<a href="#31" id="31">The Immigration constraint has {a mathematical formula}8!×2=80,640 symmetries.</a>
</body>
</html>