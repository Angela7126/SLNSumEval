<html>
<head>
<meta name="TextLength" content="SENT_NUM:9, WORD_NUM:210">
</head>
<body bgcolor="white">
<a href="#0" id="0">The introduction of loops in the representation of states implies a reconsideration of the set of actions from [11] that may be relevant for causing state transitions.</a>
<a href="#1" id="1">One first obvious way to build a state containing loops is by starting with a free string s and successively passing its end tip {a mathematical formula}se through all the involved holes in the order represented by {a mathematical formula}chain(s).</a>
<a href="#2" id="2">This is what we may informally call “ sewing. ” For this purpose, action {a mathematical formula}pass(se,f) from [11] (described above) does not require any modification: each time a new hole is crossed, it includes a new crossing in {a mathematical formula}chain(s).</a>
<a href="#3" id="3">However, in [11], actions {a mathematical formula}pass(se,f) or {a mathematical formula}pass(sb,f) could also remove a crossing from {a mathematical formula}chain(s) and this effect must be disregarded now.</a>
<a href="#4" id="4">The effects of these actions in [11] were symmetric in the sense that passing a string tip toward one hole face f and then backwards to {a mathematical formula}f ‾ returns the chain to its original state.</a>
<a href="#5" id="5">For instance, imagine a string s and a hole h initially unrelated, as in Fig.</a>
<a href="#6" id="6">4(a).</a>
<a href="#7" id="7">If {a mathematical formula}pass(se,h+) is executed, we would get {a mathematical formula}chain(s)=[sb − ,h+,se+] depicted as state 1 in Fig.</a>
<a href="#8" id="8">10.</a>
</body>
</html>