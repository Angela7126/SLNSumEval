<html>
<head>
<meta name="TextLength" content="SENT_NUM:42, WORD_NUM:890">
</head>
<body bgcolor="white">
<a href="#0" id="0">In this paper we propose two algorithms: Potential Search (PTS) and Anytime Potential Search/Anytime Non-Parametric {a mathematical formula}A ⁎ ({a mathematical formula}APTS/ANA ⁎ ).</a>
<a href="#1" id="1">Section 5 presents experimental results comparing PTS and {a mathematical formula}APTS/ANA ⁎ with previous algorithms.</a>
<a href="#2" id="2">Other known optimal search algorithms include {a mathematical formula}IDA ⁎ [2] and RBFS [15].</a>
<a href="#3" id="3">The most well-known bounded-suboptimal search algorithm is probably Weighted {a mathematical formula}A ⁎ ({a mathematical formula}WA ⁎ ) [16].</a>
<a href="#4" id="4">Many existing anytime search algorithms are loosely based on {a mathematical formula}WA ⁎ .</a>
<a href="#5" id="5">Since this paper addresses anytime search algorithms in depth, we next provide a brief survey of existing {a mathematical formula}WA ⁎ -based anytime search algorithms.</a>
<a href="#6" id="6">As with {a mathematical formula}ARA ⁎ , the initial values of w and Δ w are parameters of the algorithm.</a>
<a href="#7" id="7">Next, we describe {a mathematical formula}APTS/ANA ⁎ , which is a non-parametric anytime search algorithm using the PTS evaluation function {a mathematical formula}u( ⋅ ).</a>
<a href="#8" id="8">These {a mathematical formula}WA ⁎ -based anytime search algorithms require one or more parameters to set the w for {a mathematical formula}WA ⁎ 's {a mathematical formula}fw evaluation function.</a>
<a href="#9" id="9">Therefore, we define the first ImproveSolution call of {a mathematical formula}APTS/ANA ⁎ to run pure heuristic search until the first solution is found.</a>
<a href="#10" id="10">However, modifying {a mathematical formula}APTS/ANA ⁎ to use any of the other approaches is trivial.</a>
<a href="#11" id="11">Next, we give a different derivation of {a mathematical formula}APTS/ANA ⁎ , as a non-parametric improvement of the {a mathematical formula}ARA ⁎ anytime search algorithm.</a>
<a href="#12" id="12">{a mathematical formula}ARA ⁎ [6] is a well-known anytime search algorithm shown to be effective in many domains [27].</a>
<a href="#13" id="13">{a mathematical formula}ARA ⁎ is a special case of the high-level anytime algorithm described in Algorithm 2.</a>
<a href="#14" id="14">This is precisely the node that {a mathematical formula}APTS/ANA ⁎ expands.</a>
<a href="#15" id="15">This would also allow initializing w to ∞ for the first iteration, as is done in {a mathematical formula}APTS/ANA ⁎ .</a>
<a href="#16" id="16">{sup:12} Thus, an additional benefit of {a mathematical formula}APTS/ANA ⁎ over {a mathematical formula}ARA ⁎ is that OPEN needs to be reordered only when a new solution is found.</a>
<a href="#17" id="17">{a mathematical formula}APTS/ANA ⁎ prunes any node n with {a mathematical formula}g(n)+h(n) ≥ G.</a>
<a href="#18" id="18">In addition, {a mathematical formula}APTS/ANA ⁎ has two further limitations:</a>
<a href="#19" id="19">As defined above, until the first solution is found, {a mathematical formula}APTS/ANA ⁎ runs a pure heuristic search.</a>
<a href="#20" id="20">Thus, {a mathematical formula}APTS/ANA ⁎ would be inefficient in domains where pure heuristic search is inefficient.</a>
<a href="#21" id="21">Instead of using {a mathematical formula}APTS/ANA ⁎ to find the first solution, it is possible to use another algorithm (e.g., Speedy search [46]) to find the first solution and provide it to {a mathematical formula}APTS/ANA ⁎ as an initial incumbent solution.</a>
<a href="#22" id="22">In this section we empirically evaluate the performance of PTS as a bounded-cost search algorithm, and {a mathematical formula}APTS/ANA ⁎ as an anytime search algorithm.</a>
<a href="#23" id="23">We compared PTS against a range of existing anytime search algorithms: {a mathematical formula}AWA ⁎ [22], {a mathematical formula}ARA ⁎ [6] and DFBnB [23].</a>
<a href="#24" id="24">For KPP-COM, these were {a mathematical formula}AWA ⁎ and DFBnB.</a>
<a href="#25" id="25">{sup:14} Both {a mathematical formula}ARA ⁎ and {a mathematical formula}AWA ⁎ are parametric algorithms.</a>
<a href="#26" id="26">The number of nodes expanded is given in Table 2 as the percentage of nodes expanded with respect to the number of nodes expanded by {a mathematical formula}A ⁎ until an optimal solution is found.</a>
<a href="#27" id="27">For example, PTS can find a solution under a cost bound of 70 by expanding on average only 5% of the nodes that will be expanded by {a mathematical formula}A ⁎ to find an optimal solution.</a>
<a href="#28" id="28">In such a case, {a mathematical formula}AWA ⁎ behaves like uniform cost search, a best – first search using only g to evaluate nodes.</a>
<a href="#29" id="29">In every experiment, we ran {a mathematical formula}APTS/ANA ⁎ and the best-performing anytime search algorithms (different for each domain), and recorded the suboptimality of the incumbent solution as a function of the runtime.</a>
<a href="#30" id="30">The benefits of {a mathematical formula}APTS/ANA ⁎ in this domain are very clear.</a>
<a href="#31" id="31">{a mathematical formula}APTS/ANA ⁎ dominates all other algorithms throughout the search.</a>
<a href="#32" id="32">Although not visible in the figure, we also report that {a mathematical formula}APTS/ANA ⁎ found an initial solution faster than {a mathematical formula}ARA ⁎ .</a>
<a href="#33" id="33">In this domain {a mathematical formula}APTS/ANA ⁎ is not always the best performing algorithm.</a>
<a href="#34" id="34">As in the 6 DoF experiments, in this domain too {a mathematical formula}APTS/ANA ⁎ found an initial solution faster than all other algorithms.</a>
<a href="#35" id="35">For both 20 DoF (left) and 6 DoF (right), the results clearly show that {a mathematical formula}APTS/ANA ⁎ is the best performing algorithm throughout the search for the majority of problem instances.</a>
<a href="#36" id="36">10(a)), {a mathematical formula}APTS/ANA ⁎ dominates all other algorithms throughout the search.</a>
<a href="#37" id="37">While not shown in the figure, we report that {a mathematical formula}APTS/ANA ⁎ required an additional 193 s to find a solution of the same cost as this {a mathematical formula}ARA ⁎ instance.</a>
<a href="#38" id="38">Negative results for {a mathematical formula}APTS/ANA ⁎ were obtained for the 15-puzzle domain, shown in Fig.</a>
<a href="#39" id="39">This is because, as explained in Section 4, {a mathematical formula}APTS/ANA ⁎ runs pure heuristic search until it finds the initial solution.</a>
<a href="#40" id="40">By contrast, the initial solution found by {a mathematical formula}AWA ⁎ with {a mathematical formula}w=2 ({a mathematical formula}AWA ⁎ -2.0 in Fig.</a>
<a href="#41" id="41">Results show that this {a mathematical formula}APTS/ANA ⁎ variant performed the same as the best performing anytime search algorithm for this domain.</a>
</body>
</html>