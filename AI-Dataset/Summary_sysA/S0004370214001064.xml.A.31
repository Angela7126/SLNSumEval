<html>
<head>
<meta name="TextLength" content="SENT_NUM:9, WORD_NUM:218">
</head>
<body bgcolor="white">
<a href="#0" id="0">Graphicalization is our approach to capture the relational structure of the data by means of a graph.</a>
<a href="#1" id="1">It enables the use of kernel methods in SRL via a graph kernel, which measures the similarity between two graphs.</a>
<a href="#2" id="2">The procedure maps a set of ground atoms into a bipartite undirected graph whose nodes are true ground atoms and whose edges connect an entity atom to a relationship atom if the identifier of the former appears as an argument in the latter.</a>
<a href="#3" id="3">The graph resulting from the graphicalization of the ai interpretation is shown in Fig.</a>
<a href="#4" id="4">2.</a>
<a href="#5" id="5">{sup:2} It is from this graph that kLog will generate propositional features (based on a graph kernel) for use in the learning procedure.</a>
<a href="#6" id="6">The details of the graphicalization procedure and the kernel are given in Sections 6 and 6.2, respectively.</a>
<a href="#7" id="7">Having specified a target relation r, kLog is able to infer the partition {a mathematical formula}x ∪ y of ground atoms into inputs and outputs in the supervised learning setting.</a>
<a href="#8" id="8">The output y consists of all ground atoms of r and all ground atoms of any intensional relation {a mathematical formula}r ′ which depends on r. The partition is inferred by analyzing the dependency graphs of Prolog predicates defining intensional relations, using an algorithm reminiscent of the call graph computation in ViPReSS [19].</a>
</body>
</html>