<html>
<head>
<meta name="TextLength" content="SENT_NUM:10, WORD_NUM:181">
</head>
<body bgcolor="white">
<a href="#0" id="0">A kernelization for a parameterized problem {a mathematical formula}P ⊆ Σ ⁎ ×N is an algorithm that, given {a mathematical formula}(x,k) ∈ Σ ⁎ ×N, outputs in time polynomial in {a mathematical formula}|x|+k a pair {a mathematical formula}(x ′ ,k ′ ) ∈ Σ ⁎ ×N such that</a>
<a href="#1" id="1">In particular, for constant k the kernel has constant size {a mathematical formula}g(k).</a>
<a href="#2" id="2">If g is a polynomial then we say that P admits a polynomial kernel.</a>
<a href="#3" id="3">If P is compositional, then it does not admit a polynomial kernel unless{a mathematical formula}NP ⊆ coNP/poly.</a>
<a href="#4" id="4">Let P and Q be parameterized problems such that{a mathematical formula}UP[P]is NP-complete,{a mathematical formula}UP[Q]is in NP, and there is a polynomial parameter transformation from P to Q.</a>
<a href="#5" id="5">If Q has a polynomial kernel, then P has a polynomial kernel.</a>
<a href="#6" id="6">{a mathematical formula}{0,1}-CSP(width)does not admit a polynomial kernel unless{a mathematical formula}NP ⊆ coNP/poly.</a>
<a href="#7" id="7">EGC-Cons(holes) does not admit a polynomial kernel unless{a mathematical formula}NP ⊆ coNP/poly.</a>
<a href="#8" id="8">SAT(vars) to EGC-Cons(holes).</a>
<a href="#9" id="9">As remarked in the proof of Theorem 4, SAT(vars) is known to have no polynomial kernel unless {a mathematical formula}NP ⊆ coNP/poly.</a>
</body>
</html>