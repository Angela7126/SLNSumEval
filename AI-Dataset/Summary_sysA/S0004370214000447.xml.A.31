<html>
<head>
<meta name="TextLength" content="SENT_NUM:11, WORD_NUM:215">
</head>
<body bgcolor="white">
<a href="#0" id="0">Decomposition constraints and task constraints enhance the learned HTN models using statistical information from the partial decomposition trees</a>
<a href="#1" id="1">These constraints ensure that the learned HTN models are consistent with the given partial decomposition trees.</a>
<a href="#2" id="2">Specifically, the method structures indicated in the partial decomposition trees should be reflected in the learned methods.</a>
<a href="#3" id="3">For example, given the partial decomposition tree in Fig.</a>
<a href="#4" id="4">3, the method structure 〈 (superpose ?x ?y), [(pickup ?x), stack(?x ?y)] 〉 should be learned, where ?x is a variable that is instantiated by “ A ” , and ?y is a variable that is instantiated by “ B ” in Fig.</a>
<a href="#5" id="5">3.</a>
<a href="#6" id="6">We build a set of constraints, called partialness constraints, to ensure these method structures are learned.</a>
<a href="#7" id="7">We would like to test how accuracy changes when each observed intermediate state is not complete.</a>
<a href="#8" id="8">We set the percentage of intermediate states as 1/3, and vary the percentage of propositions in each state from 20% to 100%.</a>
<a href="#9" id="9">In this paper, we presented a novel algorithm, HTNLearn, to learn the action models and method preconditions of an HTN model.</a>
<a href="#10" id="10">Given a set of plan traces annotated with partial state information and possibly annotated with partial decomposition trees, HTNLearn builds a set of state, decomposition, and action weighted constraints, and solves them with a MAX-SAT solver.</a>
</body>
</html>