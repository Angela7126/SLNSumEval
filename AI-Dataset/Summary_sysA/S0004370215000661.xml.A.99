<html>
<head>
<meta name="TextLength" content="SENT_NUM:6, WORD_NUM:287">
</head>
<body bgcolor="white">
<a href="#0" id="0">This is achieved by expanding the set {a mathematical formula}Rn as:{a mathematical formula} where {a mathematical formula}Rbasic is a set of POs with preconditions that include a single descriptor in addition to those that should change with the action, i.e.,{a mathematical formula} where {a mathematical formula}pchange ⊆ pexe is the set of descriptors that should change when the PO is executed, and {a mathematical formula}dj, {a mathematical formula}j=1, … ,|D+| is a descriptor from the list {a mathematical formula}D+, which contains the individual descriptors observed in the states before the execution of the action in the positive instances (5).</a>
<a href="#1" id="1">In step two, the PO used required a larger refinement because two unchanged descriptors, rather than one, needed to be considered to obtain a change three cells further in the direction of the movement.</a>
<a href="#2" id="2">In step six, a PO that required several refinements was applied,{a mathematical formula} In this case, the action involves moving the target object several cells up to the goal position.</a>
<a href="#3" id="3">Based on this instruction, a PO was generated that only coded the observed change (see Section 4.2.1):{a mathematical formula} Note that PO (31) only considers the descriptors at the upper right and left corners of the grid, but not those in the trajectory between them because they did not change with the action.</a>
<a href="#4" id="4">Therefore, we can easily force an unexpected effect by defining a new initial situation where a counter is placed on the trajectory from the target counter to the goal (Fig.</a>
<a href="#5" id="5">A major feature of the proposed method that allows correct POs to be found is our development of an efficient approach that permits the robot to determine unchanged causative conditions as well as the actions that lead to the observed changes.</a>
</body>
</html>