<html>
<head>
<meta name="TextLength" content="SENT_NUM:12, WORD_NUM:326">
</head>
<body bgcolor="white">
<a href="#0" id="0">Given a SAT local search algorithm solving a CNF formula F, the configuration checking strategy can be described as follows.</a>
<a href="#1" id="1">For a variable {a mathematical formula}x âˆˆ V(F), if the configuration of x has not been changed (in this work, this means none of its neighboring variables has been flipped) since its last flip, then it is forbidden to be flipped.</a>
<a href="#2" id="2">Typically, the CC strategy is used in the greedy mode, to decrease blind unreasonable greedy search.</a>
<a href="#3" id="3">With the above implementation of the CC strategy, a variable x is a CCD variable if and only if {a mathematical formula}score(x)>0 and {a mathematical formula}confChange(x)=1 hold at the same time.</a>
<a href="#4" id="4">First, we replace the SWT scheme in Swcca with PAWS [46], leading to a new algorithm called CCApaws.</a>
<a href="#5" id="5">More importantly, we propose a new variable property called subscore, and utilize it to break ties in CCApaws, resulting in the algorithm CCAsubscore, which proves very efficient for random k-SAT with {a mathematical formula}k>3.</a>
<a href="#6" id="6">Our experiments show that CCAsubscore significantly outperforms other state-of-the-art local search algorithms on random 5-SAT and 7-SAT instances.</a>
<a href="#7" id="7">We specially remark that the CC strategy degrades to the tabu method with {a mathematical formula}tt=1 for random 7-SAT instances at {a mathematical formula}r=85 with {a mathematical formula}n<564.</a>
<a href="#8" id="8">On the other hand, modern local search solvers for SAT cannot solve such random 7-SAT instances with more than 300 variables (within reasonable time).</a>
<a href="#9" id="9">This suggests that the CC strategy is currently not helpful for local search solvers in solving random 7-SAT instances, as we have mentioned before.</a>
<a href="#10" id="10">By utilizing subscore to break ties in the CCA framework, CCAsubscore achieves much better performance on random k-SAT instances with {a mathematical formula}k>3 than existing SLS solvers do.</a>
<a href="#11" id="11">As for future work, we would like to design more sophisticated variable property and scoring functions related to subscore, which we believe can further improve the state of the art in SLS algorithms for SAT, especially for random k-SAT instances with {a mathematical formula}k>3.</a>
</body>
</html>