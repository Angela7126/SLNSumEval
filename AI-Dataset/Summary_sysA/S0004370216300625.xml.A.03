<html>
<head>
<meta name="TextLength" content="SENT_NUM:5, WORD_NUM:182">
</head>
<body bgcolor="white">
<a href="#0" id="0">To evaluate our methods for generating parallel portfolios involving multiple solvers, we started with the set of solvers included by pfolioUZK, a parallel portfolio solver based on several solvers in their default configurations that won the gold medal in the parallel track of the 2012 SAT Challenge.</a>
<a href="#1" id="1">We were also able to verify that clause sharing can be used to further improve the performance of an ACPP solver, especially when configuration is performed alongside the component solver instances.</a>
<a href="#2" id="2">Although we did not use parallel solvers with clause sharing (such as Plingeling) in our portfolio, our parHydra method was able to generate a parallel solver without clause sharing that nevertheless performed as well as pfolioUZK.</a>
<a href="#3" id="3">This section extends the scope of our ACPP methods to allow inclusion of parallel solvers that perform clause sharing as portfolio components.</a>
<a href="#4" id="4">The first part of Table 7 summarizes the performance results for these solvers: first the sequential solvers in their default configurations (Default-SP), then the parallel solvers using clause sharing in their default configurations (Default-MP(8)+CS), and finally our ACPP solvers based on the component solvers of pfolioUZK.</a>
</body>
</html>