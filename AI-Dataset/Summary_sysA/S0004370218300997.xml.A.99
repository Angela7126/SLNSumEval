<html>
<head>
<meta name="TextLength" content="SENT_NUM:7, WORD_NUM:271">
</head>
<body bgcolor="white">
<a href="#0" id="0">All agents in the subset must strictly benefit from the deviation, as well as the agents in the coalition that the subset joins.</a>
<a href="#1" id="1">Therefore, in step (6) we initially check a deviation to coalition {a mathematical formula}Ci of all the agents (except the k chosen agents, to ensure k coalitions).</a>
<a href="#2" id="2">Since all weights are non-negative, the utility function of an agent is monotonic in the sense that if an agent does not benefit from a certain coalition, it will not benefit from any of its sub-coalitions.</a>
<a href="#3" id="3">Therefore, if there are some agents in the subset which do not benefit from the current deviation they cannot be a part of the deviating agents (since all other possible blocking coalitions deviating to {a mathematical formula}Ci are sub-coalitions of the current one), therefore we continue to check only the agents that did strictly benefit and that are potentially a part of a blocking coalition.</a>
<a href="#4" id="4">If some agents in {a mathematical formula}Ci do not benefit from the deviation, it means that {a mathematical formula}Ci cannot be a part of the blocking coalition, and we need to consider the next possible coalition to deviate to: {a mathematical formula}Ci+1.</a>
<a href="#5" id="5">If all of the agents in the deviation and in coalition {a mathematical formula}Ci strictly benefit from the deviation, then we found a blocking coalition, and therefore P is not a member of the k-coalitions-core.</a>
<a href="#6" id="6">Thus, the algorithm enumerates all possible potentially blocking coalitions for P. If the algorithm did not discover such deviation, then P is guaranteed to be in the k-coalitions-core.As for the complexity, it is clear that step (1) can be performed in polynomial time.</a>
</body>
</html>