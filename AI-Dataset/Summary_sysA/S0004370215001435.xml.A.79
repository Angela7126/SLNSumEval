<html>
<head>
<meta name="TextLength" content="SENT_NUM:4, WORD_NUM:200">
</head>
<body bgcolor="white">
<a href="#0" id="0">This example demonstrates the appeal of using a modeling language like MiniZinc for pattern mining: the formulation is high-level, declarative and close to the mathematical notation, it allows for user-defined constraints like the cover relation between items and transactions, and it is independent of the actual solution method.</a>
<a href="#1" id="1">Modeling a mining problem in MiningZinc follows the same methodology as modeling a constraint program: one has to express a problem in terms of variables with a domain, and constraints over these variables; for example, a set variable with a minimum frequency constraint over data.</a>
<a href="#2" id="2">Specifically, we describe a state of the rewrite process with a tuple{a mathematical formula} where L is an execution plan, and C is a set of constraints and annotations.</a>
<a href="#3" id="3">The initial state in the rewrite process is {a mathematical formula}( ∅ ,C), where C is the set of all FlatZinc constraints and the empty set indicates the initially empty execution plan; the final state in the rewrite process is {a mathematical formula}(L, ∅ ), where L represents a valid execution plan for the initial set of constraints C, and the empty set indicates that all constraints have been evaluated in the execution plan (modulo the optional annotations).</a>
</body>
</html>