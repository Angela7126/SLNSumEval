<html>
<head>
<meta name="TextLength" content="SENT_NUM:8, WORD_NUM:245">
</head>
<body bgcolor="white">
<a href="#0" id="0">Such problems can be alleviated to some extent through using control-based and agent-based approaches that plan for reconfiguration in distributed manner based on local information available in modules.</a>
<a href="#1" id="1">However, their underlying methods must mainly concern with keeping the connectedness of the modular robot during reconfiguration steps, considering convergence to the desired shape or behavior as a result of local interaction between modules, maintaining adaptability to the environmental changes, and exhibiting robustness to module failures.</a>
<a href="#2" id="2">The most central activity of a modular robot is to change its shape or morphology.</a>
<a href="#3" id="3">Such a change is the subject of the Self-Reconfiguration Problem (SRP), which emerged in the mid-1990s in parallel with evolution of modular robots hardware design.</a>
<a href="#4" id="4">Self-Reconfiguration is the process of transforming a modular robot from an initial configuration to a desired configuration through a set of primitive and module-level actions while the total number of modules is preserved, and Self-Reconfiguration Planning is the process of planning such sequence of actions.</a>
<a href="#5" id="5">Control-based methods of self-reconfiguration must be implemented with some considerations: a main issue in generating controllers is their Convergence to the goal configuration as they are usually developed based on local interactions and communications between modules.</a>
<a href="#6" id="6">In order to realize a particular gait in modular robots it is necessary to characterize two basic elements of controller and synchronization methods.</a>
<a href="#7" id="7">In fact, a gait is a set of cyclic actions that need a controller to tell each individual module what action must be done at each time-step.</a>
</body>
</html>