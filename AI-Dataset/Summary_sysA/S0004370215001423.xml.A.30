<html>
<head>
<meta name="TextLength" content="SENT_NUM:18, WORD_NUM:444">
</head>
<body bgcolor="white">
<a href="#0" id="0">The coalition structure generation problem is to find an optimal coalition structure {a mathematical formula}CS ⁎ ∈ Π A, i.e., an (arbitrary) element of the set{a mathematical formula}</a>
<a href="#1" id="1">The IP algorithm runs in {a mathematical formula}O(nn) time, and in the worst case it can end up constructing every possible coalition structure.</a>
<a href="#2" id="2">Since the algorithm does this for every possible coalition of size {a mathematical formula}s ≥ 2, all the movements in the graph are eventually evaluated.</a>
<a href="#3" id="3">For an arbitrary subset of movements{a mathematical formula}M ⊆ M, the algorithm{a mathematical formula}DPMoutputs a coalition structure in{a mathematical formula}argmaxCS ∈ RM{A}V(CS).</a>
<a href="#4" id="4">According to Corollary 7, given a subset of movements M, {a mathematical formula}DPM finds an optimal coalition structure if and only if {a mathematical formula}RM{A}= Π A.</a>
<a href="#5" id="5">For every coalition{a mathematical formula}C ∈ CAsuch that{a mathematical formula}{a1,a2} ⊈ C, the ODP algorithm does not evaluate any of the possible ways of splitting C.</a>
<a href="#6" id="6">For every coalition structure CS with{a mathematical formula}|CS| ≥ 2, the ODP algorithm evaluates exactly one movement that leads to CS.</a>
<a href="#7" id="7">The number of movements in{a mathematical formula}M ⁎ is equal to the number of coalition structures in{a mathematical formula} Π 2A ∪ Π 3A — levels 2 and 3 of the coalition structure graph.</a>
<a href="#8" id="8">That is,{a mathematical formula}</a>
<a href="#9" id="9">We will now show that, in order to find an optimal coalition structure, it suffices to evaluate all movements in {a mathematical formula}M ⁎ ⁎ .</a>
<a href="#10" id="10">Theorem 15 shows that {a mathematical formula}DPM ⁎ ⁎ finds an optimal coalition structure.</a>
<a href="#11" id="11">The{a mathematical formula}DPM ⁎ ⁎ algorithm does not evaluate any of the possible ways of splitting a coalition of size s, where{a mathematical formula}s ∈ { ⌊ 2n3 ⌋ +1, … ,n − 1}.</a>
<a href="#12" id="12">Find the best partition of {a mathematical formula}A ∖ (C1 ∪ C2) into two coalitions of sizes 1 and 3, and add those to {a mathematical formula}{C1,C2}.</a>
<a href="#13" id="13">This gives the best coalition structure in {a mathematical formula} Π I2A that contains {a mathematical formula}C1 and {a mathematical formula}C2.</a>
<a href="#14" id="14">Find the best partition of {a mathematical formula}A ∖ (C1 ∪ C2) into two coalitions of sizes 2 and 2, and add those to {a mathematical formula}{C1,C2}.</a>
<a href="#15" id="15">Find the best partition of {a mathematical formula}A ∖ (C1 ∪ C2) into three coalitions of sizes 1, 1 and 2, and add those to {a mathematical formula}{C1,C2}.</a>
<a href="#16" id="16">This gives the best coalition structure in {a mathematical formula} Π I4A that contains {a mathematical formula}C1 and {a mathematical formula}C2.</a>
<a href="#17" id="17">This is because in this example {a mathematical formula}A ∖ (C1 ∪ C2) is a coalition of four agents, which means that ODP has already computed {a mathematical formula}fM ⁎ ⁎ (A ∖ (C1 ∪ C2)).</a>
</body>
</html>