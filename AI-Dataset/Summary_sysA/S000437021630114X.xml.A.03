<html>
<head>
<meta name="TextLength" content="SENT_NUM:14, WORD_NUM:206">
</head>
<body bgcolor="white">
<a href="#0" id="0">We denote {a mathematical formula}S to the set of all states.</a>
<a href="#1" id="1">The backward search performs regression from {a mathematical formula}S ⋆ towards {a mathematical formula}I.</a>
<a href="#2" id="2">{a mathematical formula}</a>
<a href="#3" id="3">2a) because all the states with {a mathematical formula}f=f ⁎ are expanded.</a>
<a href="#4" id="4">2 with {a mathematical formula}g=1.</a>
<a href="#5" id="5">{a mathematical formula}</a>
<a href="#6" id="6">The use of mutexes in explicit-state search is straightforward: simply prune every (partial) state s such that facts {a mathematical formula}fi,fj ∈ s are mutex.</a>
<a href="#7" id="7">Therefore, unlike the case of search in the original state space, {a mathematical formula}MBDD does not perform all the pruning possible.</a>
<a href="#8" id="8">Partial constraints may be violated for some states in {a mathematical formula}Si Α but not for others.</a>
<a href="#9" id="9">Originally, Gamer used unidirectional uniform-cost search and {a mathematical formula}BDDA ⁎ with symbolic Pattern Databases.</a>
<a href="#10" id="10">Table 5 evaluates our symbolic search enhancements in {a mathematical formula}BDDA ⁎ with symbolic PDBs.</a>
<a href="#11" id="11">Image computation methods improve {a mathematical formula}BDDA ⁎ as much as bidirectional symbolic uniform-cost search.</a>
<a href="#12" id="12">Gamer and cGamer use bidirectional uniform-cost search and {a mathematical formula}BDDA ⁎ with symbolic PDBs.</a>
<a href="#13" id="13">Well-informed heuristics, such as LM-cut, increase the performance of explicit-state search and the total performance is slightly better to that of symbolic forward search and similar to symbolic {a mathematical formula}BDDA ⁎ with PDB heuristics.</a>
</body>
</html>