<html>
<head>
<meta name="TextLength" content="SENT_NUM:13, WORD_NUM:259">
</head>
<body bgcolor="white">
<a href="#0" id="0">Definition 8</a>
<a href="#1" id="1">SolutionLet {a mathematical formula}P be an HTN planning problem.</a>
<a href="#2" id="2">A task network {a mathematical formula}tns is a solution to {a mathematical formula}P, if and only if {a mathematical formula}tns is executable in {a mathematical formula}s0, and {a mathematical formula}tn0 → D ⁎ tns for {a mathematical formula}tns being a solution to {a mathematical formula}P.</a>
<a href="#3" id="3">Solution flexibility defines the ordering of operators in the solution to a planning problem.</a>
<a href="#4" id="4">Let {a mathematical formula}P be an HTN planning problem.</a>
<a href="#5" id="5">The solution to {a mathematical formula}P is flexible if it is partially ordered.</a>
<a href="#6" id="6">Let {a mathematical formula}P be an HTN planning problem.</a>
<a href="#7" id="7">An HTN planner is sound if every plan it gives is a correct solution to {a mathematical formula}P.</a>
<a href="#8" id="8">Let {a mathematical formula}P be an HTN planning problem.</a>
<a href="#9" id="9">An HTN planner is complete if it always finds a solution to {a mathematical formula}P when such a solution exists.</a>
<a href="#10" id="10">Let {a mathematical formula}P be an HTN planning problem and Π be a solution to {a mathematical formula}P. An HTN planner is said to tolerate faults from a fault set F during the execution of Π iff for each {a mathematical formula}f ∈ F, there exists a sequence of operators {a mathematical formula} Π f such that {a mathematical formula} Π f is a solution to {a mathematical formula}P.</a>
<a href="#11" id="11">Planner takes in the current HTN planning problem {a mathematical formula}P and computes a solution plan Π .</a>
<a href="#12" id="12">each {a mathematical formula}ti is a primitive task that corresponds to an atomic process {a mathematical formula}pi defined by some OWL-S to HTN translation.</a>
</body>
</html>