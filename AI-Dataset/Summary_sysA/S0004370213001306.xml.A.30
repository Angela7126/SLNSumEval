<html>
<head>
<meta name="TextLength" content="SENT_NUM:11, WORD_NUM:247">
</head>
<body bgcolor="white">
<a href="#0" id="0">A novel model of multi-agent team performance, the weighted synergy graph model, where agents are vertices in a connected weighted graph, edges represent how well agents work together, and agent capabilities are Normally-distributed variables;</a>
<a href="#1" id="1">The definition of the synergy of a multi-robot team as a function of the weighted synergy graph model;</a>
<a href="#2" id="2">In this section, we formally define the weighted synergy graph and how it is used to compute the performance of a team of agents at a task.</a>
<a href="#3" id="3">The weighted synergy graph is a tuple {a mathematical formula}(G,C), where:</a>
<a href="#4" id="4">We defer how a weighted synergy graph is learned from observations of performance to the next section.</a>
<a href="#5" id="5">Using the weighted synergy graph model and the synergy equations, we can compute the synergy of a team of agents {a mathematical formula}A ⊆ A.</a>
<a href="#6" id="6">However, the synergy computed is a Normally-distributed variable, and we need to rank such variables to choose one possible team over another.</a>
<a href="#7" id="7">We have formally defined the weighted synergy graph and our team formation algorithm to approximate the Δ -optimal team.</a>
<a href="#8" id="8">However, the team formation algorithm assumes the existence of a weighted synergy graph.</a>
<a href="#9" id="9">In this section, we contribute our learning algorithm that learns a weighted synergy graph using only observations of the performance of teams of agents in {a mathematical formula}A.</a>
<a href="#10" id="10">The algorithm first generates a random weighted graph structure with {a mathematical formula}N=|A| vertices, and the function LearnCapabilities estimates the capabilities of the agents using the weighted graph structure and observation set O.</a>
</body>
</html>