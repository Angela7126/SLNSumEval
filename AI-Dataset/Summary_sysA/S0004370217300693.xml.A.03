<html>
<head>
<meta name="TextLength" content="SENT_NUM:15, WORD_NUM:221">
</head>
<body bgcolor="white">
<a href="#0" id="0">Given an unsatisfiable SAT formula Φ , an unsatisfiable core{a mathematical formula} Φ C is a subset of clauses {a mathematical formula} Φ C ⊆ Φ that is also unsatisfiable.</a>
<a href="#1" id="1">Indeed they work on a sequence of {a mathematical formula} Φ k MaxSAT instances such that {a mathematical formula}cost( Φ k)=cost( Φ ) − k.</a>
<a href="#2" id="2">Both algorithms use as {a mathematical formula} Φ n an unsatisfiable core of {a mathematical formula} Φ k.</a>
<a href="#3" id="3">This guarantees that {a mathematical formula}cost( Φ n) ≥ e ≥ 1 and hopefully n is less than the number of soft clauses in {a mathematical formula} Φ k.</a>
<a href="#4" id="4">Let us see in detail how {a mathematical formula} Φ n ′ is generated.</a>
<a href="#5" id="5">{a mathematical formula}</a>
<a href="#6" id="6">At the end, the working MaxSAT formula {a mathematical formula} Φ k is transformed into:{a mathematical formula}</a>
<a href="#7" id="7">{a mathematical formula}</a>
<a href="#8" id="8">{a mathematical formula}</a>
<a href="#9" id="9">{a mathematical formula}</a>
<a href="#10" id="10">Each SAT instance {a mathematical formula} Φ k encodes whether there is an assignment to Φ with a cost ≤ k.</a>
<a href="#11" id="11">WPM3 increases the lower bound by testing unsatisfiable {a mathematical formula} Φ k SAT instances.</a>
<a href="#12" id="12">If this is not possible, some of them will appear into the unsatisfiable core {a mathematical formula} Φ Ck.</a>
<a href="#13" id="13">{a mathematical formula}</a>
<a href="#14" id="14">In our algorithm the set A in an at-most constraint {a mathematical formula} 〈 A,k,w 〉 is ordered.</a>
</body>
</html>