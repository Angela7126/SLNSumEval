<html>
<head>
<meta name="TextLength" content="SENT_NUM:11, WORD_NUM:230">
</head>
<body bgcolor="white">
<a href="#0" id="0">Definition 1</a>
<a href="#1" id="1">Abstraction [12]Let Π be a planning task with state space {a mathematical formula} Θ Π =(S,L,T,s0,S ⋆ ).</a>
<a href="#2" id="2">An abstraction of Θ is a surjective function {a mathematical formula} Α :S → S Α mapping {a mathematical formula}S to a set of abstract states, {a mathematical formula}S Α .</a>
<a href="#3" id="3">Definition 2</a>
<a href="#4" id="4">Abstraction heuristic [12]Let Α be an abstraction with an associated abstract state space {a mathematical formula} Θ Α .</a>
<a href="#5" id="5">The induced abstraction heuristic{a mathematical formula}h Α (s) is a heuristic function that returns the cost of the cheapest path from {a mathematical formula} Α (s) to {a mathematical formula}S ⋆ Α in {a mathematical formula} Θ Α .</a>
<a href="#6" id="6">Each table represents an intermediate abstraction with relevant variables {a mathematical formula}W ⊆ V.</a>
<a href="#7" id="7">These tables recursively define the mapping between states in {a mathematical formula} Θ W to abstract states.</a>
<a href="#8" id="8">Each abstract state is identified with a number, from 0 to {a mathematical formula}| Α | − 1, where {a mathematical formula}| Α | is the number of abstract states in the abstraction.</a>
<a href="#9" id="9">Algorithm 2 shows the precomputation phases of a PA heuristic.</a>
<a href="#10" id="10">Algorithm 3 can be adapted to compute the ADD representation of the M&S abstraction function (that maps states in S to abstract states in {a mathematical formula}Sn Α ) by assigning to terminal nodes the id of each abstract state instead of their heuristic value.</a>
</body>
</html>