<html>
<head>
<meta name="TextLength" content="SENT_NUM:9, WORD_NUM:225">
</head>
<body bgcolor="white">
<a href="#0" id="0">In order to analyze the community structure of the SAT instances obtained with our model, we have generated some sets of random formulas for different values of {a mathematical formula}Q ∈ {0.9,0.8,0.7,0.5,0.3} (hence {a mathematical formula}p=Q+1/c), and for different values of number of communities {a mathematical formula}c ∈ {10,20,40,80}.</a>
<a href="#1" id="1">Each set contains 50 random instances.</a>
<a href="#2" id="2">Remark that the modularity Q of (real) industrial SAT instances is usually greater than 0.7 [9], while no modularity greater than 0.3 is found for classical random k-CNF formulas.</a>
<a href="#3" id="3">Moreover, the number of communities c is usually in the interval {a mathematical formula}[10,100][9].</a>
<a href="#4" id="4">In Fig.</a>
<a href="#5" id="5">5 we compare the performance of the SAT solvers Glucose [11] (version 3.0) and March [22] (version br) over some sets of SAT formulas generated with our model, with distinct modularity values.</a>
<a href="#6" id="6">While Glucose is a CDCL SAT solver which has been shown very good for solving industrial problems, March is a Look-ahead SAT solver commonly used to solve random k-CNF instances.</a>
<a href="#7" id="7">We use sets of instances from {a mathematical formula}Fk(n,m,c,p) with a clause/variable ratio {a mathematical formula}m/n in the phase transition point, a number of communities {a mathematical formula}c=40 and a clause length {a mathematical formula}k=3.</a>
<a href="#8" id="8">We adjust the number of variables as in Table 1, in order to ensure that some of these solvers solve all formulas in a timeout of 3 hours.</a>
</body>
</html>