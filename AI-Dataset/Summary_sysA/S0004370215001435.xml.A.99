<html>
<head>
<meta name="TextLength" content="SENT_NUM:7, WORD_NUM:221">
</head>
<body bgcolor="white">
<a href="#0" id="0">Modeling a mining problem in MiningZinc follows the same methodology as modeling a constraint program: one has to express a problem in terms of variables with a domain, and constraints over these variables; for example, a set variable with a minimum frequency constraint over data.</a>
<a href="#1" id="1">MiningZinc models are typically expressed over set variables, however, some CP solvers do not support constraints over set variables.</a>
<a href="#2" id="2">Differences in this category come from the use of different redundant constraints and different CP systems.</a>
<a href="#3" id="3">As this involves only one CP system, one could very well apply algorithm selection techniques here.</a>
<a href="#4" id="4">As the ranking of generic plans is only important in case there are no specialized or hybrid plans, we rather use a simple ranking, first based on number of constraints (with the naive assumption that more redundant constraints are better), then on the global order of the CP systems.</a>
<a href="#5" id="5">{sup:4} For these datasets the pure CP approach does not work due to the complexity of flattening the model and data, while the post-processing based approaches are still able to solve the problem.</a>
<a href="#6" id="6">Hence, even for large datasets for which a CP-based approach is not possible, MiningZinc can still be used and can even continue to take advantage of generic CP technology in the post-processing step (in case only a subset of the constraints need checking).</a>
</body>
</html>