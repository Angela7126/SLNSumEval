<html>
<head>
<meta name="TextLength" content="SENT_NUM:5, WORD_NUM:267">
</head>
<body bgcolor="white">
<a href="#0" id="0">Similarly to a few other algorithms (e.g., GAC-allowed [6] and GAC-va [8]), STR3 provides an index for each constraint table, enabling a tuple sought with respect to a domain value to be found without visiting irrelevant tuples, thus reducing time complexity.</a>
<a href="#1" id="1">GAC algorithms normally follow the same pattern: a domain value is proved to be consistent by producing a valid tuple containing that value (in the case of positive table constraints) or by producing some evidence from auxiliary structures, e.g., a path in case of BDDs (Boolean Decision Diagrams), MDDs (Multi-valued Decision Diagrams), or tries [12], [21], [22].</a>
<a href="#2" id="2">During search, STR3 (lines 10 – 33) is called for a constraint C every time a value a is removed from the domain of a variable X involved in C. Note that the instantiation of a variable X effectively invokes {a mathematical formula}STR3(C,X,a) for every value a that is present in the domain of X at the time of the assignment but which is not the value assigned to X.</a>
<a href="#3" id="3">The worst-case time complexity of STR3 along a single path of length m in the search tree is{a mathematical formula}O(rt+m)per constraint.STR3's operations can be seen from the point of view of the three main data structures: table, inv, and dep.</a>
<a href="#4" id="4">{a mathematical formula}STR3circ's correctness can be derived from STR3's when their differences are accounted for as follows:Case d1: The circular move guarantees that, unless a variable X is assigned to a value {a mathematical formula}b ≠ a, the only condition for the value a to be removed is the absence of support in the sub-table involving {a mathematical formula}(X,a).</a>
</body>
</html>