<html>
<head>
<meta name="TextLength" content="SENT_NUM:9, WORD_NUM:458">
</head>
<body bgcolor="white">
<a href="#0" id="0">Observe that the input to the complete set partitioning problem is a list of {a mathematical formula}2n − 1 real values (where n is the size of the ground set), and every algorithm that is guaranteed to find an optimal solution on every instance of this problem has to inspect all of these values.</a>
<a href="#1" id="1">The coalition structure generation problem is to find an optimal coalition structure {a mathematical formula}CS ⁎ ∈ Π A, i.e., an (arbitrary) element of the set{a mathematical formula}</a>
<a href="#2" id="2">Given a coalition {a mathematical formula}C ⊆ A, we denote by {a mathematical formula}f(C) the value of an optimal partition of C, i.e., {a mathematical formula}f(C)=V(CS), where {a mathematical formula}CS ∈ argmaxCS ∈ Π CV(CS).</a>
<a href="#3" id="3">The coalition structure generation problem is computationally challenging, as the number of possible coalition structures over n players, which is known as the n-th Bell number{a mathematical formula}Bn[6], satisfies {a mathematical formula} Α nn/2 ≤ Bn ≤ nn for some positive constant Α (see, e.g., the work of Sandholm et al.</a>
<a href="#4" id="4">Knowing {a mathematical formula}UB ⁎ enables us to bound the quality of {a mathematical formula}CS ⁎ ⁎ — the best coalition structure found by the algorithm at a given point in time; we set {a mathematical formula} Β =UB ⁎ /V(CS ⁎ ⁎ ).</a>
<a href="#5" id="5">Specifically, after fixing d coalitions {a mathematical formula}C1 ∈ Ci1A, … ,Cd ∈ CidA, and before iterating over the relevant coalitions in {a mathematical formula}Cid+1A, … ,CikA, it checks whether{a mathematical formula} Now, if inequality (1) holds, every coalition structure containing {a mathematical formula}C1, … ,Cd can be skipped during the search, because its value cannot be greater than {a mathematical formula}V(CS ⁎ ⁎ ) — the value of the best coalition structure found by the algorithm so far.</a>
<a href="#6" id="6">Consequently, based on Corollary 7, the best coalition structure in those subspaces can easily be identified: simply repeat the process of splitting the coalition(s) in {a mathematical formula}{A} in the best way (out of all the ways that were evaluated by sb-ODP thus far) until no such splitting is beneficial.</a>
<a href="#7" id="7">The authors showed how, using this extra information, every time the algorithm finishes evaluating the splits of all coalitions of a certain size s, it can construct a coalition structure whose value is guaranteed to be within a bound r from optimal, where {a mathematical formula}r=max ⁡ {i:i ∈ Z,s ≤ ⌊ ni ⌋ }.</a>
<a href="#8" id="8">By Theorem 12, we have{a mathematical formula}Now, recall that the number of ways to partition n elements into k parts — known as the Stirling number of the second kind[43], and denoted by {a mathematical formula}S(n,k) — is computed as follows:{a mathematical formula} Thus, the number of movements that are evaluated by ODP is {a mathematical formula}S(n,2)+S(n,3), which equals{a mathematical formula} □</a>
</body>
</html>