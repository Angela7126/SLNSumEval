<html>
<head>
<meta name="TextLength" content="SENT_NUM:11, WORD_NUM:231">
</head>
<body bgcolor="white">
<a href="#0" id="0">We prove that the coalitional manipulation problem is NP-complete under the Borda rule with two manipulators.</a>
<a href="#1" id="1">This settles an open problem in computational social choice.</a>
<a href="#2" id="2">We also show that Baldwin's and Nanson's rules are NP-complete to manipulate even with a single manipulator.</a>
<a href="#3" id="3">For Baldwin's rule and weighted votes, the coalitional manipulation problem is NP-hard with three or more candidates.We reduce from the partition problem.</a>
<a href="#4" id="4">We construct a coalitional manipulation problem with three candidates (a, b, and p) in which the manipulators want to make p win.We suppose the non-manipulators have voted as in the following table.</a>
<a href="#5" id="5">We show that the weighted coalitional manipulation problem under Nanson's rule is NP-complete with four or more candidates.</a>
<a href="#6" id="6">However, if there are at most three candidates, the computational complexity of computing a manipulation under Nanson's rule is polynomial-time.</a>
<a href="#7" id="7">For Nanson's rule and weighted votes, the coalitional manipulation problem is NP-complete with four or more candidates.We reduce from partition.</a>
<a href="#8" id="8">For any partition instance, we construct a coalitional manipulation problem with four candidates (a, b, c, and p) where p is the candidate that the manipulators wish to win.</a>
<a href="#9" id="9">Consider an election with three candidates ({a mathematical formula}a,b, and p) in which the manipulators want p to win.</a>
<a href="#10" id="10">We prove that in a successful manipulation, either all manipulators vote {a mathematical formula}p ≻ a ≻ b or they all vote {a mathematical formula}p ≻ b ≻ a.</a>
</body>
</html>