<html>
<head>
<meta name="TextLength" content="SENT_NUM:7, WORD_NUM:261">
</head>
<body bgcolor="white">
<a href="#0" id="0">The original CBS algorithm corresponds to the extreme case where {a mathematical formula}B= ∞ (never merge agents), and the Independence Detection (ID) framework [45] is the other extreme case where {a mathematical formula}B=0 (always merge agents when conflicts occur).</a>
<a href="#1" id="1">For each agent {a mathematical formula}ai we assume that no other agent exists and calculate its optimal individual path cost from all states in the state space to {a mathematical formula}goali; this is usually done by a reverse search from the goal.</a>
<a href="#2" id="2">The low-level search is given an agent, {a mathematical formula}ai, and the set of constraints associated with {a mathematical formula}ai.</a>
<a href="#3" id="3">It performs a search in the underlying graph to find an optimal path for agent {a mathematical formula}ai that satisfies all its constraints while completely ignoring the other agents.</a>
<a href="#4" id="4">When the ID framework is applied to k agents (whose start and goal locations are randomized) the resulting effective number of agents, {a mathematical formula}k ′ , is noisy and its variance is very large.</a>
<a href="#5" id="5">Note that although CBS generates more nodes than EPEA*, it is still faster in many cases ({a mathematical formula}k ′ >14) due to the fact that the constant time per node of the low-level CBS (single-agent state, small open list) is much smaller than that of EPEA* (multiple agents, large open list).</a>
<a href="#6" id="6">Setting {a mathematical formula}0<B< ∞ gives MA-CBS flexibility, so that in cases where only few conflicts occur, MA-CBS can act like CBS, while if conflicts are common, MA-CBS can converge to a single meta-agent problem that includes all or most of the conflicting agents.</a>
</body>
</html>