<html>
<head>
<meta name="TextLength" content="SENT_NUM:4, WORD_NUM:215">
</head>
<body bgcolor="white">
<a href="#0" id="0">This task can be understood as falling within the programming by optimization paradigm [34] in that it involves the design of software in which many design decisions have been deliberately left open during the development process (here exposed as parameters of SAT solvers) to be made automatically later (here by means of an automated algorithm configurator) in order to obtain optimized performance for specific use cases.</a>
<a href="#1" id="1">Parallel portfolios have since made practical impact, both in cases where the allocation of computational resources to algorithms in the portfolio is static [62], [76] and where the component solvers contained in a portfolio or the resources assigned to them can change over time [24].</a>
<a href="#2" id="2">A sequential portfolio solver must somehow select component solvers (which can result in making the wrong decision), while static parallel solvers run the entire portfolio in parallel and thus achieve nearly the same performance as the portfolio's virtual best solver.</a>
<a href="#3" id="3">Following established best practices (see [40]), we performed n independent runs of AC, obtained configured solvers {a mathematical formula}c(j) with {a mathematical formula}j ∈ {1 … n} and retained the configured solver {a mathematical formula}c ˆ which achieved the best performance on instance set I according to metric m. By t we denote the overall time budget available for producing a parallel portfolio solver.</a>
</body>
</html>