<html>
<head>
<meta name="TextLength" content="SENT_NUM:4, WORD_NUM:184">
</head>
<body bgcolor="white">
<a href="#0" id="0">Note that the only difference between the extended structure defined above and the structure in first-order logic is the partial function {a mathematical formula}fA which maps domain elements to numbers.</a>
<a href="#1" id="1">A normal program with aggregates (or program for short) is a finite set of rules of the form{a mathematical formula} where Α is either a standard atom or ⊥ , {a mathematical formula} Β i ({a mathematical formula}1 ≤ i ≤ l) and {a mathematical formula} Γ j ({a mathematical formula}1 ≤ j ≤ m) are atoms.</a>
<a href="#2" id="2">Therefore, normal logic programs with the aggregate type {a mathematical formula}sum(M)=n can be expressed in first-order logic with this aggregate as well.</a>
<a href="#3" id="3">(Fact 1) Every propositional disjunctive rule of the form{a mathematical formula} can be equivalently transformed into a set of rules with implications in the bodies as follows{a mathematical formula}(Fact 2) An implication {a mathematical formula}p → q is strongly equivalent to the following aggregate atom{a mathematical formula} where two expressions are said to be strongly equivalent in Answer Set Programming if replacing one by another in any logic program does not change the answer sets.</a>
</body>
</html>