<html>
<head>
<meta name="TextLength" content="SENT_NUM:7, WORD_NUM:231">
</head>
<body bgcolor="white">
<a href="#0" id="0">We observe that when we are looking for an Ε bounded solution, we can reuse the old path cost {a mathematical formula}v(s) for an underconsistent state s (selected for expansion), as long as {a mathematical formula}g Π (s)+h(s) ≤ Ε ⋅ (v(s)+h(s)).</a>
<a href="#1" id="1">ComputePath in TLPA* uses the {a mathematical formula}g Π values to apply the truncation rules.</a>
<a href="#2" id="2">When an underconsistent state s is selected for expansion, its {a mathematical formula}g Π (s) is used to check whether Rule 1 can be applied.</a>
<a href="#3" id="3">The cost of every edge along this path is added to {a mathematical formula}g Π (s) (the states are added to {a mathematical formula} Π (s)).</a>
<a href="#4" id="4">Therefore, in D* Lite, the g and v values are estimates of the goal distances, i.e., for a state s, {a mathematical formula}g(s) denotes the path cost from s to {a mathematical formula}sgoal.</a>
<a href="#5" id="5">If heuristic inflation ensures that the path estimates are always within {a mathematical formula} Ε 1 bound of the optimal path cost and the truncation rules ensure that the actual path costs are within {a mathematical formula} Ε 2 bound of the path estimates, we can guarantee that the solution cost will be within {a mathematical formula} Ε 1 ⋅ Ε 2 of the optimal solution cost.</a>
<a href="#6" id="6">TLPA* truncates the cost propagation for an underconsistent state s (selected for expansion), if {a mathematical formula}g Π (s)+h(s) ≤ Ε ⋅ (v(s)+h(s)).</a>
</body>
</html>