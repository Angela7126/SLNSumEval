<html>
<head>
<meta name="TextLength" content="SENT_NUM:9, WORD_NUM:322">
</head>
<body bgcolor="white">
<a href="#0" id="0">Here the hard score of a variable is the change on the number (or total weight) of satisfied hard clauses caused by flipping the variable, and the soft score of a variable is the change on the number (or total weight) of satisfied soft clauses caused by flipping the variable.</a>
<a href="#1" id="1">By separating hard score and soft score, the algorithm becomes more flexible, in the sense that it can pick the flipping variable according to either hard score or soft score, or both, according to different situations.</a>
<a href="#2" id="2">The third idea is a variable selection heuristic based on hard score and soft score.</a>
<a href="#3" id="3">The heuristic distinguishes three different situations during the search, and uses hard score and soft score in different ways under each situation.</a>
<a href="#4" id="4">In detail, we compare Dist with its four alternative versions, and the experimental results illustrate the effectiveness of the ideas; more interestingly, all alternatives based on separation of hard and soft score have better performance than previous local search algorithms, indicating separation of hard and soft score is an essential technique and opens up a new direction for local search algorithms for PMS (and also weighted PMS).</a>
<a href="#5" id="5">A common variable property used in local search algorithms for weighted MaxSAT is the {a mathematical formula}score property, which is defined as the change on the total weight of satisfied clauses caused by flipping the variable.</a>
<a href="#6" id="6">Most local search algorithms for SAT and MaxSAT problems utilize the variable property {a mathematical formula}score, which measures the increase of the number (or total weight) of satisfied clauses caused by flipping a variable x.</a>
<a href="#7" id="7">Previous local search algorithms for PMS also utilize the {a mathematical formula}score property to pick variables.</a>
<a href="#8" id="8">In order to make the algorithm more robust, we employ a random walk with a small probability in each random step (line 15), as suggested in [26]; Otherwise, the variable with the greatest {a mathematical formula}sscore from the chosen falsified clause is selected (line 16).</a>
</body>
</html>