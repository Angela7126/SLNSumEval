<html>
<head>
<meta name="TextLength" content="SENT_NUM:6, WORD_NUM:180">
</head>
<body bgcolor="white">
<a href="#0" id="0">Since SATenstein-LS is quite complex, we took great care in validating its implementations of existing SLS-based SAT solvers.</a>
<a href="#1" id="1">We compared our SATenstein-LS implementation with ten well-known algorithms' reference implementations (specifically, every algorithm listed in Table 5 except for Ranov), measuring running times as the number of variable flips.</a>
<a href="#2" id="2">{sup:3} These ten algorithms span G{sup:2}WSAT-based, WalkSAT-based, and dynamic local search procedures, and also make use of all the prominent SLS solver mechanisms discussed earlier.</a>
<a href="#3" id="3">Our validation results showed that in every case, reference solvers and their SATenstein-LS implementations have the same run-length distributions on a small set of 10 validation instances chosen from block world and software verification, based on a Kolmogorov – Smirnov test (5000 runs per solver – instance pair with significance threshold 0.05).</a>
<a href="#4" id="4">For each instance distribution D, we compared the performance of SATenstein-LS[D] against that of 11 high-performance SLS-based SAT solvers on the respective test set.</a>
<a href="#5" id="5">We included every SLS algorithm that won a medal in any category of a SAT competitions between 2002 and 2007, because those algorithms are all part of the SATenstein-LS design space.</a>
</body>
</html>