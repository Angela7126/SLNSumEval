<html>
<head>
<meta name="TextLength" content="SENT_NUM:8, WORD_NUM:367">
</head>
<body bgcolor="white">
<a href="#0" id="0">More specifically, it operates as follows: To deal with the unknown performance characteristics of workers, our algorithm divides its budget into two amounts (as dictated by an Ε parameter) to be used in two sequential phases — an initial exploration phase, during which it uniformly samples the performance of a wide range of workers using the first part of its budget, and an exploitation phase, during which it selects only the best workers using its remaining budget.</a>
<a href="#1" id="1">More specifically, we prove that the performance regret (i.e., the difference between the performance of a particular algorithm and that of the optimal solution) of the bounded Ε -first approach is at most {a mathematical formula}O(B23) with a high probability, where B is the total budget.</a>
<a href="#2" id="2">Given this, we aim to solve the following integer program:{a mathematical formula} where {a mathematical formula}xiexploit are the decision variables, representing the number of times we pull arm i in the exploitation phase.</a>
<a href="#3" id="3">Having the value of each {a mathematical formula}xiexploit, we now run the exploitation algorithm as follows: At each subsequent time step t, if the number of times arm i has been pulled does not exceed {a mathematical formula}xiexploit, then we pull that arm at t. Hereafter we refer to this exploitation approach as {a mathematical formula}Agreedy.</a>
<a href="#4" id="4">Budget-limited Ε -first: a practically efficient budget-limited MAB algorithm that assigns all tasks to a single expert, that can provide the highest total quality with respect to his task limit, during the exploitation phase [33].</a>
<a href="#5" id="5">Note that our algorithm approaches the theoretical optimum by up to {a mathematical formula}75% (in the cases of moderate, large and extreme budgets), while it achieves {a mathematical formula}61% of the optimal solution's performance in the scenario with small budgets.</a>
<a href="#6" id="6">We can also observe that the uniform and random algorithms are clearly worse than our approach for any budget size, as they do not take into account the workers' performance characteristics at all.</a>
<a href="#7" id="7">This significant increase in relative performance to the other benchmarks is again due to the ability of our algorithm to rely on several high-quality workers within their respective task limits, while most of the other benchmarks rely on a single worker that eventually hits its task limit.</a>
</body>
</html>