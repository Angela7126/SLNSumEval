<html>
<head>
<meta name="TextLength" content="SENT_NUM:9, WORD_NUM:288">
</head>
<body bgcolor="white">
<a href="#0" id="0">Different semantics of abstract Argumentation Frameworks (AFs) provide different levels of decisiveness for reasoning about the acceptability of conflicting arguments.</a>
<a href="#1" id="1">The stable semantics is useful for applications requiring a high level of decisiveness, as it assigns to each argument the label “accepted” or the label “rejected”.</a>
<a href="#2" id="2">Unfortunately, stable labellings are not guaranteed to exist, thus raising the question as to which parts of AFs are responsible for the non-existence.</a>
<a href="#3" id="3">In this paper, we address this question by investigating a more general question concerning preferred labellings (which may be less decisive than stable labellings but are always guaranteed to exist), namely why a given preferred labelling may not be stable and thus undecided on some arguments.</a>
<a href="#4" id="4">In particular, (1) we give various characterisations of parts of an AF, based on the given preferred labelling, and (2) we show that these parts are indeed responsible for the undecisiveness if the preferred labelling is not stable.</a>
<a href="#5" id="5">We then use these characterisations to explain the non-existence of stable labellings.</a>
<a href="#6" id="6">We present two types of characterisations, based on labellings that are more (or equally) committed than the given preferred labelling on the one hand, and based on the structure of the given AF on the other, and compare the respective AF parts deemed responsible.</a>
<a href="#7" id="7">To prove that our characterisations indeed yield responsible parts, we use a notion of enforcement of labels through structural revision, by means of which the preferred labelling of the given AF can be turned into a stable labelling of the structurally revised AF.</a>
<a href="#8" id="8">Rather than prescribing how this structural revision is carried out, we focus on the enforcement of labels and leave the engineering of the revision open to fulfil differing requirements of applications and information available to users.</a>
</body>
</html>