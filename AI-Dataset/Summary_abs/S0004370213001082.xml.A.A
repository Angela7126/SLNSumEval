<html>
<head>
<meta name="TextLength" content="SENT_NUM:8, WORD_NUM:225">
</head>
<body bgcolor="white">
<a href="#0" id="0">Perhaps surprisingly, it is possible to predict how long an algorithm will take to run on a previously unseen input, using machine learning techniques to build a model of the algorithmʼs runtime as a function of problem-specific instance features.</a>
<a href="#1" id="1">Such models have important applications to algorithm analysis, portfolio-based algorithm selection, and the automatic configuration of parameterized algorithms.</a>
<a href="#2" id="2">Over the past decade, a wide variety of techniques have been studied for building such models.</a>
<a href="#3" id="3">Here, we describe extensions and improvements of existing models, new families of models, and—perhaps most importantly—a much more thorough treatment of algorithm parameters as model inputs.</a>
<a href="#4" id="4">We also comprehensively describe new and existing features for predicting algorithm runtime for propositional satisfiability (SAT), travelling salesperson (TSP) and mixed integer programming (MIP) problems.</a>
<a href="#5" id="5">We evaluate these innovations through the largest empirical analysis of its kind, comparing to a wide range of runtime modelling techniques from the literature.</a>
<a href="#6" id="6">Our experiments consider 11 algorithms and 35 instance distributions; they also span a very wide range of SAT, MIP, and TSP instances, with the least structured having been generated uniformly at random and the most structured having emerged from real industrial applications.</a>
<a href="#7" id="7">Overall, we demonstrate that our new models yield substantially better runtime predictions than previous approaches in terms of their generalization to new problem instances, to new algorithms from a parameterized space, and to both simultaneously.</a>
</body>
</html>