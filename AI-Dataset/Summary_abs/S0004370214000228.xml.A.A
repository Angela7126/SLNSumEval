<html>
<head>
<meta name="TextLength" content="SENT_NUM:11, WORD_NUM:193">
</head>
<body bgcolor="white">
<a href="#0" id="0">We present a nondeterministic, recursive algorithm for updating a Kripke model so as to satisfy a given formula of computation-tree logic (CTL).</a>
<a href="#1" id="1">Recursive algorithms for model update face two dual difficulties: (1) Removing transitions from a Kripke model to satisfy a universal subformula may dissatisfy some existential subformulas.</a>
<a href="#2" id="2">Conversely, (2) adding transitions to satisfy an existential subformula may dissatisfy some universal subformulas.</a>
<a href="#3" id="3">To overcome these difficulties, we employ protections of the form 〈E,A,L〉, recording information about the satisfaction of subformulas previously treated by the algorithm.</a>
<a href="#4" id="4">Intuitively, (1) E is the set of transitions that we cannot remove without compromising the satisfaction of previously treated subformulas.</a>
<a href="#5" id="5">Conversely, (2) A is the set of transitions that we can add.</a>
<a href="#6" id="6">Hence, update proceeds without diminishing E and without augmenting A. Finally, (3) L is a set of literals protecting the model labels.</a>
<a href="#7" id="7">We illustrate our algorithm through several examples: Emerson and Clarke's mutual-exclusion problem, Clarke et.</a>
<a href="#8" id="8">al.'s microwave-oven example, synchronous counters, and randomly generated models and formulas.</a>
<a href="#9" id="9">In addition, we compare our method with other update approaches for either CTL or fragments of CTL.</a>
<a href="#10" id="10">Lastly, we provide proofs of soundness and completeness and a complexity analysis.</a>
</body>
</html>