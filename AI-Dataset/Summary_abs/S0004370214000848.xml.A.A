<html>
<head>
<meta name="TextLength" content="SENT_NUM:13, WORD_NUM:314">
</head>
<body bgcolor="white">
<a href="#0" id="0">Stochastic Shortest Path Problems (SSPs) are a common representation for probabilistic planning problems.</a>
<a href="#1" id="1">Two approaches can be used to solve SSPs: (i) consider all probabilistically reachable states and (ii) plan only for a subset of these reachable states.</a>
<a href="#2" id="2">Closed policies, the solutions obtained in the former approach, require significant computational effort, and they do not require replanning, i.e., the planner is never re-invoked.</a>
<a href="#3" id="3">The second approach, employed by replanners, computes open policies, i.e., policies for a subset of the probabilistically reachable states.</a>
<a href="#4" id="4">Therefore, when a state is reached in which the open policy is not defined, the replanner is reinvoked to compute a new open policy.</a>
<a href="#5" id="5">In this article, we introduce a special case of SSPs, the depth-based short-sighted SSPs, in which every state has a nonzero probability of being reached using at most t actions.</a>
<a href="#6" id="6">We also introduce the novel algorithm Short-Sighted Probabilistic Planner (SSiPP), which solves SSPs through depth-based short-sighted SSPs and guarantees that at least t actions can be executed without replanning.</a>
<a href="#7" id="7">Therefore, SSiPP can compute both open and closed policies: as t increases, the returned policy approaches the behavior of a closed policy, and for t large enough, the returned policy is closed.</a>
<a href="#8" id="8">Moreover, we present two extensions to SSiPP: Labeled-SSiPP and SSiPP-FF.</a>
<a href="#9" id="9">The former extension incorporates a labeling mechanism to avoid revisiting states that have already converged.</a>
<a href="#10" id="10">The latter extension combines SSiPP and determinizations to improve the performance of SSiPP in problems without dead ends.</a>
<a href="#11" id="11">We also performed an extensive empirical evaluation of SSiPP and its extensions in several problems against state-of-the-art planners.</a>
<a href="#12" id="12">The results show that (i) Labeled-SSiPP outperforms SSiPP and the considered planners in the task of finding the optimal solution when the problems have a low percentage of relevant states; and (ii) SSiPP-FF outperforms SSiPP in the task of quickly finding suboptimal solutions to problems without dead ends while performing similarly in problems with dead ends.</a>
</body>
</html>