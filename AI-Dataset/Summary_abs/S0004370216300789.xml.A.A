<html>
<head>
<meta name="TextLength" content="SENT_NUM:12, WORD_NUM:361">
</head>
<body bgcolor="white">
<a href="#0" id="0">The increasing presence of autonomous (software) systems in open environments in general, and the complex interactions taking place among them in particular, require flexible control and coordination mechanisms to guarantee desirable overall system level properties without limiting the autonomy of the involved systems.</a>
<a href="#1" id="1">In artificial intelligence, and in particular in the multi-agent systems research field, social laws, norms, and sanctions have been widely proposed as flexible means for coordinating the behaviour of autonomous agents in multi-agent settings.</a>
<a href="#2" id="2">Recently, many languages have been proposed to specify and implement norm-based environments where the behaviour of autonomous agents is monitored, evaluated based on norms, and possibly sanctioned if norms are violated.</a>
<a href="#3" id="3">In this paper, we first introduce a formal setting of multi-agent environments based on concurrent game structures which abstracts from concrete specification languages.</a>
<a href="#4" id="4">We extend this formal setting with norms and sanctions, and show how concepts from mechanism design can be used to formally analyse and verify whether a specific behaviour can be enforced (or implemented) if agents follow their subjective preferences.</a>
<a href="#5" id="5">We relate concepts from mechanism design to our setting, where agents' preferences are modelled by linear time temporal logic (LTL) formulae.</a>
<a href="#6" id="6">This proposal bridges the gap between norms and mechanism design allowing us to formally study and analyse the effect of norms and sanctions on the behaviour of rational agents.</a>
<a href="#7" id="7">The proposed machinery can be used to check whether specific norms and sanctions have the designer's expected effect on the rational agents' behaviour or if a set of norms and sanctions that realise the effect exists at all.</a>
<a href="#8" id="8">We investigate the computational complexity of our framework, focusing on its implementation in Nash equilibria and we show that it is located at the second and third level of the polynomial hierarchy.</a>
<a href="#9" id="9">Despite this high complexity, on the positive side, these results are in line with existing complexity results of related problems.</a>
<a href="#10" id="10">Finally, we propose a concrete executable specification language that can be used to implement multi-agent environments.</a>
<a href="#11" id="11">We show that the proposed specification language generates specific concurrent game structures and that the abstract multi-agent environment setting can be applied to study and analyse the behaviour of multi-agent programs with and without norms.</a>
</body>
</html>