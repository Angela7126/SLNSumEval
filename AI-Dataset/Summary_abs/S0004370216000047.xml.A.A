<html>
<head>
<meta name="TextLength" content="SENT_NUM:7, WORD_NUM:213">
</head>
<body bgcolor="white">
<a href="#0" id="0">Answer set programming (ASP) is a popular approach to declarative problem solving which for broader usability has been equipped with external source access.</a>
<a href="#1" id="1">The latter may introduce new constants to the program (known as value invention), which can lead to infinite answer sets and non-termination; to prevent this, syntactic safety conditions on programs are common which considerably limit expressiveness (in particular, recursion).</a>
<a href="#2" id="2">We present liberal domain-expansion (lde) safe programs, a novel generic class of ASP programs with external source access and value invention that enjoy finite restrictability, i.e., equivalence to a finite ground version.</a>
<a href="#3" id="3">They use term bounding functions as a parametric notion of safety, which can be instantiated with syntactic, semantic or combined safety criteria; this empowers us to generalize and integrate many other notions of safety from the literature, and modular composition of criteria makes future extensions easy.</a>
<a href="#4" id="4">Furthermore, we devise a grounding algorithm for lde-safe programs which in contrast to traditional algorithms can ground any such program directly without the need for program decomposition.</a>
<a href="#5" id="5">While we present our approach on top of a proposed formalism in order to make the formalization precise, the general concepts carry over to related formalisms and important special cases as well.</a>
<a href="#6" id="6">An experimental evaluation of lde-safety on various applications confirms the practicability of our approach.</a>
</body>
</html>