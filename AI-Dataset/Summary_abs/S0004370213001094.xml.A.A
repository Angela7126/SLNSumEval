<html>
<head>
<meta name="TextLength" content="SENT_NUM:7, WORD_NUM:152">
</head>
<body bgcolor="white">
<a href="#0" id="0">Recently a logic programming language AC was proposed by Mellarkod et al. [1] to integrate answer set programming and constraint logic programming.</a>
<a href="#1" id="1">Soon after that, a clingcon language integrating answer set programming and finite domain constraints, as well as an ezcsp language integrating answer set programming and constraint logic programming were introduced.</a>
<a href="#2" id="2">The development of these languages and systems constitutes the appearance of a new AI subarea called constraint answer set programming.</a>
<a href="#3" id="3">All these languages have something in common.</a>
<a href="#4" id="4">In particular, they aim at developing new efficient inference algorithms that combine traditional answer set programming procedures and other methods in constraint programming.</a>
<a href="#5" id="5">Yet, the exact relation between the constraint answer set programming languages and the underlying systems is not well understood.</a>
<a href="#6" id="6">In this paper we address this issue by formally stating the precise relation between several constraint answer set programming languages – AC, clingcon, ezcsp – as well as the underlying systems.</a>
</body>
</html>