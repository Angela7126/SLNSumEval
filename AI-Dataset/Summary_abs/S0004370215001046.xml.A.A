<html>
<head>
<meta name="TextLength" content="SENT_NUM:12, WORD_NUM:204">
</head>
<body bgcolor="white">
<a href="#0" id="0">The goal of relation extraction is to detect relations between two entities in free text.</a>
<a href="#1" id="1">In a sentence, a relation instance usually comprises a small number of words, which yields a sparse feature representation.</a>
<a href="#2" id="2">To make better use of limited information in a relation instance, parsing trees and combined features are employed widely to capture the local dependencies of relation instances.</a>
<a href="#3" id="3">However, the performance of parsing tree-based systems is often degraded by chunking or parsing errors.</a>
<a href="#4" id="4">Combined features are used widely, but few studies have addressed how features can be combined to achieve optimal performance.</a>
<a href="#5" id="5">Thus, in this study, we propose a feature assembly method for relation extraction.</a>
<a href="#6" id="6">Six types of candidate features (head noun, POS tag, n-gram, omni-word, etc.)</a>
<a href="#7" id="7">are employed as atomic features and six constraint conditions (singleton, position, syntax, etc.)</a>
<a href="#8" id="8">are used to combine these features in different settings.</a>
<a href="#9" id="9">Depending on the utilization of candidate features, different constraint conditions can be explored to achieve the optimal extraction performance.</a>
<a href="#10" id="10">Our method is effective for capturing local dependencies and it reduces the errors caused by inaccurate parsing.</a>
<a href="#11" id="11">We tested the proposed method using the ACE 2005 Chinese and English corpora, and it achieved state-of-the-art performance, where it was significantly superior to existing methods.</a>
</body>
</html>