<html>
<head>
<meta name="TextLength" content="SENT_NUM:9, WORD_NUM:235">
</head>
<body bgcolor="white">
<a href="#0" id="0">The main contributions of this paper are as follows.</a>
<a href="#1" id="1">Firstly, we extended the notion of ordered completion for first-order programs with aggregates, and showed that the stable models of a program with convex aggregates are corresponding to the models of its ordered completion on finite structures (Theorem 1).</a>
<a href="#2" id="2">This is an important extension as most ASP benchmark programs for real world problems need to use aggregates and these aggregates are indeed convex.</a>
<a href="#3" id="3">Secondly, we showed that convex aggregate is a maximal subclass for the above task.</a>
<a href="#4" id="4">More precisely, given a non-convex aggregate context, we can always construct a normal program under this aggregate context that can never be translated into a first-order sentence with the same type of aggregates providing some assumptions in the complexity theory (Theorem 2).</a>
<a href="#5" id="5">To the best of our knowledge, our negative result is one of the first two results [1] to show that convex aggregates exactly draw a boundary of the expressive power as well as the computational complexity of aggregate atoms in answer set programming.</a>
<a href="#6" id="6">Finally, we showed that we can ground a program with an extensional database into a propositional SMT theory in order to compute the answer sets (Theorem 3).</a>
<a href="#7" id="7">Based on this, we implement an ASP solver and compare it with some modern ASP solvers.</a>
<a href="#8" id="8">The experiments show that this new direction of answer set solving is promising, particularly for non-tight programs on large problem instances.</a>
</body>
</html>