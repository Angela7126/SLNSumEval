<html>
<head>
<meta name="TextLength" content="SENT_NUM:13, WORD_NUM:251">
</head>
<body bgcolor="white">
<a href="#0" id="0">The main contributions of this paper are summarized as follows:</a>
<a href="#1" id="1">We extended the progression semantics for Datalog into a progression definition for first-order normal logic programming and showed that it is equivalent to the well-known stable model semantics.</a>
<a href="#2" id="2">As a consequence, many important and useful notions and techniques in Datalog can be lifted for first-order ASP.</a>
<a href="#3" id="3">We introduced a notion of boundedness for first-order ASP and showed that it coincides with the notions of recursion-freeness and loop-freeness under program equivalence.</a>
<a href="#4" id="4">More interestingly, we showed that these notions exactly capture first-order definability of ASP for normal logic programs.</a>
<a href="#5" id="5">This clearly clarifies the expressive power of the intersection between first-order ASP and classical First-Order Logic (FOL), both from a syntactic and a semantic point of view.</a>
<a href="#6" id="6">Syntactically, it is well known that recursion-free and loop-free logic programs are first-order definable [12], [17], [30].</a>
<a href="#7" id="7">Our result proved a long standing conjecture that this assertion holds the other way around.</a>
<a href="#8" id="8">That is, a first-order definable logic program is essentially equivalent to a recursion-free (loop-free) one.</a>
<a href="#9" id="9">Semantically, our result showed that boundedness draws a clear boundary between first-order definable and indefinable normal logic programs.</a>
<a href="#10" id="10">The progression semantics naturally suggests a new translation from first-order ASP to Satisfiability Modulo Theories (SMT) by introducing new predicates.</a>
<a href="#11" id="11">This translation is of practical relevance since it is has less models than so-called ordered completion [4].</a>
<a href="#12" id="12">To conclude, the progression definition sheds new insights into first-order Answer Set Programming (ASP), including its deep connections and relationships to Datalog, FOL and SMT.</a>
</body>
</html>