<html>
<head>
<meta name="TextLength" content="SENT_NUM:23, WORD_NUM:590">
</head>
<body bgcolor="white">
<a href="#0" id="0">In the SAT community, it is accepted that industrial problems exhibit some kind of structure that is exploited by CDCL SAT solvers.</a>
<a href="#1" id="1">Nowadays, one of the most intriguing questions is how to characterize this structure, with the aim of develop random SAT instances generation models that capture realistically the features of industrial problems, for SAT solving testing/analysis purposes.</a>
<a href="#2" id="2">Recently, the notions of community structure and modularity have been used with success to explain the structure of SAT instances [9], and their hardness [36].</a>
<a href="#3" id="3">We present a modularity-based generator, which generates random k-CNF SAT instances of any desired modularity.</a>
<a href="#4" id="4">Industrial problems are characterized by a high modularity.</a>
<a href="#5" id="5">Therefore, our model can generate more realistic pseudo-industrial random formulas on demand.</a>
<a href="#6" id="6">We validate the adequacy of this model checking that (i) the community structure of the resulting formulas is the expected, (ii) if there exists a phase transition point dependent on the clause/variable ratio, then it is independent on the modularity, and (iii) the SAT solvers performances are consistent to the structure of the formulas generated by our model, i.e. SAT solvers specialized in industrial (random) problems perform better in high modular (low modular) instances.</a>
<a href="#7" id="7">Finally, we use our generator to study how the community structure is affected by some components of the solver.</a>
<a href="#8" id="8">Namely, we study the variables branching heuristics and the clause learning mechanism.</a>
<a href="#9" id="9">We observe that, for a given period of time, the solver tends to focus its decisions on variables of the same community, and learns clauses mostly relating variables of this community.</a>
<a href="#10" id="10">We also show that restarts help to unassign variables belonging to communities where the solver is no longer focused on.</a>
<a href="#11" id="11">Therefore, the community structure of the instance plays an important role in order to explain the success of these techniques, when they are used all together.</a>
<a href="#12" id="12">On the contrary, we see that the solver has a worse performance when it uses instead a learning strategy that does not take into account such structure, as the learning of the decision-induced clause.</a>
<a href="#13" id="13">The Community Attachment model forces some features of the resulting SAT instance to be as much regular as possible.</a>
<a href="#14" id="14">In particular, all clauses have exactly the same number of literals (i.e., k literals), all communities approximately have the same number of variables (i.e., {a mathematical formula}⌊n/c⌋ or {a mathematical formula}⌊n/c⌋+1), and all variables approximately have the same number of occurrences.</a>
<a href="#15" id="15">This allows us to study the real impact of certain SAT solving techniques on the community structure without any undesired secondary effect.</a>
<a href="#16" id="16">On the other hand, real application benchmarks are characterized by a certain variability in the clause size, community size, and number of variable occurrences.</a>
<a href="#17" id="17">Therefore, some natural extensions of the Community Attachment model may consider these cases.</a>
<a href="#18" id="18">With respect to the number of variable occurrences, a possibility would be to assign a distinct probability to each variable, as it is described in [7].</a>
<a href="#19" id="19">In that work, it is proved that if variable i has probability {a mathematical formula}P(i)∼i−β to be selected, then number of variable occurrences k follows a power-law distribution {a mathematical formula}P(k)∼k−α, where {a mathematical formula}α=1/β+1, and the formula is scale-free.</a>
<a href="#20" id="20">Applying the same idea, trying to distribute variables of higher probability among distinct communities, would result into random instances with scale-free structure and high modularity, as observed in real-world instances.</a>
<a href="#21" id="21">There are no works on the distribution of community sizes in real-world SAT instances, although we know that they have a big variability [9].</a>
<a href="#22" id="22">After a study in this direction, we could modify our model to assign more realistic community sizes.</a>
</body>
</html>