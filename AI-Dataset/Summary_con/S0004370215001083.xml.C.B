<html>
<head>
<meta name="TextLength" content="SENT_NUM:29, WORD_NUM:578">
</head>
<body bgcolor="white">
<a href="#0" id="0">In this paper, we have considered the problem of adding new information in networks of ontologies under the light of belief revision.</a>
<a href="#1" id="1">We have dealt with this problem on the basis of the semantics of networks of ontologies.</a>
<a href="#2" id="2">Given a semantics for these networks, we have shown how to transpose classical belief revision postulates to networks of ontologies and to define revision operators.</a>
<a href="#3" id="3">Although they extend local revision, local revision operators alone are not sufficient to revise networks of ontologies according to such postulates.</a>
<a href="#4" id="4">We have defined partial meet revision operators for networks of ontologies.</a>
<a href="#5" id="5">We have also investigated modalities specific to networks of ontologies that can provide a selection function between revisions.</a>
<a href="#6" id="6">These can be used for further defining partial meet revision operators.</a>
<a href="#7" id="7">The proposed belief revision postulates and operators should be seen as inspiration for actual operators.</a>
<a href="#8" id="8">Depending on the type of ontology language used (more or less powerful description logics) and the type of semantics adopted for interpreting alignments, the proposed revision operators may be refined towards more concrete ones.</a>
<a href="#9" id="9">It may also be possible to guide users in choosing a particular revision from such principles.</a>
<a href="#10" id="10">They have already inspired efforts, in particular in alignments and ontology debugging [34], [28].</a>
<a href="#11" id="11">These are usually offline operators, i.e., they are used at ontology or alignment edition time, but they led to actual usable tools.</a>
<a href="#12" id="12">Extending them to larger networks should be possible, if not as interactive tools, as batch analysers.</a>
<a href="#13" id="13">Although we have considered belief revision in first instance, base revision may be more adapted to ontologies and alignments in practical applications.</a>
<a href="#14" id="14">Indeed, ontologies and alignments are usually not closed, and in particular not closed with respect to the network they are involved in, and it may be more practical for users to revise their syntactic formulation.</a>
<a href="#15" id="15">This classical problem of belief/base revision takes a new dimension with networks of ontologies: in classical logic, the syntactic form of an ontology corresponds to its closure.</a>
<a href="#16" id="16">In networks of ontologies, several closures may be considered (classical closure and ω-closure).</a>
<a href="#17" id="17">Embedding an ontology in a network is not a neutral operation and the syntactic form of theories may be more deeply affected by revision.</a>
<a href="#18" id="18">We consider this work as a first step to understanding revision in networks of ontologies that may help consider the problems of base revision.</a>
<a href="#19" id="19">A last question worth considering is: does revision with the classical semantics, i.e., reducing the network of ontologies to a single ontology [6], can simulate the proposed operators?</a>
<a href="#20" id="20">We conjecture that this is not always the case since the structure on which the choice is made (the network) disappears in this semantics.</a>
<a href="#21" id="21">This paper opens new perspectives on revision in networks of ontologies.</a>
<a href="#22" id="22">On the one hand, some questions already raised in classical revision have not been addressed.</a>
<a href="#23" id="23">For instance, we have not considered updating, though it would be very useful when new datasets, alignments and ontologies are updated.</a>
<a href="#24" id="24">It would also be interesting to consider how to adapt the Levi and Harper identities, or similar constraints.</a>
<a href="#25" id="25">On the other hand, there are specific questions that depend on the non-controllability of networks of ontologies.</a>
<a href="#26" id="26">Hence, not only a whole part of the network may be non-revisable, but it may be useful to design distributed revision operators in which ontology “owners” would interact to revise, or not, their ontologies.</a>
<a href="#27" id="27">One can even imagine that each ontology is assigned a different operator.</a>
<a href="#28" id="28">This would be useful when these ontologies are expressed in different logics.</a>
</body>
</html>