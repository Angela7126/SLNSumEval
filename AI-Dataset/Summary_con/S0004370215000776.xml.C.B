<html>
<head>
<meta name="TextLength" content="SENT_NUM:24, WORD_NUM:530">
</head>
<body bgcolor="white">
<a href="#0" id="0">In this paper we studied the computational complexity of abstract dialectical frameworks using approximation fixpoint theory.</a>
<a href="#1" id="1">We showed numerous novel results for two families of ADF semantics, the approximate and ultimate semantics, which are themselves inspired by argumentation and AFT.</a>
<a href="#2" id="2">We showed that in most cases the complexity increases by one level of the polynomial hierarchy compared to the corresponding reasoning tasks on AFs.</a>
<a href="#3" id="3">Notable differences between the two families of semantics lie in the stable model semantics and in semantics based on conflict-freeness, where the approximate version is easier than its ultimate counterpart.</a>
<a href="#4" id="4">For the restricted, yet powerful class of bipolar ADFs we proved that for the corresponding reasoning tasks AFs and BADFs have (almost) the same complexity, with the single exception of skeptical reasoning among naive pairs.</a>
<a href="#5" id="5">This suggests that many types of relations between arguments can be introduced without increasing the worst-time complexity.</a>
<a href="#6" id="6">On the other hand, our results again emphasize that arbitrary (non-bipolar) ADFs cannot be compiled into equivalent Dung AFs in deterministic polynomial time, unless the polynomial hierarchy collapses to the first level.</a>
<a href="#7" id="7">Under the same assumption, ADFs cannot be implemented directly with methods that are typically applied to AFs, for example answer-set programming [31].</a>
<a href="#8" id="8">Our results on the complexity of bipolar ADFs led to our extending the ADF system diamond[32] with specialized implementation techniques for bipolar ADFs.</a>
<a href="#9" id="9">In the future, we also plan to accommodate the approximate semantics family into diamond.</a>
<a href="#10" id="10">In another direction of work, QBF encodings for general ADFs were developed and implemented in the system qadf[21].</a>
<a href="#11" id="11">For further future work several promising directions are possible.</a>
<a href="#12" id="12">Studying easier fragments of ADFs as well as parameterized complexity analysis can lead to efficient decision procedures, as is witnessed for AFs [30], [29].</a>
<a href="#13" id="13">We also deem it auspicious to use alternative representations of acceptance conditions, for instance by employing techniques from knowledge compilation [16].</a>
<a href="#14" id="14">In recent related work, Gaggl et al. [34] analyzed the computational complexity of naive-based ADF semantics as defined by Gaggl and Strass [33].</a>
<a href="#15" id="15">A detailed comparison of the two types of semantics and their respective complexities is left for future work.</a>
<a href="#16" id="16">A complexity analysis of other useful AF semantics would also reveal further insights, for example semi-stable semantics [14] or ideal semantics [25], [26].</a>
<a href="#17" id="17">Furthermore in [39], [38] several extension-based semantics for ADFs are proposed and a complexity analysis would be interesting.</a>
<a href="#18" id="18">Bogaerts et al. [6] recently defined a new semantics for ADFs (the grounded fixpoint semantics) that is not unlike (ultimate) stable models.</a>
<a href="#19" id="19">This similarity is also backed up by their initial complexity analysis, and a more detailed study might be interesting future work.</a>
<a href="#20" id="20">Another recent new ADF semantics are the F-stable models defined by Alviano and Faber [1]; the complexity of that semantics is as yet unexplored.</a>
<a href="#21" id="21">For semantical analysis, it would be useful to consider principle-based evaluations for ADFs [2].</a>
<a href="#22" id="22">Furthermore it appears natural to compare (ultimate) ADF semantics and ultimate logic programming semantics [20] in approximation fixpoint theory, in particular with respect to computational complexity.</a>
<a href="#23" id="23">Finally, we want to apply the general operator splitting results of Vennekens et al. [46] to abstract argumentation and compare them to the stand-alone results obtained for AFs [3] and ADFs [36].</a>
</body>
</html>